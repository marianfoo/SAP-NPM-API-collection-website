{
  "packages": [
    {
      "name": "abap-deploy",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-08-13T09:02:07.425Z",
      "updatedAt": "2022-04-06T21:36:21.204Z",
      "readme": "# abap-deploy\n\n## Installation\n\n```\nnpm install @sap/abap-deploy\n```\n\n## Simple Usage\n\n- execute `abap-deploy` in your terminal and answer the questions in the terminal.\n- or `abap-deploy --help` to explore the CLI Options.\n\n### Running CLI on local environment\n\n#### Prerequisite:\n\nIn order to run the abap-deploy CLI on your local environment, you need to add SAP Global Root CA Certificate to your trusted certificate list.\nThis can be achieved by navigating to your SAP System using your browser (e.g. `https://<host>:<port>/sap/bc/adt/discovery`), exporting the certificate from your browser, and then adding it to NODE_EXTRA_CA_CERTS\nYou can find more details in here: `https://help.sap.com/viewer/a9f57505bbb34a6da3c5ba3a49d409d8/Latest/en-US/4b318bede7eb4021a8be385c46c74045.html`\n\n- Add: \"@sap/abap-deploy\": \"`<version>`\" to devDependencies section of your project's package.json\n- Execute `npm install`\n- Execute `npm run build`\n- Execute `abap-deploy` in your terminal and answer the questions in the terminal.\n\nNote: When requested to provide Target System url make sure you are using https and not http.\n\n## In Depth Guide\n\n### Interactive mode\n\nBy default the abap-deploy tool will ask the user for any missing configuration.\n\n### CLI Arguments\n\nConfiguration options may be passed as command line arguments, e.g:\n`abap-deploy --targetSystem=https://foo.com --client=010`\n\nThe list of CLI options can be printed by running `abap-deploy --help`\n\nCLI arguments may be useful to avoid re-typing the same values or to inject values from environment variables for certain options.\n\n### Configuration files\n\nAny configuration options that can be set via the command line can also be specified within a separate configuration file. A variety of default config files flavors are available:\n\n| File name               | File Association |\n| ----------------------- | ---------------- |\n| `.abap-deployrc`        | JSON or YAML     |\n| `.abap-deployrc.json`   | JSON             |\n| `.abap-deployrc.yaml`   | YAML             |\n| `.abap-deployrc.yml`    | YAML             |\n| `.abap-deployrc.js`     | CommonJS export  |\n| `abap-deploy.config.js` | CommonJS export  |\n\nThese default configuration files will be searched \"upwards\" starting from the CWD.\n\n#### Custom Name Configuration Files.\n\nA specific configuration file path may be provided using the configPath option, e.g:\n\n- `abap-deploy --config-path=./my-custom.config.json`\n\nMultiple custom name configuration files may be useful to manage presets of deployment\nscenarios, e.g `test` vs `productive` systems.\n\n#### package.json configuration\n\nThe configuration can also be embedded in the project's package.json inside the \"abap-deploy\" key, e.g:\n\n- ```json\n  {\n    \"name\": \"myApp\",\n    \"version\": \"0.2.0\",\n    \"dependencies\": {},\n    \"devDependencies\": {},\n    \"abap-deploy\": {}\n  }\n  ```\n\n#### Sample JSON Configuration File\n\n```json\n{\n  \"deploy\": {\n    \"sourceFolder\": \"./dist\",\n    \"targetSystem\": \"http://abc.com\",\n    \"client\": \"010\",\n    \"username\": \"Tom\",\n    \"password\": \"abcd1234\",\n    \"appName\": \"foo\"\n  },\n  \"cli\": {\n    \"interactiveFallBack\": false\n  }\n}\n```\n\n#### Sample YAML Configuration File\n\n```yaml\ndeploy:\n  sourceFolder: \"./dist\"\n  targetSystem: http://abc.com\n  client: \"010\"\n  username: Tom\n  password: abcd1234\n  appName: foo\ncli:\n  interactiveFallBack: false\n```\n\n### Combining Interactive / CLI / Config Files\n\nOptions from different sources have different precedence levels.\n\n- CLI arguments (e.g --source-folder) options have the highest priority and will override any other options.\n- Configuration files options are next on the priority list.\n- Interactive options are the lowest priority and will only be asked for options which have no values assigned by either CLI/Config FIle.\n\n### Options Reference\n\n#### sourceFolder\n\n|                 |                                                |\n| --------------- | ---------------------------------------------- |\n| Description     | Project's Pre-Built Artifacts Folder to Deploy |\n| Type            | String                                         |\n| CLI Name        | `--source-folder`                              |\n| CLI Alias       | `--sf`                                         |\n| Config File Key | `deploy.sourceFolder`                          |\n| Default         | `./dist` (if exists)                           |\n\n#### targetSystem\n\n|                 |                              |\n| --------------- | ---------------------------- |\n| Description     | ABAP system URL to Deploy to |\n| Type            | String                       |\n| CLI Name        | `--target-system`            |\n| CLI Alias       | `--ts`                       |\n| Config File Key | `deploy.targetSystem`        |\n\n#### client\n\n|                 |                           |\n| --------------- | ------------------------- |\n| Description     | ABAP system client number |\n| Type            | String                    |\n| CLI Name        | `--client`                |\n| CLI Alias       | `--c`                     |\n| Config File Key | `deploy.client`           |\n\n#### username\n\n|                 |                      |\n| --------------- | -------------------- |\n| Description     | ABAP System username |\n| Type            | String               |\n| CLI Name        | `--username`         |\n| CLI Alias       | `--u`                |\n| Config File Key | `deploy.username`    |\n\n#### password\n\n|                 |                      |\n| --------------- | -------------------- |\n| Description     | ABAP System password |\n| Type            | String               |\n| CLI Name        | `--password`         |\n| CLI Alias       | `--p`                |\n| Config File Key | `deploy.password`    |\n\n#### appName\n\n|                 |                                  |\n| --------------- | -------------------------------- |\n| Description     | Application Name (folder in BSP) |\n| Type            | String                           |\n| CLI Name        | `--app-name`                     |\n| CLI Alias       | `--ap`                           |\n| Config File Key | `deploy.appName`                 |\n\n#### description\n\n|                 |                         |\n| --------------- | ----------------------- |\n| Description     | Application Description |\n| Type            | String                  |\n| CLI Name        | `--description`         |\n| CLI Alias       | `--d`                   |\n| Config File Key | `deploy.description`    |\n\n#### interactiveFallBack\n\n|                 |                                                           |\n| --------------- | --------------------------------------------------------- |\n| Description     | Fallback to Interactive mode in case of missing arguments |\n| Type            | Boolean                                                   |\n| CLI Name        | `--interactive-fallback`                                  |\n| CLI Alias       | `--if`                                                    |\n| Config File Key | `cli.interactiveFallBack`                                 |\n| Default         | true                                                      |\n\n#### configPath\n\n|                 |                                     |\n| --------------- | ----------------------------------- |\n| Description     | Relative Path to Configuration file |\n| Type            | Boolean                             |\n| CLI Name        | `--config-path`                     |\n| CLI Alias       | `--cf`                              |\n| Config File Key | `cli.configPath`                    |\n| Default         | See \"Configuration Files\" section   |\n\n#### logLevel\n\n|                 |                                                                                                                                                                                           |\n| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Description     | The level of logs to report for notification purposes. Any logs of a higher level than the logLevel setting will be written to the abap-deploy.log file in the current working directory. |\n| Type            | \"off\" or \"fatal\" or \"error\" or \"warn\" or \"info\" or \"debug\" or \"trace\"                                                                                                                     |\n| CLI Name        | `--log-level`                                                                                                                                                                             |\n| CLI Alias       | `--ll`                                                                                                                                                                                    |\n| Config File Key | `cli.logLevel`                                                                                                                                                                            |\n| Default         | \"off\"                                                                                                                                                                                     |\n\n### Support channel\n\nFor reporting an issue, open a BCP ticket with component CA-BAS-DPL-ABAP\nFor reporting a feature request, please open an influence request (https://influence.sap.com/sap/ino/#campaign/2538)\n",
      "changelog": "<a name=\"0.10.19\"></a>\n\n## [0.10.19](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.10.15...v0.10.19) (2020-12-23)\n\n### Bug Fixes\n\n- add CondenseMessagesInHttpResponseHeader parameter in update url ([#61](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/61)) ([de0f2cf](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/de0f2cf))\n- dummy version for github testing ([#59](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/59)) ([291e3e0](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/291e3e0))\n\n<a name=\"0.10.11\"></a>\n\n## [0.10.17](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.10.11...v0.10.17) (2020-11-10)\n\n### Bug Fixes\n\n- devxbugs 7825 abap-deploy does not specify condense parameter when updating\n\n<a name=\"0.10.11\"></a>\n\n## [0.10.11](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.9.5...v0.10.11) (2020-10-15)\n\n### Bug Fixes\n\n- devxbugs 7659 use dest for onpremise ([#46](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/46)) ([c19eecb](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/c19eecb))\n- devxbugs-7475 deploy fail in case app id is changed ([#47](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/47))\n\n### Features\n\n- support local NoAuth by default ([#42](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/42)) ([bd70b5c](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/bd70b5c))\n\n<a name=\"0.10.7\"></a>\n\n## [0.10.7](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.9.6...v0.10.7) (2020-08-05)\n\n### Features\n\n- Support abap deploy from local environment\n\n<a name=\"0.9.5\"></a>\n\n## [0.9.5](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.8...v0.9.5) (2020-07-29)\n\n### Bug Fixes\n\n- fix ([7806129](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/7806129))\n- remove sap procedures from official README file ([1e546df](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/1e546df))\n- typo error ([e68bb3d](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/e68bb3d))\n\n# [0.9.2](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.9.1...v0.9.2)\n\n### Bug Fixes\n\n- s4hana use host name and support uppercase\n\n# [0.9.0](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.8...v0.9.0) (2020-06-17)\n\n### Bug Fixes\n\n- fix header content-type ([8cc1212](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/8cc121285990f3f0fe14a1f33297771c0dc21b74))\n\n### Features\n\n- handle valid ato response and tests ([1e01f80](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/1e01f80e12e8d2c94ac0d846bb7a9c9b8f67127b))\n- [DEVXTOKYO-1673] Deploy Fiori app to S4Cloud sys ([e1699b8](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/e1699b872f496ba8c39da7582c1cbc086e3cfa7b))\n\n# [0.7.8](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.3...v0.7.8) (2020-06-03)\n\n### Bug Fixes\n\n- encode customer namespace\n- update string + remove odata_abap usage in deploy ([79fa61b](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/79fa61b9c66825db42feb22a5fce005cb76f56db))\n- update string + remove odata_abap usage in deploy ([ed3e691](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/ed3e691bd65a3eb17cff4d8e680629f2c7b6351e))\n\n## [0.7.3](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.6.2...v0.7.3) (2020-05-06)\n\n### Bug Fixes\n\n- bug undefined transport ([#22](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/22)) ([143851c](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/143851c99929b4051a8da94ccae3411deae1686a))\n\n### Features\n\n- enhance console output in success flow and add warnings ([#23](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/23)) ([c7fe6f8](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/c7fe6f883220f7420db9e7afe4846b450fc3d87d))\n\n## [0.7.1](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.0...v0.7.1) (2020-05-05)\n\n### Features\n\n- enhance console output in success flow and add warnings ([983cd42](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/983cd42e825edc439e970946c7d6b43f42a626ec))\n\n<a name=\"0.7.0\"></a>\n\n# [0.7.0](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.6.2...v0.7.0) (2020-05-05)\n\n### Features\n\n- Support deploy to steampunk\n\n<a name=\"0.6.2\"></a>\n\n# [0.6.2](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.5.1...v0.6.2) (2020-04-23)\n\n### Features\n\n- Add support for packge and transport input\n\n<a name=\"0.5.0\"></a>\n\n# [0.5.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.4.0...v0.5.0) (2020-01-05)\n\n### Bug Fixes\n\n- additional fixes for user facing strings ([9d58c94](https://github.tools.sap/devx-wing/abap-deploy/commit/9d58c94))\n\n### Features\n\n- technical writer review for some user facing strings ([#30](https://github.tools.sap/devx-wing/abap-deploy/issues/30)) ([dc19408](https://github.tools.sap/devx-wing/abap-deploy/commit/dc19408))\n- use CondenseMessagesInHttpResponseHeader url param ([cb92da8](https://github.tools.sap/devx-wing/abap-deploy/commit/cb92da8))\n\n<a name=\"0.4.0\"></a>\n\n# [0.4.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.3.0...v0.4.0) (2019-12-30)\n\n### Bug Fixes\n\n- add return before sendDeploy ([7f0dafb](https://github.tools.sap/devx-wing/abap-deploy/commit/7f0dafb))\n\n### Features\n\n- add description Option ([757b462](https://github.tools.sap/devx-wing/abap-deploy/commit/757b462))\n- description validation ([#26](https://github.tools.sap/devx-wing/abap-deploy/issues/26)) ([b73949c](https://github.tools.sap/devx-wing/abap-deploy/commit/b73949c))\n- handle deploy Error Details as plain text ([1ba3036](https://github.tools.sap/devx-wing/abap-deploy/commit/1ba3036))\n- support namespace and Application name validation ([56e1aca](https://github.tools.sap/devx-wing/abap-deploy/commit/56e1aca))\n\n<a name=\"0.3.0\"></a>\n\n# [0.3.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.2.0...v0.3.0) (2019-12-18)\n\n### Bug Fixes\n\n- clear Error Msg when the session cookie is missing ([e6a119a](https://github.tools.sap/devx-wing/abap-deploy/commit/e6a119a))\n- do not print `undefined` for system without client ([8d17719](https://github.tools.sap/devx-wing/abap-deploy/commit/8d17719))\n\n### Features\n\n- getAppStatus even if an appName has been provided by config/args ([ff7a286](https://github.tools.sap/devx-wing/abap-deploy/commit/ff7a286))\n- isAlive visual indicator during network requests ([7df8561](https://github.tools.sap/devx-wing/abap-deploy/commit/7df8561))\n- print Error In Bright Red ([904393f](https://github.tools.sap/devx-wing/abap-deploy/commit/904393f))\n- print Mode(create/update) and appName used before deploy requests ([5be1450](https://github.tools.sap/devx-wing/abap-deploy/commit/5be1450))\n\n<a name=\"0.2.0\"></a>\n\n# [0.2.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.1.0...v0.2.0) (2019-12-17)\n\n### Features\n\n- display ABAP Error Details (if available) ([a372dc1](https://github.tools.sap/devx-wing/abap-deploy/commit/a372dc1))\n\n<a name=\"0.1.0\"></a>\n\n# 0.1.0 (2019-12-17)\n\n- Initial Version\n",
      "downloadsCurrentMonth": 212,
      "downloadsCurrentFortnight": 96,
      "downloads365": 1848,
      "downloadsFortnightGrowth": -17.24,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 172 },
        { "yearMonth": "2021-08", "downloads": 97 },
        { "yearMonth": "2021-09", "downloads": 170 },
        { "yearMonth": "2021-10", "downloads": 174 },
        { "yearMonth": "2021-11", "downloads": 187 },
        { "yearMonth": "2021-12", "downloads": 71 },
        { "yearMonth": "2022-01", "downloads": 125 },
        { "yearMonth": "2022-02", "downloads": 176 },
        { "yearMonth": "2022-03", "downloads": 112 },
        { "yearMonth": "2022-04", "downloads": 228 },
        { "yearMonth": "2022-05", "downloads": 214 }
      ],
      "versions": [
        { "version": "created", "date": "2020-08-13T09:02:07.425Z" },
        { "version": "0.10.8", "date": "2020-08-13T09:02:07.787Z" },
        { "version": "modified", "date": "2022-04-06T21:36:21.204Z" },
        { "version": "0.10.11", "date": "2020-10-20T13:59:39.930Z" },
        { "version": "0.10.16-0.10.16", "date": "2020-11-19T09:31:18.237Z" },
        { "version": "0.10.18", "date": "2020-11-19T12:38:51.837Z" },
        { "version": "0.10.23", "date": "2021-02-09T06:43:40.830Z" },
        { "version": "0.10.27", "date": "2021-07-19T13:43:05.745Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/abap-deploy"
    },
    {
      "name": "apihub-service-provider",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-10-12T07:29:16.965Z",
      "updatedAt": "2022-05-10T16:16:23.098Z",
      "readme": "\n# The apihub-service-provider Repository\n\nThis repository reveals the 'SAP API Business Hub' service provider that can be used for local development.\n\nThe service provider extends the 'Consume-Services', which prompts the user to enter information to extend the generated project.\n\nThe 'SAP API Business Hub' service provider prompts the user to enter input to populate the generated project. After entering the input, the project, which consumes data from the SAP API Business Hub can be built and run.\n\nThe 'SAP API Business Hub' service provider provides a \"modules.json\" file for the 'Consume-services' to discover and prompt its questions. \n\nThe *modules.json* file includes the following parameters: \n\n```\n{\n  \"serviceProvider\": [\n    {\n      \"name\": \"SAP API Business Hub\", \t// The displayed name in the yeoman-based prompt as part of the service provider's list.\n      \"path\": \"/extbin/serviceProviders/apihub-service-provider\", \t// The path to the service provider's package.\n      \"entryPoint\": { \t\t\t// The main entry point to trigger the specific service provider's logic.\n        \"class\": \"ApihubServiceProvider\",\n        \"method\": \"apihubServiceProviderPrompt\"\n      }\n    }\n  ]\n}\n```\n\nThe 'SAP API Business Hub' service provider returns the following JSON containing the connectivity details below.\n \n```\nConnectivityDetails {\n  destination: { Name: \"apihub_sandbox\" },\n  serviceURL: \"/dummyPath\",\n  apiKey: \"dummyApiKey\",\n  serviceMetadata: {\n    odataContent: \"<dummyXML></dummyXML>\" \n    }\n}\n```\n\n# Public APIs\n\n### getListODataServices\n**Description:** *Provides a list of OData services for 'SAP API Business Hub'*  \n**Signiture:** ```async function getListODataServices()```  \n**Input:** none  \n**Output:** Json object containing array of OData services  \n\n### getApihubKey\n**Description:** *Retrieves an APIhub key from 'SAP API Business Hub' when passing in a valid username and password*  \n**Signiture:** ```async function getApihubKey(username: string, password: string): Promise<string>```  \n**Input:** *username:* The user's username that is used to login to 'SAP API Business Hub'  \n           *password:* The user's password that is used to login to 'SAP API Business Hub'  \n**Output:** Promise that resolves a string holding the user's apihub user key  \n\n### getMetadata\n**Description:** *Retrieves xml metadata for a specific service - as configured in the connectivityDetails.servicepath*  \n**Signiture:** ```async function getMetadata(connectivityDetails: ConnectionDetails, serviceName: string)```  \n**Input:** *connectivityDetails:* Object that contains the selected 'servicePath' and the generated 'apiHubApiKey'  \n  *serviceName:* The name of the selected service  \n**Output:** Beautified XML object including the selected service's metadata  \n\n### getListOfServiceName\n**Description:** *Retrieves a mapped list of all the OData services names for 'SAP API Business Hub'*  \n**Signiture:** ```function getListOfServiceNames(jsonServices: any): string[]```  \n**Input:** Json object including array of OData services  \n**Output:** String array of service names  \n",
      "downloadsCurrentMonth": 143,
      "downloadsCurrentFortnight": 34,
      "downloads365": 900,
      "downloadsFortnightGrowth": -68.81,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 146 },
        { "yearMonth": "2021-08", "downloads": 102 },
        { "yearMonth": "2021-09", "downloads": 107 },
        { "yearMonth": "2021-10", "downloads": 49 },
        { "yearMonth": "2021-11", "downloads": 37 },
        { "yearMonth": "2021-12", "downloads": 27 },
        { "yearMonth": "2022-01", "downloads": 38 },
        { "yearMonth": "2022-02", "downloads": 30 },
        { "yearMonth": "2022-03", "downloads": 33 },
        { "yearMonth": "2022-04", "downloads": 144 },
        { "yearMonth": "2022-05", "downloads": 152 }
      ],
      "versions": [
        { "version": "created", "date": "2020-10-12T07:29:16.965Z" },
        { "version": "1.0.2", "date": "2020-10-12T07:29:17.384Z" },
        { "version": "modified", "date": "2022-05-10T16:16:23.098Z" },
        { "version": "1.0.5", "date": "2021-02-08T15:02:23.610Z" },
        { "version": "1.1.0", "date": "2021-07-13T11:29:28.994Z" },
        { "version": "1.2.0", "date": "2021-07-21T12:42:32.665Z" },
        { "version": "1.2.1", "date": "2021-07-28T12:48:06.438Z" },
        { "version": "1.2.2", "date": "2021-08-10T11:31:37.670Z" },
        { "version": "1.3.0", "date": "2022-04-26T09:15:24.384Z" },
        { "version": "1.3.1", "date": "2022-04-27T13:27:15.461Z" },
        { "version": "1.5.0", "date": "2022-05-10T16:16:22.996Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/apihub-service-provider"
    },
    {
      "name": "approuter",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T19:49:25.398Z",
      "updatedAt": "2022-06-06T16:29:36.430Z",
      "readme": "@sap/approuter\n==============\n\n<!-- toc -->\n\n- [Overview](#overview)\n- [Deploying a business application with microservices](#deploying-a-business-application-with-microservices)\n- [Working directory](#working-directory)\n- [Configurations](#configurations)\n  * [Destinations](#destinations)\n    + [Environment-destinations](#environment-destinations)\n    + [Destination-service](#destination-service)\n  * [UAA configuration](#uaa-configuration)\n  * [Additional headers configuration](#additional-headers-configuration)\n  * [Additional cookies configuration](#additional-cookies-configuration)\n  * [Plugins configuration](#plugins-configuration)\n  * [Session timeout configuration](#session-timeout-configuration)\n  * [X-Frame-Options configuration](#x-frame-options-configuration)\n  * [Cross-Origin Resource Sharing configuration](#cross-origin-resource-sharing-configuration)\n  * [Direct Routing URI Patterns configuration](#direct-routing-uri-patterns-configuration)\n  * [NodeJS Minimal Logging Level configuration](#nodejs-minimal-logging-level-configuration)\n- [Routes](#routes)\n  * [Example routes](#example-routes)\n- [Replacements](#replacements)\n- [*xs-app.json* configuration file](#xs-appjson-configuration-file)\n  * [*welcomeFile* property](#welcomefile-property)\n  * [*authenticationMethod* property](#authenticationmethod-property)\n  * [*routes* property](#routes-property)\n  * [*login* property](#login-property)\n  * [*logout* property](#logout-property)\n  * [*destinations* property](#destinations-property)\n  * [*services* property](#services-property)\n  * [*responseHeaders* property](#responseHeaders-property)\n  * [*compression* property](#compression-property)\n  * [*pluginMetadataEndpoint* property](#pluginmetadataendpoint-property)\n  * [*whitelistService* property](#whitelistservice-property)\n  * [*websockets* property](#websockets-property)\n  * [*errorPage* property](#errorpage-property)\n  * [*cors* property](#cors-property)\n  * [Complete example of an *xs-app.json* configuration file](#complete-example-of-an-xs-appjson-configuration-file)\n- [Headers](#headers)\n  * [Forwarding Headers](#forwarding-headers)\n  * [Hop-by-hop Headers](#hop-by-hop-headers)\n  * [Custom Headers](#custom-headers)\n  * [Authorization Header](#authorization-header)\n- [CSRF Protection](#csrf-protection)\n- [Support of SAP Statistics](#support-of-sap-statistics)\n- [Connectivity](#connectivity)\n- [SaaS Application Registration in CF](#saas-application-registration-in-cloud-foundry)\n  * [How To Expose Approuter for SaaS Subscription](#how-to-expose-approuter-for-saas-subscription)\n- [Authentication with Identity Service (IAS)](#authentication-with-identity-service-ias)\n- [Mutual TLS Authentication (mTLS) and Certificates Handling](#mutual-tls-authentication-mtls-and-certificates-handling)\n- [Integration with HTML5 Application Repository](#integration-with-html5-application-repository)\n- [Integration with Business Services](#integration-with-business-services)\n- [Web Sockets](#web-sockets)\n- [Session Handling](#session-handling)\n  * [Session Contents](#session-contents)\n- [External Session Management](#external-session-management)\n- [Service to Application Router](#service-to-application-router)\n- [Central Logout](#central-logout)\n- [User API Service](#user-api-service)\n- [Allowlist Service](#whitelist-service)\n  * [Enable the service](#enable-the-service)\n  * [Configuring allowed hostnames / domains](#configuring-allowed-hostnames--domains)\n  * [Return value](#return-value)\n- [Scaling](#scaling)\n- [Sizing Guide for Application Router](#sizing-guide-for-application-router)\n- [Configure server-side HTTPS](#configure-server-side-https)\n- [Audit-Log Service](#audit-log-service)\n- [Troubleshooting](#troubleshooting)\n- [Getting Support](#getting-support)\n- [Extending Application Router](#extending-application-router)\n- [Best practices](#best-practices)\n  * [Security best practices](#security-best-practices)\n    + [Content-Security-Policy](#content-security-policy)\n\n<!-- tocstop -->\n\n## Overview\n\nWhen a business application consists of several different apps  (microservices),\nthe application router is used to provide a single entry point to that business application.\nIt has the responsibility to:\n\n* Dispatch requests to backend microservices (reverse proxy)\n* Authenticate users\n* Serve static content\n\n\n![Application router overview diagram](doc/app-router-diagram.png \"Overview diagram\")\n\n\nLet's think of the different apps (microservices) as _destinations_ to which the incoming request will be forwarded.\nThe rules that determine which request should be forwarded to which destination are called _routes_.\nFor every destination there can be more than one route. You may read more on the concept of [routes](#routes) later in this document.\nIf the backend microservices require authentication, the application router can be configured to authenticate the users and propagate the user information.\nAgain by using routes, the application router can serve static content.\n\nThe application router is designed to work in XS Advanced - Cloud Foundry and XS OnPremise Runtime.\n\nA calling component accesses a target service by means of the application router only if there is no JWT token available, for example, \nif a user invokes the application from a Web browser.\nIf a JWT token is already available, for example, because the user has already been authenticated, or the calling component uses a JWT token for its own OAuth client,\nthe calling component calls the target service directly; it does not need to use the application router.\n\n**Note** that the application router does not hide the backend microservices in any way. They are still directly accessible bypassing the application router. So the backend microservices _must_ protect all their endpoints by validating the JWT token and implementing proper scope checks. Network isolation is not provided currently by the platform.\n\n## Deploying a business application with microservices\n\nFor example we can have a business application that has the following structure:\n\n<pre>\n+-- manifest.yml\n+-- manifest-op.yml\n|  +-- microservice-1\n|  | +-- ...\n|  | +-- ...\n|  +-- microservice-2\n|  | +-- ...\n|  | +-- ...\n|  +-- web\n|  | +-- ...\n|  | +-- ...\n</pre>\n\nThe *manifest.yml* file is used to deploy the business application on Cloud Foundry and the *manifest-op.yml* - on the XS OnPremise Runtime.\nThese files should describe all the microservices for that business application.\n\nFolders are used to isolate the different microservices. Let's assume that the application router is the microservice in the *web* folder (every business application has its own application router).\nHere is how we can include the application router:\n\n* Manually create the *node_modules* folder in the *web* folder.\n* Copy and paste the folder that contains the self-contained application router into *node_modules*. In this example the name of that folder is *@sap/approuter*, see the *start* script in the *package.json* below.\n* Check the version of the application router you just copied.\n* Create a *package.json* file in *web* with content similar to the following and replace the version's value with the version of your application router:\n\n```json\n{\n    \"name\": \"hello-world-approuter\",\n    \"dependencies\": {\n       \"@sap/approuter\": \"2.6.1\"\n    },\n    \"scripts\": {\n        \"start\": \"node node_modules/@sap/approuter/approuter.js\"\n    }\n}\n```\n\nIn order to use the application router you don't have to write any JavaScript code.\nOnly some configurations have to be provided in the *web* folder. Here is a complete example:\n\n<pre>\n+-- web\n| +-- package.json\n| +-- xs-app.json\n| +-- resources\n| | +-- hello-world.html\n| | +-- my-page.html\n| +-- node_modules\n| |   +-- ...\n| +-- default-env.json\n| +-- default-services.json\n</pre>\n\nThe *web* folder contains the *package.json*, *node_modules*, some configuration files used by the application router, and static resources to be served.\nYou can read more about the [configurations](#configurations) later in this document.\n\nBy default, the application router runs on port 5000 (if started locally) or it takes the port from the `PORT` environment variable.\n\n## Working directory\n\nThe working directory contains configuration files that the application router needs and static resources that can be served at runtime.\nIn the [previous example](#deploying-a-business-application-with-microservices), the *web* folder is the working directory.\nBy default the current directory is the working directory.\nIt is possible to configure it during start up of the application router with the following command line argument:\n\n```bash\nnode approuter.js -w <working-dir>\n```\n\nApplication router will abort if the working directory does not contain *xs-app.json* file.\n\n## Configurations\n\nThe application router makes use of the following configurations:\n\n- [Main configuration](#xs-appjson-configuration-file) - this is the *xs-app.json* file. This file is mandatory and contains the main configurations of the application router.\n\n- [UAA configuration](#uaa-configuration) - the application router reads this configuration either from the `VCAP_SERVICES` environment variable (when deployed on Cloud Foundry or XS Advanced OnPremise Runtime)\nor from the *default-services.json* file (when running locally). Refer to the documentation of the `@sap/xsenv` package for more details.\n\n- Configurations from the environment - these configurations are either read from the application router's environment (when deployed on Cloud Foundry or XS Advanced OnPremise Runtime)\nor from the *default-env.json* file (when running locally). Refer to the documentation of the `@sap/xsenv` package for more details.\nThe environment variables that the application router takes into account are:\n\n\nConfiguration | Environment variable | Description\n------------- | -------------------- | ------------\n[UAA service name](#uaa-configuration) | `UAA_SERVICE_NAME` | Contains the name of the UAA service to be used.\n[Destinations](#destinations) | `destinations` | Provides information about the available destinations.\n[Additional headers](#additional-headers-configuration) | `httpHeaders` | Provides headers that the application router will return to the client in its responses.\n[Additional cookies](#additional-cookies-configuration) | `COOKIES` | Provides cookies that the application router will return to the client in its responses. Currently only SameSite cookie is supported.\n[Plugins](#plugins-configuration) | `plugins` | A plugin is just like a [*route*](#routes) except that you can't configure some inner properties.\n[Session timeout](#session-timeout-configuration) | `SESSION_TIMEOUT` | Positive integer representing the session timeout in minutes. The default timeout is 15 minutes.\n[X-Frame-Options](#x-frame-options-configuration) | `SEND_XFRAMEOPTIONS`, `httpHeaders` | Configuration for the X-Frame-Options header value.\n[Allowlist service](#whitelist-service) | `CJ_PROTECT_WHITELIST` | Configuration for the allowlist that is preventing clickjack attacks.\n[Web Sockets origins allowlist](#web-sockets) | `WS_ALLOWED_ORIGINS` | An allowlist configuration that is used for verifying the `Origin` header of the initial upgrade request when establishing a web socket connection.\nJWT Token refresh | `JWT_REFRESH` | The time in minutes before a JWT token expires and the application router should trigger a token refresh routine.\nIncoming connection timeout | `INCOMING_CONNECTION_TIMEOUT` | Maximum time in milliseconds for a client connection. After that time the connection is closed. If set to 0, the timeout is disabled. Default: 120000 (2 min)\nTenant host pattern | `TENANT_HOST_PATTERN` | String containing a regular expression with a capturing group. The request host is matched against this regular expression. The value of the first capturing group is used as tenant id.\nDestination host pattern | `DESTINATION_HOST_PATTERN` | String containing a regular expression with a capturing group. The request host is matched against this regular expression. The value of the capturing group is used as destination name.\n[Compression](#compression-property) | `COMPRESSION` | Configuration regarding compressing resources before responding to the client.\n_Secure_ flag of session cookie | `SECURE_SESSION_COOKIE` | Can be set to `true` or `false`. By default, the _Secure_ flag of the session cookie is set depending on the environment the application router runs in. For example, when application router is behind a router (Cloud Foundry's router or SAP Web Dispatcher) that is configured to serve HTTPS traffic, then this flag will be present. During local development the flag is not set. This environment variable can be used to enforce setting or omitting the _Secure_ flag. **Note**: If the Secure flag is enforced, the application router will reject requests sent over unencrypted connection (http).\nTrusted CA certificates | `XS_CACERT_PATH` | List of files paths with trusted CA certificates used for outbound https connections (UAA, destinations, etc.). File paths are separated by [path.delimiter](https://nodejs.org/api/path.html#path_path_delimiter). If this is omitted, several well known \"root\" CAs (like VeriSign) will be used. This variable is set automatically by XSA On-premise runtime.\nReject untrusted certificates | `NODE_TLS_REJECT_UNAUTHORIZED` | By default an outbound https connection is terminated if the remote end does not provide a trusted certificate. This check can be disabled by setting `NODE_TLS_REJECT_UNAUTHORIZED` to `0`. This is a built-in feature of Node.js. **Note:** Do not use this in production as it compromises security!\nExternal reverse proxy flag | `EXTERNAL_REVERSE_PROXY` | Boolean value that indicates the use of application router behind an external reverse proxy (outside of Cloud Foundry domain)\nSkip client credentials tokens load on start | `SKIP_CLIENT_CREDENTIALS_TOKENS_LOAD` | Boolean value that indicates that no client credentials tokens should be created during the application router start phase \n[Cross-Origin Resource Sharing](#cross-origin-resource-sharing-configuration) | `CORS` | Configuration regarding CORS enablement.\nPreserve URL fragment | `PRESERVE_FRAGMENT` | When set to `true` or not set, fragment part of the URL provided during first request of not logged-in user to protected route will be preserved, and after login flow user is redirected to original URL including fragment part. However, this may break programmatic access to Approuter (e.g. e2e tests), since it introduces change in login flow, which is incompatible with Approuter version 4.0.1 and earlier. Setting value to `false` makes login flow backward compatible, however will not take fragment part of the URL into account.\n[Direct Routing URI Patterns](#direct-routing-uri-patterns-configuration) | `DIRECT_ROUTING_URI_PATTERNS` | Configuration for direct routing URI patterns. \n[NodeJS Minimal Logging Level](#nodejs-minimal-logging-level-configuration) | `CF_NODEJS_LOGGING_LEVEL` | Configuration for NodeJS minimal logging level. \nBackend Cookies Secret | `BACKEND_COOKIES_SECRET` | Secret that is used to encrypt backend session cookies in service to Application Router flow. Should be set in case multiple instances of Application Router are used. By default a random sequence of characters is used.\nService to Application Router | `SERVICE_2_APPROUTER` | If `true`, when the SAP Passport header is received from the application router, it will be transferred without modification to the backend application.\nClient certificate header name | `CLIENT_CERTIFICATE_HEADER_NAME` | When set application router will use this header name to get the client certificate from the request header in subscription callback. If not provided the default header name `x-forwarded-client-cert` is used.\nServer Keep Alive | `SERVER_KEEP_ALIVE` | server keep alive timeout (positive integer in milliseconds).\nMinimum Token Validity | `MINIMUM_TOKEN_VALIDITY` | positive integer in seconds. When set, approuter will check that the token returned from the authorization service has an expiration time higher than the minimum token validity value.\n\n\n**Note:** all those environment variables are optional.\n\n\n### Destinations\n\nThe destinations configuration can be provided by the `destinations` environment variable or by destination  service. There has to be a destination for every single app (microservice) that is a part of the business application.\n\n#### Environment destinations\n\nThe destinations configuration is an array of objects. Here are the properties that a destination can have:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nname | String | | A unique alphanumeric identifier of the destination.\nurl | String | | URL of the app (microservice).\nproxyHost | String | x | The host of the proxy server used in case the request should go through a proxy to reach the destination.\nproxyPort | String | x | The port of the proxy server used in case the request should go through a proxy to reach the destination.\nforwardAuthToken | Boolean | x | If `true`, the OAuth token is sent to the destination. The default value is `false`. This token contains user identity, scopes and other attributes. It is signed by the UAA or IAS service, so it can be used for user authentication and authorization with backend services.\nstrictSSL | Boolean | x | Configures whether the application router should reject untrusted certificates. The default value is `true`.<br />**Note:** Do not use this in production as it compromises security!\ntimeout | Number | x | Positive integer representing the maximum wait time for a response (in milliseconds) from the destination. Default is 30000ms.\nsetXForwardedHeaders | Boolean | x | If `true` , the application router adds X-Forwarded-(Host, Path, Proto) headers to the backend request.Default value is true.\nproxyType | String | x | Configures whether the destination is used to access applications in on-premise networks or on public Internet. Possible value: `OnPremise`. if the property is not provided, it is assumed that it is a public Internet access. <br />**Note:** if `OnPremise` value is set,  binding to SAP Cloud Platform connectivity service is required, and `forwardAuthToken` property should not be set.\n\n\n**Note:** The timeout specified will also apply to the [destination's logout path](#destinations-property) or  [service's logout path](#services-property) (if you have set one). <br />\n**Note:** `proxyHost` and `proxyPort` are optional, but if one of them is defined, then the other one becomes mandatory.\n\nSample content of the destinations environment variable:\n\n```json\n[\n  {\n    \"name\" : \"ui5\",\n    \"url\" : \"https://ui5.sap.com\",\n    \"proxyHost\" : \"proxy\",\n    \"proxyPort\" : \"8080\",\n    \"forwardAuthToken\" : false,\n    \"timeout\" : 1200\n  }\n]\n```\n\nIt is also possible to include the destinations in the *manifest.yml* and *manifest-op.yml* files:\n\n```yml\n- name: node-hello-world\n  memory: 100M\n  path: web\n  env:\n    destinations: >\n                  [\n                    {\"name\":\"ui5\", \"url\":\"https://ui5.sap.com\"}\n                  ]\n```\n\n#### Destination service\n\nDestination configuration can also be read from `destination service` .<br>\nHere are the Approuter limitations to destination properties configuration from destination service :\n\nProperty  | Additional Property | Description\n-------- |:--------:| -----------\nType | |only `HTTP` supported.\nAuthentication |  | All authentication types are supported. <br>**Note:** `User` and `Password` are mandatory if the authentication type is `basic authentication`.<br>**Note:** if the authentication type set to `principal propagation` the ProxyType have to be `on-premise`.<br>**Note:** if the authentication type set to `OAuth2SAMLBearerAssertion`, `uaa.user` scope in xs-security.json is required.\nProxyType |   | Supported proxy type : `on-premise`, `internet`, `private-link`.<br> **Note:** if ProxyType set to `on-premise`, binding to SAP Cloud Platform connectivity service is required.<br> **Note:** The `private-link` proxy type is a beta feature and is not meant for productive use. It is only available in Azure landscapes.\n\n\n##### Optional additional properties:\n\nProperty  | Additional Property | Description\n-------- |:--------:| -----------\nHTML5.ForwardAuthToken | x | If `true` the OAuth token will be sent to the destination. The default value is `false`. This token contains user identity, scopes and other attributes. It is signed by the UAA so it can be used for user authentication and authorization with backend services.<br> **Note:** if ProxyType set to `on-premise`, ForwardAuthToken property should not be set.<br> **Note:** if Authentication type is other than NoAuthentication, ForwardAuthToken property should not be set.\nHTML5.Timeout |  x | Positive integer representing the maximum wait time for a response (in milliseconds) from the destination. Default is 30000ms.**Note:** The timeout specified will also apply to the [destination's logout path](#destinations-property) or [service's logout path](#services-property) (if you have set one). \nHTML5.PreserveHostHeader | x | If `true` , the application router preserves the host header in the backend request.<br />This is expected by some back-end systems like AS ABAP, which do not process x-forwarded-* headers.\nHTML5.DynamicDestination | x | If `true` , the application router allows to use this destination dynamically on host or path level.\nHTML5.SetXForwardedHeaders | x | If `true` , the application router adds X-Forwarded-(Host, Path, Proto) headers to the backend request.Default value is true.\nsap-client | x | If provided, the application router propagates the sap-client and its value as a header in the backend request.<br />This is expected by ABAP back-end systems.\nURL.headers.`<header-name>` | x | If provided, the application router propagates this special attribute in the destination as the header. The application router can get the headers list from the destination API. Existing request headers are not overwritten.\n\n<br />**Note:** \n* In case destination with the same name is defined both in environment destination and destination service, the destination configuration will load from the environment.\n* Destinations on destination service instance level are supported.\n* Only destination client certificates of type p12 are supported.\n* Only destination trust certificates of the type privacy-enhanced mail (PEM) are supported.\n\n### UAA configuration\n\nThe User Account and Authentication (UAA) server is responsible for user authentication.\nIn Cloud Foundry and XS OnPremise Runtime a service is created for this configuration and by using the standard service binding mechanism\nthe content of this configuration is available in the `VCAP_SERVICES` environment variable.</br>\n**Note:** The service should have `xsuaa` in its tags or the environment variable `UAA_SERVICE_NAME` should be specified (stating the exact name of the UAA service).</br>\nDuring local development the UAA configuration is provided in the *default-services.json* file.\nWhen the UAA is used for authentication the user is redirected to the UAA's login page to enter their credentials.\n\nSample content for a *default-services.json* file:\n\n```json\n{\n    \"uaa\": {\n        \"url\" : \"http://my.uaa.server/\",\n        \"clientid\" : \"client-id\",\n        \"clientsecret\" : \"client-secret\",\n        \"xsappname\" : \"my-business-application\"\n    }\n}\n```\n\nThe application router supports the `$XSAPPNAME` placeholder (upper case letters). You may use it in your [route](#routes) configurations in the scope property.\nThe value of `$XSAPPNAME` is taken from the UAA configuration (the `xsappname` property).\n\n### Additional headers configuration\n\nIf configured, the application router can send additional http headers in its responses to the client.\nAdditional headers can be set in the `httpHeaders` environment variable.\n\nSample configuration for additional headers:\n\n```json\n[\n  {\n    \"X-Frame-Options\": \"ALLOW-FROM http://localhost\"\n  },\n  {\n    \"Test-Additional-Header\": \"1\"\n  }\n]\n```\nIn this case, the application router sends two additional headers in the responses to the client.<br>\nCustom response headers, configured in the application router configuration file (xs-app.json) are added to the list of additional http headers.\nIf the response header name already exists in the additional http headers list, the value of the response header name overrides the value of the http header.  \n\n**Caution:** For security reasons, the following headers must not be configured: authorization', 'cookie', and 'set-cookie'.\n\n### Additional cookies configuration\n\nIf configured, the application router will send additional cookie values in its responses to the client.\nAdditional cookie values can be set in the `COOKIES` environment variable.\n\nExample of configuration for cookies in the manifest.yml :\n\n```json\n  env:\n   COOKIES: >\n        { \"SameSite\":\"None\" }\n```\nIn this example, the application router sets the SameSite cookie attribute to None for the JSESSIONID cookie in the responses to the client.\n\nNote: Currently, only the SameSite cookie value is supported. SameSite = \"Strict\" is not supported.\n\n### Plugins configuration\n\nA plugin serves almost the same purpose as [*routes*](#routes). The difference is that plugins can be configured through the environment and that way you can add new routes to the application router without changing the design-time artefact *xs-app.json*. The plugin configuration properties are the same as those of a [*route*](#routes) except that you can't configure `localDir`, `replace` and `cacheControl`.\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nname | String | | The name of this plugin\nsource | String/Object | | Describes a regular expression that matches the incoming [request URL](https://nodejs.org/api/http.html#http_message_url).</br> **Note:** A request matches a particular route if its path __contains__  the given pattern. To ensure the RegExp matches the complete path, use the following form: ^<path>$`. </br> **Note:** Be aware that the RegExp is applied to on the full URL including query parameters.\ntarget | String | x | Defines how the incoming request path will be rewritten for the corresponding destination.\ndestination | String | | An alphanumeric name of the destination to which the incoming request should be forwarded.\nauthenticationType | String | x | The value can be ias, xsuaa, basic, or none. The default authenticationType depends on the authentication service binding: If the application router is bound to the Identity Authentication service, the default authenticationType is ias. Otherwise, the default value is xsuaa. If xsuaa or ias are used, the specified authentication server (Identity Authentication or User Account and Authentication) handles the authentication (the user is redirected to the login form of Identity Authentication or User Account and Authentication). The basic authenticationType works with SAP S/4HANA users, SAP ID service, and Identity Authentication service. For more information, see the SAP Note 3015211 - BASIC authentication options for SAP BTP Cloud Foundry applications. If the value none is used, no authentication is required for this route.\n</br>.\ncsrfProtection | Boolean | x | Enable [CSRF protection](#csrf-protection) for this route. The default value is `true`.\nscope | Array/String/Object | x | Scopes are related to the permissions a user needs to access a resource. This property holds the required scopes to access the target path. Access is granted if the user has at least one of the listed scopes. **Note:** Scopes are defined as part of the xsuaa service instance configuration. You can use `ias` as authenticationType and xsuaa scopes for authorization if the application router is bound to both (`ias` and `xsuaa`).\"\n\nSample content of the `plugins` environment variable:\n```json\n[\n  {\n    \"name\": \"insecurePlugin\",\n    \"source\": \"/plugin\",\n    \"destination\": \"plugin\",\n    \"target\": \"/\",\n    \"csrfProtection\": false,\n    \"scope\": [\"viewer\", \"reader\"]\n  },\n  {\n    \"name\": \"publicPlugin\",\n    \"source\": \"/public-plugin\",\n    \"destination\": \"publicPlugin\",\n    \"authenticationType\": \"none\"\n  }\n]\n```\n\n### Session timeout configuration\n\nFor example, if you have the following line in your *manifest.yml* or *manifest-op.yml* file:\n\n```yml\n- name: node-hello-world\n  memory: 100M\n  path: web\n  env:\n    SESSION_TIMEOUT: 40\n```\n\nAfter 40 minutes of user inactivity (no requests have been sent to the application router), a Central Logout will be triggered due to session timeout.\n\n**Note:** The application router depends on the UAA server for user authentication, if the `authenticationType` for a route is `xsuaa`. The UAA server may have a different session timeout configured.\nIt is recommended that the configurations of the application router and the UAA are identical.<br />\n\n### X-Frame-Options configuration\n\nApplication router sends `X-Frame-Options` header by default with value `SAMEORIGIN`. This behaviour can be changed in 2 ways:\n\n- Disable sending the default header value by setting `SEND_XFRAMEOPTIONS` environment variable to `false`\n- Override the value to be sent via [additional headers configuration](#additional-headers-configuration)\n\n## Cross-Origin Resource Sharing configuration\n\nThe CORS keyword enables you to provide support for cross-origin requests, for example, by allowing the modification of the request header. Cross-origin resource sharing (CORS) permits Web pages from other domains to make HTTP requests to your application domain, where normally such requests would automatically be refused by the Web browser's security policy.\nCross-origin resource sharing(CORS) is a mechanism that allows restricted resources on a webpage to be requested from another domain (/protocol/port) outside the domain (/protocol/port) from which the first resource was served. \nCORS configuration enables you to define details to control access to your application resource from other Web browsers. For example, you can specify where requests can originate from or what is allowed in the request and response headers. \n\nThe CORS configuration can be provided in the CORS environment variable or in the CORS property of the application router configuration file (xs-app.json).\nIf a cross-origin resource sharing (CORS) configuration exists in both the environment variables and the application router configuration file (xs-app.json), the application router gives priority to the CORS configuration in the application router configuration file.\n\nThe CORS configuration is an array of objects. Here are the properties that a CORS object can have:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nuriPattern| String | | A regular expression representing for which source routes CORS configuration is applicable. To ensure the RegExp matches the complete path, surround it with ^ and $. **Defaults:** none.\nallowedOrigin| Array | | A comma-separated list of objects that each one of them containing host name, port and protocol that are allowed by the server.for example: [{?host?: \"www.sap.com\"}] or [{?host?: ?*.sap.com?}]. **Note:** matching is case-sensitive. In addition, if port or protocol are not specified the default is ?_*_?.  **Defaults:** none.\nallowedMethods| Array of upper-case HTTP methods| x | Comma-separated list of HTTP methods that are allowed by the server. **Defaults:** [?GET?, ?POST?, ?HEAD?, ?OPTIONS?] (all) applies. **Note:** matching is case-sensitive.\nmaxAge| Number| x | A single value specifying how long, in seconds, a preflight response should be cached. A negative value will prevent CORS Filter from adding this response header to pre-flight response.  **Defaults:** 1800. \nallowedHeaders| Array of headers| x | Comma-separated list of request headers that are allowed by the serve. **Defaults:** [?Origin?, ?Accept?, ?X-Requested-With?, ?Content-Type?, ?Access-Control-Request-Method?, ?Access-Control-Request-Headers?].\nexposeHeaders| Array of headers| x | Comma-separated list of response headers (other than simple headers) that can be exposed. **Defaults:** none.\nallowedCredentials| Boolean| x | A flag that indicates whether the resource supports user credentials. **Defaults:** true.\n\nSample content of the CORS environment variable:\n\n```json\n[\n  {\n      \"uriPattern\": \"^\\route1$\",\n      \"allowedMethods\": [\n        \"GET\"\n      ],\n      \"allowedOrigin\": [\n        {\n          \"host\": \"my_example.my_domain\",\n          \"protocol\": \"https\",\n          \"port\": 345\n        }\n      ],\n      \"maxAge\": 3600,\n      \"allowedHeaders\": [\n        \"Authorization\",\n        \"Content-Type\"\n      ],\n      \"exposeHeaders\": [\n        \"customHeader1\",\n        \"customHeader2\"\n      ],\n      \"allowedCredentials\": true\n    }\n]\n```\n\nIt is also possible to include the CORS in the *manifest.yml* and *manifest-op.yml* files:\n\n```yml\n- name: node-hello-world\n  memory: 100M\n  path: web\n  env:\n    CORS: >\n      [\n        {\n          \"allowedOrigin\":[\n                            {\n                                \"host\":\"my_host\",\n                                \"protocol\":\"https\"\n                            }\n                          ],\n          \"uriPattern\":\"^/route1$\"\n        }\n      ]\n```\nFor route with source that match the REGEX ?^\\route1$?, the CORS configuration is enabled.\n\n## Direct Routing URI Patterns configuration\n\nWith the direct routing URI patterns configuration, you can define a list of URIs that are directed to the routing configuration file (xs-app.json file) of the application router instead of to a specific application's xs-app.json file that is stored in the HTML5 Application Repository. This configuration improves the application loading time and monitoring options because it prevents unnecessary calls to the HTML5 Application Repository.\n\nThe configuration is an array of strings or regular expressions. \nNote that the following regular expressions are preconfigured in the configuration array: \"^favicon.ico$\", \"^login$\".\nTherefore, do not name your HTML5 applications \"favicon.ico\" or \"login\"!\n\nYou have to provide only the first segment in the URL, after the approuter host. For example, for the URL https://approuter-host/route1/index.html, you enter \"route1\" in the direct routing URI patterns array.\n\nSample content of the Direct Routing URI Patterns environment variable:\n\n```json\n  env:\n    DIRECT_ROUTING_URI_PATTERNS: >\n      [\"route1\", \"^route2$\", \"route3\"]\n```\n\n## NodeJS Minimal Logging Level configuration\n\nWith this configuration, you can set the minimal logging level of the *cf-nodejs-logging-support* library of the application router. The following levels are available:\n\n* *off*\n\n* *error*\n\n* *warn*\n\n* *info*\n\n* *verbose*\n\n* *debug*\n\n* *silly*\n\nThe default value is \"error\".\n\nHere is a sample content for the NodeJS minimal logging level environment variable:\n\n```json\n  env:\n    CF_NODEJS_LOGGING_LEVEL: \"debug\"\n```\n\n**Note** The application router also uses the *@sap/logging* library. To configure the log level for this library, you use the *XS_APP_LOG_LEVEL* environment variable.\n\n## Routes\n\nA route is a configuration that instructs the application router how to process an incoming request with a specific path.\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nsource | String/Object | | Describes a regular expression that matches the incoming [request URL](https://nodejs.org/api/http.html#http_message_url).</br> **Note:** A request matches a particular route if its path __contains__  the given pattern. To ensure the RegExp matches the complete path, use the following form: ^<path>$`. </br> **Note:** Be aware that the RegExp is applied to on the full URL including query parameters.\nhttpMethods | Array of upper-case HTTP methods | x | Which HTTP methods will be served by this route; the methods supported are: `DELETE`, `GET`, `HEAD`, `OPTIONS`, `POST`, `PUT`, `TRACE`, `PATCH` (no extension methods are supported). If this option is not specified, the route will serve any HTTP method.\ntarget | String | x | Defines how the incoming request path will be rewritten for the corresponding destination or static resource.\ndestination | String | x | The name of the destination to which the incoming request should be forwarded.  The destination name can be a static string or a regular expression that defines how to dynamically fetch the destination name from the source property or from the host.\nservice | String | x | The name of the service to which the incoming request should be forwarded.\nendpoint | String | x | The name of the endpoint within the service to which the incoming request should be forwarded. Can only be used in a route containing a service attribute.\nlocalDir | String | x | Folder in the [working directory](#working-directory) from which the application router will serve static content **Note:** localDir routes support only HEAD and GET requests; requests with any other method receive a 405 Method Not Allowed.\npreferLocal | Boolean | x | Defines from which subaccount the destination is retrieved. If preferLocal is true, the destination is retrieved from the provider subaccount. If preferLocal is false or undefined, the destination is retrieved from the subscriber subaccount.\nreplace | Object | x | An object that contains the configuration for replacing placeholders with values from the environment. *It is only relevant for static resources*. Its structure is described in [Replacements](#replacements).\nauthenticationType | String | x | The value can be `xsuaa`,`ias`, `basic` or `none`. The default one is `ias`, if subaccount trusts an ias tenant, else `xsuaa`. When `xsuaa` or `ias` are used the specified authentication server will handle the authentication (the user is redirected to the authentication service login form). The `basic` mechanism works with SAP HANA users, SAP ID Service and SAP Identity Authentication service. Find more details in SAP Note 3015211 - BASIC authentication options for SAP BTP Cloud Foundry applications. If `none` is used then no authentication is needed for this route.\ncsrfProtection | Boolean | x | Enable [CSRF protection](#csrf-protection) for this route. The default value is `true`.\nscope | Array/String/Object | x | Scopes are related to the permissions a user needs to access a resource. This property holds the required scopes to access the target path.\ncacheControl | String | x | String representing the value of the `Cache-Control` header, which is set on the response when serving static resources. By default the `Cache-Control` header is not set. *It is only relevant for static resources.*\nidentityProvider | String | x | The name of the identity provider to use if provided in route’s definition. If not provided, the route will be authenticated with the default identity provider. **Note:** If the authenticationType is set to Basic Authentication or None, do not define the identityProvider property.\n\n\n**Note:** The properties `destination`, `localDir` and `service` are optional, but exactly one of them must be defined. <br />\n**Note:** When using the property `replace` it is mandatory to define the `localDir` property. <br />\n**Note:** The cacheControl property is effective only when one of the following settings is performed:\n*\tThe localDir property was set\n*\tA service pointing to HTML5 Application Repository (\"service\": \"html5-apps-repo-rt\") was set\n \n### Example routes\n\nFor example, if you have a configuration with the following destination:\n\n```json\n[\n  {\n    \"name\" : \"app-1\",\n    \"url\" : \"http://localhost:3001\"\n  }\n]\n```\n\nHere are some sample route configurations:\n\n* Route with a `destination` and no `target`\n\n```json\n{\n    \"source\": \"^/app1/(.*)$\",\n    \"destination\": \"app-1\"\n}\n```\n\nSince there is no `target` property for that route, no path rewriting will take place.\nIf we receive */app1/a/b* as a path, then a request to *http://localhost:3001/app1/a/b* is sent.\nThe source path is appended to the destination URL.\n\n* Route with case-insensitive matching\n\n```json\n{\n    \"source\": {\n      \"path\": \"^/app1/(.*)$\",\n      \"matchCase\": false\n    },\n    \"destination\": \"app-1\"\n}\n```\n\nThis example is much like the previous one,\nbut instead of accepting only paths starting with */app1/*, we accept any variation of _app1_'s case. </br>\nThat means if we receive */ApP1/a/B*, then a request to *http://localhost:3001/ApP1/a/B* is sent. </br>\n**Note:** The property `matchCase` has to be of type boolean. It is optional and has a default value `true`.\n\n* Route with a `destination` and a `target`\n\n```json\n{\n    \"source\": \"^/app1/(.*)$\",\n    \"target\": \"/before/$1/after\",\n    \"destination\": \"app-1\"\n}\n```\n* Route with a `service`, a `target` and an `endpoint`\n\n```json\n{\n     \"source\": \"^/odata/v2/(.*)$\",\n     \"target\": \"$1\",\n     \"service\": \"com.sap.appbasic.country\",\n     \"endpoint\": \"countryservice\"\n}\n```\n\nWhen a request with path */app1/a/b* is received, the path rewriting is done according to the rules in the `target` property.\nThe request will be forwarded to http://localhost:3001/before/a/b/after.\n\n**Note:** In regular expressions there is the term _capturing group_. If a part of a regular expression is surrounded with parenthesis, then what has been matched can be accessed using _$_ + the number of the group (starting from 1).\nIn the last example _$1_ is mapped to the _(.*)_ part of the regular expression in the `source` property.\n\n* Route with dynamic `destination` and `target`\n\n```json\n{\n      \"source\": \"^/destination/([^/]+)/(.*)$\",\n      \"target\": \"$2\",\n      \"destination\": \"$1\",\n      \"authenticationType\": \"xsuaa\"\n    }\n```\nIf you have a another destination configured:\n```json\n[\n\t{\n\t\"name\" : \"myDestination\",\n\t\"url\" : \"http://localhost:3002\"\n\t}\n]\n```\nwhen a request with the path /destination/myDestination/myTarget is received, the destination will be replaced with the url from \"myDestination\", the target will get \"myTarget\" and the request will be redirected to http://localhost:3002/myTarget\n\n**Note:** You can use a dynamic value (regex) or a static string for both destination and target values\n\n**Note:** The approuter first looks for the destination name in the mainfest.yaml file, and if not found, looks for it in the destination service.\n\n* Destination In Host\n\nFor legacy applications that do not support relative URL paths, you need to define your URL in the following way to enable the destination to be extracted from the host\nthe url should be defined in the following way:\n\n```https://<tenant>-<destination>.<customdomain>/<pathtofile>```\n\nTo enable the application router to determine the destination of the URL host, a DESTINATION_HOST_PATTERN attribute must be provided as an environment variable.\n\nExample:\nWhen a request with the path https://myDestination.some-approuter.someDomain.com/app1/myTarget is received, the following route is used:\n```json\n {\n      \"source\": \"^/app1/([^/]+)/\",\n      \"target\": \"$1\",\n      \"destination\": \"*\",\n      \"authenticationType\": \"xsuaa\"\n }\n```\n \n In this example, the target will be extracted from the source and the ‘$1’ value is replaced with ‘myTarget’. The destination value is extracted from the host and the ‘*’ value is replaced with ‘myDestination’.\n\n* Route with a `localDir` and no `target`\n\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"localDir\": \"my-static-resources\"\n}\n```\n\nSince there is no `target` property for that route, no path rewriting will take place.\nIf we receive a request with a path */web-pages/welcome-page.html*, the local file at *my-static-resources/web-pages/welcome-page.html*\nunder the working directory will be served.\n\n* Route with a `localDir` and a `target`\n\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"target\": \"$1\",\n    \"localDir\": \"my-static-resources\"\n}\n```\nIf we receive a request with a path '/web-pages/welcome-page.html', the local file at 'my-static-resources/welcome-page.html'\nunder the working directory will be served.</br> **Note:** The capturing group used in the `target` property.\n\n* Route with `localDir` and `cacheControl`\n\n```json\n{\n  \"source\": \"^/web-pages/\",\n  \"localDir\": \"my-static-resources\",\n  \"cacheControl\": \"public, max-age=1000,must-revalidate\"\n}\n```\n\n* Route with `service` \"html5-apps-repo-rt\" and `cacheControl`\n\n```json\n{\n  \"source\": \"^/index.html$\",\n  \"service\": \"html5-apps-repo-rt\",\n  \"authenticationType\": \"xsuaa\",\n  \"cacheControl\":\"public,max-age=1000,must-revalidate\"\n}\n```\n\n* Route with `httpMethods` restrictions\n\nThe `httpMethods` option allows you to split the same path across different targets depending on the HTTP method. For example:\n\n```json\n{\n  \"source\": \"^/app1/(.*)$\",\n  \"target\": \"/before/$1/after\",\n  \"httpMethods\": [\"GET\", \"POST\"]\n}\n```\n\nThis route will be able to serve only GET and POST requests. Any other method (including extension ones) will get a 405 Method Not Allowed response. The same endpoint can be split across multiple *destinations* depending on the HTTP method of the requests:\n\n```json\n{\n  \"source\": \"^/app1/(.*)$\",\n  \"destination\" : \"dest-1\",\n  \"httpMethods\": [\"GET\"]\n},\n{\n  \"source\": \"^/app1/(.*)$\",\n  \"destination\" : \"dest-2\",\n  \"httpMethods\": [\"DELETE\", \"POST\", \"PUT\"]\n}\n```\n\nThe setup above will route GET requests to the target *dest-1*, DELETE, POST and PUT to *dest-2*, and any other method receives a 405. It is also possible to specify \"catchAll\" routes, namely those that do not specify `httpMethods` restrictions:\n\n```json\n{\n  \"source\": \"^/app1/(.*)$\",\n  \"destination\" : \"dest-1\",\n  \"httpMethods\": [\"GET\"]\n},\n{\n  \"source\": \"^/app1/(.*)$\",\n  \"destination\" : \"dest-2\"\n}\n```\n\nIn the setup above, GET requests will be routed to *dest-1*, and all the rest to *dest-2*.\n\nWhy using `httpMethods`? It is often useful to split the implementation of microservices across multiple, highly specialized applications. For example, a Java application written to serve high amounts of GET requests that return large payloads is implemented, sized, scaled and load-tested differently than applications that offer APIs to upload limited amounts of data. `httpMethods` allows you to split your REST APIs, e.g., */Things* to different applications depending on the HTTP methods of the requests, without having to make the difference visible in the URL of the endpoints.\n\nAnother usecase for `httpMethods` is to \"disable\" parts of the REST API. For example, it may be necessary to disable some endpoints that accept DELETE for external usage. By allowing only certain methods in the route, you can hide functionalities of your microservice that should not be consumable without having to modify the code or configurations of your service.\n\n**Note:** `localDir` and `httpMethods` are incompatible. The following route is invalid:\n\n```json\n{\n  \"source\": \"^/app1/(.*)$\",\n  \"target\": \"/before/$1/after\",\n  \"localDir\": \"resources\",\n  \"httpMethods\": [\"GET\", \"POST\"]\n}\n```\n\nHowever, since `localDir` supports only GET and HEAD requests, returning 405 to requests with any other method, any `localDir` route is \"implicitly\" restricted in terms of supported HTTP methods.\n\n* Route with a `scope`\n\nAn application specific scope has the following format:\n\n```\n<application-name>.<scope-name>\n```\n\nIt is possible to configure what scope the user needs to possess in order to access a specific resource. Those configurations are per [route](#routes).\n\nIn this example, the user should have **at least** one of the scopes in order to access the corresponding resource.\n\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"target\": \"$1\",\n    \"scope\": [\"$XSAPPNAME.viewer\", \"$XSAPPNAME.reader\", \"$XSAPPNAME.writer\"]\n}\n```\n\nFor convenience if our route requires only one scope the `scope` property can be a string instead of an array. The following configuration is valid as well:\n\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"target\": \"$1\",\n    \"scope\": \"$XSAPPNAME.viewer\"\n}\n```\n\nYou can configure scopes for the different HTTP methods (GET, POST, PUT, HEAD, DELETE, CONNECT, TRACE, PATCH and OPTIONS). If some of the HTTP methods are not explicitly set, the behaviour for them is defined by the `default` property. In case there is no `default` property specified and the HTTP method is also not specified, the request is rejected by default.\n\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"target\": \"$1\",\n    \"scope\": {\n      \"GET\": \"$XSAPPNAME.viewer\",\n      \"POST\": [\"$XSAPPNAME.reader\", \"$XSAPPNAME.writer\"],\n      \"default\": \"$XSAPPNAME.guest\"\n    }\n}\n```\n\nThe application router supports the `$XSAPPNAME` placeholder. Its value is taken (and then substituted in the routes) from the UAA configuration.\nYou may read more about it [here](#uaa-configuration). </br>**Note:** The substitution is case sensitive.\n\nYou can use the name of the business application directly instead of using the `$XSAPPNAME` placeholder:\n\n```json\n{\n    \"source\": \"^/backend/(.*)$\",\n    \"scope\": \"my-business-application.viewer\"\n}\n```\n\n* Examples for Routes With `identityProvider`\n\nFor example, we can define several identity providers for different types of users. In this example, there are 2 categories: hospital patients and hospital personnel: \n1. patientsIDP – use for authenticating patients.\n2. hospitalIDP – use for authenticating all hospital personnel (doctors, nurses etc..).\n    \nWe can configure 2 routes with the following identityProvider properties:\n\n```json\n[\n    { \n\t\"source\": \"^/patients/sap/opu/odata/(.*)\",\n\t\"target\": \"/sap/opu/odata$1\",\n\t\"destination\": \"backend\",\n\t\"authenticationType\": \"xsuaa\",\n\t\"identityProvider\": \"patientsIDP\"\n    },\n    {\n        \"source\": \"^/hospital/sap/opu/odata/(.*)\",\n\t\"target\": \"/sap/opu/odata$1\",\n\t\"destination\": \"backend\", \"authenticationType\": \"xsuaa\",\n\t\"identityProvider\": \"hospitalIDP\"\n    }\n]\n```\nSo, a patient who tries to log into the system will be authenticated by patientIDP, and a doctor who tries to log in will be authenticated by hospitalIDP.\n\n**Note:** After logging in using one of the identity providers, to switch to the other one it is necessary to logout and perform a new log in.\n\n**Note:** Currently, dynamic provisioning of the subscriber account identity provider is not supported.\n\n**Note:** Identity provider configuration is only supported in the client side login redirect flow.\n\n\n## Replacements\n\nThis object configures the placeholder replacement in static text resources.\n\nProperty | Type | Description\n-------- | ---- | -----------\npathSuffixes | Array | An array containing the path suffixes that are relative to `localDir`. Only files with a path ending with any of these suffixes will be processed.\nvars | Array | A list with the environment variables that will be replaced in the files matching the suffix.\nservices | Object | An object describing bound services that will provide replacement values. Each property of this object is used to lookup a separate service. The property names are arbitrary. Service lookup format is described in _Service Query_ section in _@sap/xsenv_ documentation.\n\nThe supported tags for replacing environment variables are: `{{ENV_VAR}}` and `{{{ENV_VAR}}}`.\nIf there is such an environment variable it will be replaced, otherwise it will be just an empty string.\n\nFor services you can specify a property from the `credentials` section of the service binding which will be replaced.\nFor example `{{{my_service.property}}}` and `{{my_service.property}}`\n\nEvery variable that is replaced using two-brackets syntax will be HTML-escaped.\n\nFor example if the value of the environment variable is `ab\"cd` the result will be `ab&amp;quot;cd`.</br>\nThe triple brackets syntax is used when the replaced values don't need to be escaped and all values will be unchanged.\n\nFor example, if somewhere in your *xs-app.json* you have a route:\n\n```json\n{\n  \"source\": \"^/get/home(.*)\",\n  \"target\": \"$1\",\n  \"localDir\": \"resources\",\n  \"replace\": {\n    \"pathSuffixes\": [\"index.html\"],\n    \"vars\": [\"escaped_text\", \"NOT_ESCAPED\"],\n    \"services\": {\n      \"my-sapui5-service\": {\n        \"tag\": \"ui5\"\n      }\n    }\n  }\n}\n```\n\nand you have the following `index.html`:\n\n```html\n<html>\n  <head>\n    <title>{{escaped_text}}</title>\n    <script src=\"{{{NOT_ESCAPED}}}/index.js\"/>\n    <script src=\"{{{my-sapui5-service.url}}}\"/>\n  </head>\n</html>\n```\nthen in `index.html`, `{{escaped_text}}` and `{{{NOT_ESCAPED}}}` will be replaced with the values of the environment variables `escaped_text` and `NOT_ESCAPED`.\n\nIf you have a service in VCAP_SERVICES like:\n\n```json\n{\n  \"sapui5_service\": [{\n    \"name\": \"sapui5\",\n    \"tags\": [\"ui5\"],\n    \"credentials\": {\n      \"url\": \"http://sapui5url\"\n    }\n  }]\n}\n```\nthen `{{{my-sapui5-service.url}}}` will be replaced with the `url` property from `sapui5` service - in this case `http://sapui5url`.\n\n**Note:** _All_ index.html files will be processed.\nIf you want to replace only specific files, you have to set the path of the file relative to `localDir`.\n\n**Note:** All files should be **UTF-8** encoded.\n\n**Note:** If a service is not found an error is thrown on startup.\n\n**Note:** If a service and an environment variable from `vars` have the same name, an error is thrown on startup.\n\nThe returned content type is based on the file extension. Currently the supported file extensions are:\n* .json - application/json\n* .txt - text/plain\n* .html - text/html\n* .js - application/javascript\n* .css - test/css\n\nIf the file extension is different, the default content type is `text/html`.\n\nExample for `pathSuffixes`:\n```json\n{\n  \"pathSuffixes\": [\".html\"]\n}\n```\nThe suffix `.html` means that all files with the extension *.html* under `localDir` and it's subfolders will be processed.\n```json\n{\n  \"pathSuffixes\": [\"/abc/main.html\", \"some.html\"]\n}\n```\nThe suffix `/abc/main.html` means that all files named *main.html* which are inside a folder named *abc* will be processed.\n\nThe suffix `some.html` means that all files which have a name that ends with *some.html* will be processed. For example: `some.html`, `awesome.html`.\n\n```json\n{\n  \"pathSuffixes\": [\"/some.html\"]\n}\n```\n\nThe suffix `/some.html` means that all files which have the **exact** name *some.html* will be processed. For example: `some.html`, `/abc/some.html`.\n\n**Note:** URL path parameters are not supported for replacements.\nFor example, replacements will not work if the path looks like '/test;color=red/index.html'. For more information regarding path parameters refer to [http://tools.ietf.org/html/rfc3986#section-3.3](http://tools.ietf.org/html/rfc3986#section-3.3).\n\n## *xs-app.json* configuration file\n\nThis is the main configuration file of the application router.\nIt contains a JSON object with the following properties:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\n[welcomeFile](#welcomefile-property) | String | x | The client is redirected to this page by default, if the request does not have a path. For more information, see [welcomeFile](#welcomefile-property).\n[authenticationMethod](#authenticationmethod-property) | String | x | If set to `none` the UAA login roundtrip is disabled. If the property is not set and authentication is defined per [route](#routes), the value is set to `route` by default.\nsessionTimeout | Number | x | Used to set session timeout. The default is 15 minutes. If the [SESSION_TIMEOUT](#session-timeout) environment variable is set this property will be overwritten.\n[routes](#routes-property) | Array | x | Contains all route configurations. The position of a configuration in this array is of significance for the application router in case a path matches more than one *source*. The first route whose *source* matches the path of the incoming request gets activated.\n[login](#login-property) | Object | x | Contains the configuration for the endpoint of the application router which will be used by the UAA during the OAuth2 authentication routine. By default this endpoint is `/login/callback`.\n[logout](#logout-property) | Object | x | Provides options for a [Central Logout](#central-logout) endpoint and a page to which the client to be redirected by the UAA after logout.\n[destinations](#destinations-property) | Object | x | Additional options for your destinations (besides the ones in the `destinations` environment variable).\n[services](#services-property) | Object | x | Additional options for your business services.\n[responseHeaders](#responseHeaders-property) | Array | x | Contains the optional response headers configuration.\n[compression](#compression-property) | Object | x | Configuration regarding compressing resources before responding to the client. If the [COMPRESSION](#compression-property) environment variable is set it will overwrite existing values.\n[pluginMetadataEndpoint](#pluginmetadataendpoint-property) | String | x | Adds an endpoint that will serve a JSON representing all configured plugins.\n[whitelistService](#whitelistservice-property) | Object | x | Options for the allowlist service preventing clickjack attacks.\n[websockets](#websockets-property) | Object | x | Options for the [web socket communication](#web-sockets).\n[errorPage](#errorpage-property) | Array | x | Optional configuration to set-up a custom error pages whenever the approuter encouters an error.\n[cors](#cors-property) | Array | x | Contains the configuration for cross-origin resource sharing.\n\n### *welcomeFile* property\n\nApprouter will redirect to this URL when `/`(root path) is requested.\nThis could be a file located inside the static resources folder or a resource hosted at a different location.\n\n**Note:** Approuter will serve the content of the resource instead of returning a redirect if the request contains a `x-csrf-token: fetch` header.\nSee [CSRF Protection](#csrf-protection).\n\n\nExample:\n```json\n\"welcomeFile\": \"/web-pages/hello-world.html\"\n```\n\n`web-pages` has to be a part of a local resource or an external destination\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"localDir\": \"my-static-resources\"\n}\n```\nor\n```json\n{\n    \"source\": \"^/web-pages/(.*)$\",\n    \"target\": \"$1\",\n    \"destination\": \"mydest\"\n}\n```\n\n\nNote: If there isn't a route with a localDir property, the folloing default is added to the list of routes:\n\n```json\n{\n  \"source\": \"^/(.*)$\",\n  \"localDir\": \"resources\"\n}\n```\n\n\n### *authenticationMethod* property\n\nIt may have the following values:\n\n* `none` - disables authentication for all routes\n* `route` - authentication type is defined in the [route](#routes) configurations\n\nThe default value is `route`.\n\n### *routes* property\n\nIt holds an array of route configuration objects. The order of the configurations is important for the application router.\nThe first route whose `source` pattern gets matched with the path of the incoming request will be activated.\nSee [Routes](#routes) for more info.\n\n### *login* property\n\nA redirect to the application router at a specific endpoint takes place during OAuth2 authentication with UAA.\nThis endpoint can be configured in order to avoid possible collisions. For example:\n\n```json\n\"login\": {\n  \"callbackEndpoint\": \"/custom/login/callback\"\n}\n```\n\nThe default endpoint is `/login/callback`.\n\n### *logout* property\n\nIn this object you can define your business application's central logout endpoint through the `logoutEndpoint` property.\nThe value of logout property should be an object with the following properties:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nlogoutPath | String |  | The path to be used when logging out from application router.\nlogoutPage | String | x | The logout page url path.\nlogoutMethod | String | x | Could be POST or GET. The default value is GET.\ncsrfProtection | Boolean | x | Can only be defined if logoutMethod is POST. If logoutMethod is POST and this property is not defined, default is true. It can be set to false – for example if csrfProtection is implemented in backend application.\n\nFor example, if somewhere in your *xs-app.json* you have:\n\n```json\n\"logout\": {\n  \"logoutEndpoint\": \"/my/logout\"\n}\n```\n\nThis will open an endpoint on application router which, when requested, will trigger the [central logout](#central-logout) routine.\nChanging the browser location from the client-side JavaScript code:\n\n```javascript\nwindow.location.replace('/my/logout');\n```\n\nwill trigger client initiated central Logout.\n\nIn addition, a page to which the user will be redirected by the UAA after logout can be configured using the `logoutPage` property.\nIt may hold:\n\n- URL path - the UAA will redirect the user back to the application router and the path will be interpreted according the configured [routes](#routes).\n\nThe `logoutEndpoint` can be called with query parameters. For example:\n```javascript\nwindow.location.replace('/my/logout?siteId=3');\n```\nThese parameters will be appended as is to the redirect url set by the `logoutPage` property.\nFor example, if the logout section is the following:\n```\n\"logout\": {\n    \"logoutEndpoint\": \"/logout\",\n    \"logoutPage\": \"/logoff.html\"\n  },\n```\nThe redirect url will end with:\n```\n/logoff.html?siteId=3\n```\n\n**Note**: The resource that matches the path should not require authentication. The property `authenticationType` should be set to `none` for that particular route.\n\nExample:\n\n```json\n{\n  \"authenticationMethod\": \"route\",\n  \"logout\": {\n    \"logoutEndpoint\": \"/my/logout\",\n    \"logoutPage\": \"/logout-page.html\"\n  },\n  \"routes\": [\n    {\n      \"source\": \"^/logout-page.html$\",\n      \"localDir\": \"my-static-resources\",\n      \"authenticationType\": \"none\"\n    }\n  ]\n}\n```\n\nIn this case *my-static-resources* (contains *logout-page.html*) is a folder with static resources in the working directory of the application router.\n\n**Note**: Be sure that your main route in your xs-app.json resource that matches the path is not cached by browser. Therefore, the best practice here would be to model cacheControl accordingly:\n\n```json\n{\n  \"routes\": [\n    {\n      \"source\": \"^/ui/index.html\",\n      \"target\": \"index.html\",\n      \"localDir\": \"web\",\n      \"cacheControl\": \"no-cache, no-store, must-revalidate\"\n    }\n  ]\n}\n```\n\n- Absolute http(s) URL - the UAA will redirect the user to a page (or application) different from the application router. \nFor example:\n\n```json\n\"logout\": {\n  \"logoutEndpoint\": \"/my/logout\",\n  \"logoutPage\": \"http://employees.portal\"\n}\n```\n\n**Note**: UAA will execute redirect only in case redirect URL is a valid redirect-uri in xs-security.json - redirect-uris are maintained as part of the oauth2-configuration section in the UAA application security descriptor JSON file given at the creation of the service instance. For example:\n\nUAA application security descriptor:\n```\n\"oauth2-configuration\": {    \n    \"redirect-uris\":\n    [\n     \"http://employees.portal\"\n    ]    \n}\n```\n\nUsing POST method for Logout\n\nFor security reasons it is recommended to model the logout flow using \"POST\" method and enable CSRF protection. \n\nIn that case, logoutMethod and csrfProtection parameters should be added in logout property:\n```json\n  \"logout\": {\n    \"logoutEndpoint\": \"/my/logout\",\n    \"logoutPage\": \"/logout-page.html\",\n    \"logoutMethod\": \"POST\",\n    \"csrfProtection\": true\n}\n```\n**Note**: For backward compatibility reasons logoutMethod default value is GET. \nThe csrfProtection property can only be set if logoutMethod is POST. \nIf logoutMethod is POST and csrfProtection property is not set, csrfProtection will be enabled by default.\n\nConsumption example:\nThe POST request should be an AJAX request and include CSRF token.\n```\nasync function getToken() {\n  return new Promise((resolve) => {\n  jQuery.ajax({\n    type: \"GET\",\n    url: 'my/logout',\n    headers: {\n      \"X-CSRF-Token\": 'fetch',\n      contentType: \"application/json\",\n    },\n    success: function(data, textStatus, request){\n      resolve(request.getResponseHeader('X-CSRF-Token'));\n    },\n   });\n });\n};\n```\nPOST request example:\n```\nconst token = await getToken();\njQuery.ajax({\n  type: \"POST\",\n  url: \"my/logout\",\n  headers: {\n    \"X-CSRF-Token\": token,\n    contentType: \"application/json\",\n  },\n  success: function (data) {\n    window.location.href = data;\n  }\n});\n```\n**Note**:  Make sure that url field matches logoutEndpoint.\n\n### *destinations* property\n\nLet's say you have a destination called `node-backend`. You can specify options for it by adding the `destinations` property in your xs-app.json:\n```json\n\"destinations\": {\n  \"node-backend\": {}\n}\n```\nThe value of `node-backend` should be an object with the following properties:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nlogoutPath | String | x | The logout endpoint for your destination.\nlogoutMethod | String | x | Could be POST, PUT, GET. The default value is POST.\n\nThe `logoutPath` will be called when [Central Logout](#central-logout) is triggered or a session is deleted due to timeout.\nThe request to the `logoutPath` will contain additional headers, including the JWT token.\nThe `logoutMethod` property specifies the HTTP method with which the `logoutPath` will be requested. For example:\n```json\n{\n  \"destinations\": {\n    \"node-backend\": {\n      \"logoutPath\": \"/ui5logout\",\n      \"logoutMethod\": \"GET\"\n    }\n  }\n}\n```\n\n### *services* property\n\nLet's say you have a service called `com.sap.appbasic.country`. You can specify options for it by adding the `services` property in your xs-app.json:\n```json\n\"services\": {\n  \"com.sap.appbasic.country\": {}\n}\n```\nThe value of `com.sap.appbasic.country` should be an object with the following properties:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nendpoint | String | x | The name of the attribute in the VCAP_SERVICES that contains the URL of the service.  \nlogoutPath | String | x | The path to be used when logging out from the service.\nlogoutMethod | String | x | Could be POST, PUT, GET. The default value is POST.\n\nThe `logoutPath` will be called when [Central Logout](#central-logout) is triggered or a session is deleted due to timeout.\nThe request to the `logoutPath` will contain additional headers, including the JWT token in header `authorization` and approuter host in header `x-approuter-host`.\nThe `logoutMethod` property specifies the HTTP method with which the `logoutPath` will be requested. For example:\n```json\n{\n  \"services\": {\n    \"com.sap.appbasic.country\": {\n      \"endpoint\": \"countryservice\",\n      \"logoutPath\": \"/countrieslogout\",\n      \"logoutMethod\": \"GET\"\n    }\n  }\n}\n```\n\n### *responseHeaders* property\n\nWith the custom response header property, you can add headers, which the application router returns to the client in its responses.<br> \nThe property is an array of objects, each object having the following properties:\n\nProperty | Type         | Optional | Description\n-------- | ------------ |:--------:| -----------\nname     | String       |          | response header name\nvalue    | String       |          | response header value\n\n\nExample:\n```json\n{ \"responseHeaders\" : [\n    {\"name\": \"header1\", \"value\": \"value1\"},\n    {\"name\": \"header2\", \"value\": \"value2\"}\n  ]\n}\n```\n\n### *compression* property\nBy default text resources are compressed before being sent to the client.\nThe default threshold for using compression is 1K. Text resources under this size will not be compressed.\nIf you need to change the compression size threshold, you can add the optional property `minSize`.\n\nHere is an example of a compression section (2048 bytes):\n```json\n{\n  \"compression\": {\n      \"minSize\": 2048\n  }\n}\n```\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nminSize | Number | x | Text resources larger than this size will be compressed.\nenabled | Boolean | x | Globally disables or enables compression. Default value is true.\ncompressResponseMixedTypeContent | Boolean | x | Determines whether response content of multipart/mixed content type should be compressed. The default value is false.\n\n**Note:** There are 3 ways to disable compression:\n* Global - within the compression section add ```\"enabled\": false```\n* Front-End - the client sends a header Accept-Encoding which omits gzip\n* Backend  - the application sends a header Cache-Control with the 'no-transform' directive\n\nExample of globally disabling compression using the environment variable `COMPRESSION`:\n```json\n{\n  \"enabled\": false\n}\n```\n\n**Note:** The header field `Content-Length` is used to determine the resource size.\nIf `Content-Length` is missing, the chunk size is used to determine whether to compress the resource.\nFor more information, see the npm module compression.\n\nHere is a complete example of the compression environment variable:\n```json\n  env:\n   COMPRESSION: >\n        { \n\t  \"enabled\": true,\n\t  \"minSize\": 2048,\n\t  \"compressResponseMixedTypeContent\": true\n\t  }\n```\n\n### *pluginMetadataEndpoint* property\n\nExample:\n```json\n{\n  \"pluginMetadataEndpoint\": \"/metadata\"\n}\n```\n\n**Note**: If you request relative path `/metadata` of your application, you will receive a JSON with configured plugins.\n\n### *whitelistService* property\n\nThe *whitelistService* property is used for enabling the allowlist service that prevents clickjack attacks.\nAn endpoint accepting GET requests will be opened at the relative path configured in the `endpoint` property.\nFor more details see [Allowlist service](#whitelist-service) section.\n\nExample:\n```json\n{\n  \"whitelistService\": {\n    \"endpoint\": \"/whitelist/service\"\n  }\n}\n```\n\n### *websockets* property\n\nFor more details about the web socket communication see [Web sockets](#web-sockets) section.\n\nExample:\n```json\n{\n  \"websockets\": {\n    \"enabled\": true\n  }\n}\n```\n\nTo use Websockets when approuter is integrated with HTML5 Application Repository, this property should be added to the xs-app.json of the deployed HTML5 application. When an incoming request for an application in the repository goes through approuter, approuter retrieves the application's configuration from the repository. If this flag is set, approuter creates a websockets connection with the backend (the target url of the request) and acts as a proxy which delivers messages on top of ws protocol from the backend to the user and vice versa.\n\n### *errorPage* property\n\nBy default, errors originating in the application router are shown the [status code](https://nodejs.org/api/http.html#http_http_status_codes) of the error.\nIt is also possible to display a custom error page using the `errorPage` property.\n\nThe property is an array of objects, each object having the following properties:\n\nProperty | Type         | Optional | Description\n-------- | ------------ |:--------:| -----------\nstatus   | Number/Array |          | HTTP status code\nfile     | String       |          | File path relative to the working directory of the application router\n\n\nExample:\n```json\n{ \"errorPage\" : [\n    {\"status\": [400,401,402], \"file\": \"./custom-err-40x.html\"},\n    {\"status\": 501, \"file\": \"./http_resources/custom-err-501.html\"}\n  ]\n}\n```\nIn the example above 400, 401 and 402 errors would be shown the content of  `./custom-err-4xx.html` and for 501 errors the user would see `./http_resources/custom-err-501.html`.\n\n**Note:** The errorPage conifiguration section has no effect on errors generated outside of the application router.\n\n### *cors* property\n\nWith the cors property, you can support cross-origin requests.<br> \nIf a cross-origin resource sharing (CORS) configuration exists in both the environment variables and the application router configuration file (xs-app.json), the application router gives priority to the CORS configuration in the application router configuration file.<br> \nFor more information about the CORS configuration see [Cross-Origin Resource Sharing configuration](#cross-origin-resource-sharing-configuration).\n\n### Complete example of an *xs-app.json* configuration file \n#### Without HTML5 Application Repository integration:\n```json\n{\n  \"welcomeFile\": \"index.html\",\n  \"authenticationMethod\": \"route\",\n  \"sessionTimeout\": 10,\n  \"pluginMetadataEndpoint\": \"/metadata\",\n  \"routes\": [\n    {\n      \"source\": \"^/sap/ui5/1(.*)$\",\n      \"target\": \"$1\",\n      \"destination\": \"ui5\",\n      \"csrfProtection\": false\n    },\n    {\n      \"source\": \"/employeeData/(.*)\",\n      \"target\": \"/services/employeeService/$1\",\n      \"destination\": \"employeeServices\",\n      \"authenticationType\": \"xsuaa\",\n      \"scope\": [\"$XSAPPNAME.viewer\", \"$XSAPPNAME.writer\"],\n      \"csrfProtection\": true\n    },\n    {\n      \"source\": \"^/(.*)$\",\n      \"target\": \"/web/$1\",\n      \"localDir\": \"static-content\",\n      \"replace\": {\n        \"pathSuffixes\": [\"/abc/index.html\"],\n        \"vars\": [\"NAME\"]\n      }\n    }\n  ],\n  \"login\": {\n    \"callbackEndpoint\": \"/custom/login/callback\"\n  },\n  \"logout\": {\n    \"logoutEndpoint\": \"/my/logout\",\n    \"logoutPage\": \"/logout-page.html\"\n  },\n  \"destinations\": {\n    \"employeeServices\": {\n      \"logoutPath\": \"/services/employeeService/logout\",\n      \"logoutMethod\": \"GET\"\n    }\n  },\n  \"compression\": {\n    \"minSize\": 2048\n  },\n  \"whitelistService\": {\n    \"endpoint\": \"/whitelist/service\"\n  },\n  \"websockets\": {\n    \"enabled\": true\n  },\n  \"errorPage\": [\n    {\"status\": [400,401,402], \"file\": \"/custom-err-4xx.html\"},\n    {\"status\": 501, \"file\": \"/custom-err-501.html\"}\n  ]\n}\n```\n#### With HTML5 Application Repository integration (xs-app.json file stored in HTML5 Application Repository):\n```json\n{\n  \"welcomeFile\": \"index.html\",\n  \"authenticationMethod\": \"route\",\n  \"routes\": [\n    {\n      \"source\": \"/employeeData/(.*)\",\n      \"target\": \"/services/employeeService/$1\",\n      \"destination\": \"employeeServices\",\n      \"authenticationType\": \"xsuaa\",\n      \"scope\": [\"$XSAPPNAME.viewer\", \"$XSAPPNAME.writer\"],\n      \"csrfProtection\": true\n    },\n    {\n       \"source\": \"^/odata/v2/(.*)$\",\n       \"target\": \"$1\",\n       \"service\": \"com.sap.appbasic.country\",\n       \"endpoint\": \"countryservice\"\n    },\n    {\n      \"source\": \"^(/.*)$\",\n      \"target\": \"$1\",\n      \"service\": \"html5-apps-repo-rt\",\n      \"authenticationType\": \"xsuaa\"\n    }\n  ],\n  \"logout\": {\n    \"logoutEndpoint\": \"/my/logout\",\n    \"logoutPage\": \"/logout-page.html\"\n  },\n  \"destinations\": {\n    \"employeeServices\": {\n      \"logoutPath\": \"/services/employeeService/logout\",\n      \"logoutMethod\": \"GET\"\n    }\n  },\n  \"services\": {\n    \"com.sap.appbasic.country\": {\n      \"logoutPath\": \"/countryService/logout\",\n      \"endpoint\": \"countryservice\",\n      \"logoutMethod\": \"GET\"\n    }\n  }\n}\n```\n**Note:** The route in bold is the route that provides access to the HTML5 Application Repository service.\n\n## Headers\n\n### Forwarding Headers\n\nThe application router passes the following x-forwarding-* headers to the route targets:\n\nHeader Name | Description\n----------- | -----------\nx-forwarded-host | Contains the *Host* header which was sent by the client to the application router.\nx-forwarded-proto | Contains the protocol which was used by the client to connect to the application router.\nx-forwarded-for | Contains the address of the client which connects to the application router.\nx-forwarded-path | Contains the original path which was requested by the client.\n\nIf a client performs a path rewriting, it sends the x-forwarded-proto, x-forwarded-host, and the x-forwarded-path headers to the application router. The values of these headers are forwarded to the route targets without modifications instead of being generated from the application router request URL. The x-forwarded-path header of a request does not impact the source pattern of routes in the xs-app.json.\n\n### Hop-by-hop Headers\n\nHop-by-hop headers are meaningful only for a single transport-level connection and therefore are not forwarded by the application router.\nThese headers are:\n* Connection\n* Keep-Alive\n* Public\n* Proxy-Authenticate\n* Transfer-Encoding\n* Upgrade\n\n### Custom Headers\n\n* x-custom-host: Contains the internal reverse proxy host. Relevant only if the application router is used behind an internal reverse proxy as well as an external reverse proxy (EXTERNAL_REVERSE_PROXY  environment variable is set to true). Add this header to the request to internal reverse proxy.\n\nIn a multi-tenancy landscape, the application router will calculate the tenant id based on the value of a certain request header as follows:\n - x-custom-host header or host if EXTERNAL_REVERSE_PROXY is true\n - x-forwarded-host header or host if EXTERNAL_REVERSE_PROXY is false or not specified\n\n### Authorization Header\n* x-approuter-authorization: Contains the JSON Web Token (JWT) or Open ID Connect (OIDC) access token to support the [Service to Application Router](#service-to-application-router-beta-version) scenario.\n\n## CSRF Protection\n\nBy default the application router enables CSRF protection for any HTTP method that is not `HEAD` or `GET` and the route is not public.\nA path is considered _public_, if it does not require authentication. This is the case for routes with `authenticationType: none` or if authentication is disabled completely via the top level property `authenticationMethod: none`.\n\nTo obtain a CSRF token one must send a `GET` or `HEAD` request with a `x-csrf-token: fetch` header to the application router.\nThe application router will return the created token in a `x-csrf-token: <token>` header, where `<token>` will be the value of the CSRF token.\n\nIf a CSRF protected route is requested with any of the above mentioned methods,\n`x-csrf-token: <token>` header should be present in the request with the previously obtained token.\nThis request must use the same session as the fetch token request.\nIf the `x-csrf-token` header is not present or invalid, the application router will return status code *403 Forbidden* and a response header `x-csrf-token: Required`.\n\n## Support of SAP Statistics\n\nThe application router provides performance statistics in an HTTP response header in the following cases:\n- The HTTP request contains an HTTP query parameter (URL parameter) sap-statistics=true.\n- The HTTP request contains an HTTP header field sap-statistics:true.\n\nIf an HTTP request that contains a header field or query parameter with \"sap-statistics=true\" reaches the application router, the application router forwards an \"sap-statistics\" header to the corresponding backend.\nIf SAP statistics is implemented for the backend, the backend returns to the application router a response header containing the statistics information from the backend.\n\nThe application router returns the following statistics information in an sap-statistics-approuter response header:\n- total: The time that has passed between the moment when the request entered into the application router and the moment when the application router started writing the response\n- ext (in case of destination forwarding): The time spent in the backend\n\nEach backend sub-component can add its own response header with the duration measurements when it receives the HTTP header sap-statistics:true.\n\n## Connectivity\n\nThe application router supports integration with SAP Cloud Platform connectivity service. The connectivity service handles proxy access to SAP Cloud Platform cloud connector, which tunnels connections to private network systems. In order to use connectivity, a connectivity service instance should be created and bound to the Approuter application. In addition, the relevant destination configurations should have `proxyType=OnPremise`. Also, a valid XSUAA login token should be obtained via the login flow.\n\n## SaaS Application Registration in Cloud Foundry\n\nThe application router supports SaaS registration. A SaaS business application based on application router may be registered in the SaaS registry  by creating and binding a SaaS Registry service instance.\nAfter fulfilling the CIS process to enable application subscription, the SaaS business application will be visible in the SAP Cloud Platform cockpit in the Cloud Foundry environment for all entitled customers. \nOnce a customer is entitled to the SaaS business application, the subaccounts (tenants) created under the global account will be able to view, subscribe to, and unsubscribe from the application. \nWhen a tenant is subscribed/unsubscribed to/from an application, the tenant will be subscribed/unsubscribed: \n* In the XSUAA instance of the application itself \n* In the reuse services (e.g.: destination ), if the application is dependent on the reuse service. \nAlso, onboarding and offboarding callbacks will be triggered for the subscribed/unsubscribed application and for the reuse services.\n\nIf you use IAS by binding a multi-tenant application router to an identity service instance, the subscription manager service (SMS) should be used to enable the subscription to a subscriber zone and an IAS tenant.\n\n\n### How To Expose Approuter for SaaS Subscription\n\n#### Multi-tenancy\nThe application router should be configured to handle multi-tenant access by maintaining the TENANT_HOST_PATTERN environment configuration.\n\n#### Entitle org for SaaS Application consumption\nThe SaaS Registry service and / or the Subscription Manager service should be available in your space marketplace.\n\n#### Authorize LPS for invoking callbacks\nSaaS business applications should grant LPS the authorization to invoke the application's callbacks. Callback scope should be granted to LPS in the application router’s xs-security.json file:\n\n*xs-security.json:*\n```\n...\n {  \n    \"name\":\"$XSAPPNAME.Callback\",\n    \"description\":\"With this scope set, the callbacks for tenant onboarding, \n     offboarding and getDependencies can be called.\",\n         \"grant-as-authority-to-apps\":[  \n            \"$XSAPPNAME(application,sap-provisioning,tenant-onboarding)\"\n         ]\n  }\n...  \n```\n\n## Authentication with Identity Service (IAS)\nTo use IAS authentication an identity service instance of plan application should be created with the following configuration:\n```\n{\n   \"oauth2-configuration\": {\n     \"redirect-uris\": [\"https://*.<landscapeDomain>/login/callback?authType=ias\"],  //Enable redirect after login\n     \"post-logout-redirect-uris\": [\"https://*.<landscapeDomain>/*/logout.html\" ]    //Enable redirect after logout\n   },\n   \"xsuaa-cross-consumption\":true, //Enable xsuaa trust\n   \"multi-tenant\":true //enable multitenancy\n}\n```\nAuthentication with IAS should be performed using X.509 certificates. To achieve this the identity service should be bound to approuter using the following configuration:\n```\n{\n  \"credential-type\": \"X509_GENERATED\"\n }\n```\n\n#### Register an application in SaaS Registry (SaaS Registry Configuration)\nFor a customer to be able to subscribe to an application through the SAP Cloud Platform cockpit, each SaaS business application should register itself on all CF landscapes where it is deployed.\n\nTo register a SaaS application in LPS, a service instance of saas-registry should be created and the SaaS business application should be bound to it.\nThe instance of saas-registry is created with a configuration json - *saas-config.json:*.\nIn the configuration.json file a url for the getDependencies and onSubscription callbacks must be provided. \nNote that the path segment of these urls are configurable however the tenantId url variable in onSubscription callback must be provided anyway.\n\n```\n{\n\t\"appId\" : \"<appId>\",  # xsappname generated by XSUAA - can be obtained by checking the xsuaa-> xsappname by executing: cf env <application name>\n\t\"appName\" : \"<appName>\",  # Business application name to be shown to subscribers \n\t\"appUrls\": { \n\t\t\"getDependencies\" : \"<approuter-host>/callback/v1.0/dependencies\",\n\t    \"onSubscription\" : \"<approuter-host>/callback/v1.0/tenants/{tenantId}\" \n\t},\n\t\"providerTenantId\" : \"<tenant>\"  # Approuter provider account tenant ID.\n}   \n\n```\n\n#### Register an application in Subscription Manager  (Subscription Manager Configuration)\nTo register an SaaS application in the subscription manager service, a service instance of the subscription manager has to be created and the SaaS business application has to be bound to it. \nThe instance of subscription manager is created with a configuration json file - sms-config.json:. In the configuration.json file, a url for the getDependencies callbacks and the onSubscription callbacks must be provided. \nNote that the path segments of these urls are configurable.\n\n```\n{\n  \"iasServiceInstanceName\" : [\"ias-provider-ias\"], #Name of the related IAS instance\n  \"applicationType\": \"application\",\n  \"xsuaaSaasApplicationServiceInstanceId\": \"88afb2a5-5ab3-409a-9c0c-b70e2b86b1cf\", #SaaS Registry service instance id\n  \"appCallbacks\" : {\n    \"dependenciesCallbacks\" : {\n      \"url\" : \"https://<providerZoneId>--<providerIASTenantId>.<approuterHost>.cert.<landscapeDomain>/v1.0/callback/zones/{zoneId}/dependencies\"\n    },\n    \"subscriptionCallbacks\" : {\n      \"url\" : \"https://<providerZoneId>--<providerIASTenantId>.<approuterHost>.cert.<landscapeDomain>/v1.0/callback/zones/{zoneId}\"\n    }\n  }\n}\n```\nNote that in order to provide certificates the url domain should contain a \"cert\" segment.\nIn addition the TENANT_HOST_PATTERN environment variable should be modified to support requests with the \"cert\" segment. \nFor example:\n```\n^(.*).<approuterHost>.(cert.)?<landscapeDomain>\n```\n\n## Mutual TLS Authentication (mTLS) and Certificates Handling\nApplication router supports certificates usage for token creation and mTLS handshake in backend connections. To enable that the XSUAA or IAS instance bound to the application router should provide in its credentials a certificates chain and a private key\n\nNote that application router also supports providing private key via environment variables: XSUAA_PRIVATE_KEY (XSUAA) and IAS_PRIVATE_KEY (IAS).\n\nIn case certificates and private key exists, application router fetches XSUAA/IAS tokens providing certificates chain and private key.\nWhen forwarding request to business services, application router also uses certificates to create a client_credentials token or exchange the login token.\n\nIf certificates available, HTTP connection to backend is created using private key and a concatenation of intermediate and client certificates, enabling mTLS handshake.\n\nCloud Foundry: client certificate is propagated via the x-forwarded-client-cert header. In order to enable that the backend url should contain a .cert segment in its domain.\n\n## Integration with HTML5 Application Repository\n\nThe application router supports seamless integration with the HTML5 Application Repository service. \nWhen the application router interacts with HTML5 Application Repository to serve HTML5 Applications, all static content and routes (xs-app.json) are retrieved from HTML5 Application Repository. \nIn case application router needs to route to non HTML5 Applications, it is possible to model that in the xs-app.json of the application router.\n\nTo integrate HTML5 Application Repository to an application router based it is required to create an instance of html5-apps-repo service of plan app-runtime and bind it to the application.\nxs-app.json routes that are used to retrieve static content from HTML5 Application Repository may be modeled in the following format:\n\n```\n { \n     \"source\": \"^(/.*)\",                                    \n     \"target\": \"$1\",                                        \n     \"service\": \"html5-apps-repo-rt\", \n     \"authenticationType\": \"xsuaa\"                      \n }\n```\n### HTML5 Application Repository Multitenancy\nThe HTML5 Application Repository is a multitenant service. Non-public HTML5 Applications are visible only to the application providers (with provider subaccounts) and the consumers subscribed to the applications (with consumer subaccounts).\n\nWhen a multitenant application router is subscribed to a subaccount, the HTML5 Application Repository app-runtime instance that is bound to the application router is returned as a dependency, which triggers the subscription to the app-runtime instance.\nYou can also bind HTML5 Application Repository app-host service instances to the application router to enable the subscription of the corresponding HTML5 applications.\nDuring runtime, the application router creates an HTML5 Application Repository app-runtime client_credentials token using the tenant URL that the application router determines from the TENANT_HOST_PATTERN environment variable.\n\nNote:  The creation of the token can fail if the app-runtime instance is not subscribed to the subaccount, which happens if, for example, the application router was subscribed to the subaccount before the HTML5 Application Repository became a multitenant service.\nIn this case the application router will create the token using the provider subaccount.\n\nYou can trigger the subscription to the HTML5 Application Repository app-runtime instance by using the SAAS Provisioning API: see https://api.sap.com/api/APISaasManagerService/resource\n```\nPATCH /saas-manager/v1/application/tenants/{tenantId}/subscriptions\n```\n\nNote:  If you have an old application router version, the HTML5 Application Repository app-runtime client_credentials token is created by using HTML5 application provider subaccount.\n\n### Blocked HTML5 Application Names\n\nThe following strings are used as predefined direct routing URIs, which lead the request to the routing configuration file of the application router: \"favicon.ico\", \"login\".\nTherefore, do not name your HTML5 applications \"favicon.ico\" or \"login\"!\n\n### Known Gaps in Integration with HTML5 Application Repository\n\nThe following limitations apply when application router is bound to HTML5 Application Repository service:\n\n1. It is not possible to implement the \"first\" middleware slot to provide routes dynamically.\n2. No option apart from workingDir can be provided in application router start.\n3. External session management via extensibility is not supported\n\n\n**Note:** Mixed scenario of modeling part of the static content in local resources folder and also retrieving static content from HTML5 Application Repository is not supported.</br>\n**Note:** This feature is only supported in Cloud Foundry. There is no HTML5 Application Repository service in XSA.\n\n### Runtime Processing\n\nDuring runtime, based on request url path (see URL Format), application router will try to fetch the xs-app.json file from the corresponding HTML5 Application in HTML5 Application Repository and use it for routing the request.\nThe following algorithm is applied for request processing:\n* If no HTML5 Application is found in HTML5 Application Repository for current request, central application router xs-app.json will be used for routing\n* If HTML5 Application exists in HTML5 Application Repository but no xs-app.json file is returned, an error message will be issued and request processing will be stopped.\n\n#### URL Format\n\nA valid request to application router that uses HTML5 Application Repository must have the following format:\n```\nhttps://<tenantId>.<appRouterHost>.<domain>/<bsPrefix>.<appName-appVersion>/<resourcePath>\n\n```\nbsPrefix (business service prefix) - Optional\n* It should be used in case the application is provided by a business service bound to this approuter\n\nappName (application name) - Mandatory\n* Used to uniquely identify the application in HTML5 Application Repository persistence\n* Must not contain dots or special characters\n\nappVersion (application version) - Optional\n* Used to uniquely identify a specific application version in HTML5 Application Repository persistence\n* If no version provided, default application version will be used\n\nresourcePath (path to file)\n* The path to the file as it was stored in HTML5 Application Repository persistence\n\nQuery Parameters:\n\nskipXSAppJsonCache - Optional\n* Value: true\n* Supports skipping the usage of cache when getting the xsApp configuration, bringing it remotely and re-setting the cache.\n* Note that the query parameter is removed from request url before route processing.\n\n### Cache Buster Handling\nA cache buster allows the application router to notify the browser to refresh the resources only when the application resources have been changed. Otherwise the resources are always fetched from the browser's cache.\nThis flow applies to requests that should be forwarded to HTML5 Application Repository. If requests are forwarded to backend applications that return data, cache buster handling is not applied.\n\n* When the second path segment of the request url contains the pattern “~timestamp~”, this segment is removed from the subsequent request to HTML5 Application Repository\n* In case the request had a cache buster segment, application router adds to corresponding response the header: Cache-Control: public, max-age=31536000\n\n**Note:** Cache buster flow is only supported in HTML5 Application Repository integration flow.\n\n### Integration with Business Services\n\nApplication router supports integration with Business Services. \nBusiness Services are a flavour of reuse-services that expose specific information in VCAP_SERVICES credentials block that enable application router to serve Business Service UI and/or data.\n* Business Service UI must be stored in HTML5 Application Repository to be accessible from application router\n* Business Service UI must be defined as \"public\" to be accessible from an application router in a different space than the one from where the UI was uploaded \n* Business Service data can be served using two grant types:\n  1. User Token Grant: Application router performs a token exchange between login JWT token and Business Service token and uses it to trigger a request to the Business Service endpoint\n  2. Client Credentials Grant: Application router generates a client_credentials token and uses it to trigger a request to the Business Service endpoint\n\n#### Business Service Credentials\nWhile binding a Business Service instance to application router the following information should be provided in VCAP_SERVICES credentials:\n\n* sap.cloud.service: Service name as referenced from xs-app.json route and business service prefix (if Business Service UI provided) - Mandatory\n* sap.cloud.service.alias: Short service name alias for user friendly URL business service prefix- Optional\n* endpoints: One or more endpoints that can be used to access Business Service data. \n* html5-apps-repo: html5-apps-repo.app_host_id contains one or more html5-apps-repo service instance GUIDs that can be used to retrieve Business Service UIs - Optional\n* saasregistryenabled: flag that indicates that this Business Service supports SaaS Registry subscription. If provided, application router will return this Business Service xsappname in SaaS Registry \n  getDependencies callback - Optional\n* grant_type: the grant type that should be used to trigger requests to the Business Service. Allowed values: user_token or client_credentials. \n  Default value, in case this attribute is not provided, user_token - Optional\n* forwardiastoken: flag that indicates if, in addition to the exchanged xsuaa token, the IAS token should be forwarded as well. IAS token is forwarded in request header: `x-ias-token`\n\n\nThe value of `endpoints` should be an object with the following properties:\n\nProperty | Type | Optional | Default |Description\n-------- | ---- |:--------:| ---- |-----------\nurl | String |   | |URL to access the Business Service data.\ntimeout | Number | x | 30000ms |Positive integer representing the maximum wait time for a response (in milliseconds) from the Business Service. \n\n\nFor example:\n```\n\"country\": [\n   {\n    ...\n    \"credentials\": {\n     \"sap.cloud.service\": \"com.sap.appbasic.country\", \n     \"sap.cloud.service.alias\": \"country\",            \n     \"endpoints\": {                                   \n      \"countryservice\": { \"url\": https://icf-countriesapp-test-service.cfapps.sap.hana.ondemand.com/odata/v2/countryservice\"},\n      \"countryconfig\":  { \n            \"url\": https://icf-countriesapp-test-service.cfapps.sap.hana.ondemand.com/rest/v1/countryconfig\",\n            \"timeout\": 120000 \n      }\n     },\n     \"html5-apps-repo\": {                           \n      \"app_host_id\": \"1bd7c044-6cf4-4c5a-b904-2d3f44cd5569, 1cd7c044-6cf4-4c5a-b904-2d3f44cd54445\"\n     },\n     \"saasregistryenabled\": true,\n     \"grant_type\": \"user_token\"\n   ....\n```\n\n#### Accessing Business Service Data\nTo access Business Service data xs-app.json configuration file should have a route referencing a specific sap.cloud.service or sap.cloud.service.alias via the service attribute.\nIf an endpoint attribute is also modeled, it will be used to get the service url otherwise the fallback url or uri attribute will be used.\n\nFor example:\n```\n\"routes\": [\n    {\n      \"source\": \"^/odata/v2/(.*)$\",\n      \"target\": \"$1\",\n      \"service\": \"com.sap.appbasic.country\",\n      \"endpoint\": \"countryservice\"\n    },\n\n```\n\nIn order to support JWT token exchange, the login JWT token should contain the uaa.user scope. For that the xs-security configuration must contain a role template that references the uaa.user scope.\nFor example:\n```\n{\n    \"xsappname\"   : \"simple-approuter\",\n    \"tenant-mode\" : \"shared\",\n    \"scopes\": [\n        {\n            \"name\": \"uaa.user\",\n            \"description\": \"UAA\"\n        },\n        {\n            \"name\": \"$XSAPPNAME.simple-approuter.admin\",\n            \"description\": \"Simple approuter administrator\"\n        }\n    ],\n    \"role-templates\": [\n        {\n            \"name\": \"Token_Exchange\",\n            \"description\": \"UAA\",\n            \"scope-references\": [\n                \"uaa.user\"\n            ]\n        },\n        {\n            \"name\": \"simple-approuter-admin\",\n            \"description\": \"Simple approuter administrator\",\n            \"scope-references\": [\n                \"$XSAPPNAME.simple-approuter.admin\"\n            ]\n        }\n    ]\n}\n```\n\n#### Accessing Business Service UI\nBusiness Service UI's must be stored in HTML5 Application Repository and defined in their manifest.json files as \"public: true\" in order to be accessible from an application router\napplication that is typically running in a different space than the Business Service space. In addition dataSources uris must be relative to base url (no slash as first character).\n\nBusiness Service manifest.json example:\n\n```\n{\n  “sap.app”: {\n    “id”:“com.sap.appbasic.country.list”,\n    “applicationVersion: {\n    “version”: “1.0.0”\n  },\n  \"dataSources\": {\n    \"mainService\":{\n      \"uri\": \"odata/v2/countryservice\",\n      \"type\": \"OData\"\n    }\n  },\n  “sap.cloud”: {\n    \"public\": true,\n    “service”: “com.sap.appbasic.country“\n  }\n}\n```\n\nA Business Service that exposes UI must provide one or more app-host GUIDs in an html5-apps-repo block in VCAP_SERVICES credentials (see Business Service credentials).\n\nTo access Business Service UI the request url that hits application router must contain a business service prefix as described above.\n\nRequest URL example:\n```\n  https://approuter-repo-examples.cfapps.sap.hana.ondemand.com/comsapappbasiccountry.comsapappbasicscountrylist/test/flpSandbox.html\n\n```\nIn this example \"comsapappbasiccountry\" is the business service prefix which matches the sap.cloud.service attribute in country service VCAP_SERVICES credentials (without dots).\nThe \"comsapappbasicscountrylist\" is the name of the HTML5 Application as defined in the app.id attribute in the manifest.json (without dots).\n\n## Web Sockets\nThe application router is capable of forwarding web socket communication.\nIn order to use the web socket communication, it should be enabled through the [*websockets* property](#websockets-property).\nIf the backend service requires authentication then the upgrade request should contain a valid session cookie.\nThe destination schemas \"ws\" and \"wss\" are supported in addition to \"http\" and \"https\".\nWhen the application router receives an upgrade request, it verifies that the `Origin` header holds the URL of the application router.\nIf this is not the case, then an HTTP response with status 403 is returned to the client.\nThis origin verification can be further configured via the environment variable `WS_ALLOWED_ORIGINS`.\nIt contains the allowed origins the application router verifies against. It's structure is the same as [`CJ_PROTECT_WHITELIST`](#configuring-allowed-hostnames--domains).\n\n**Note:** A current limitation is that a web socket ping is not forwarded to the backend service.\n\n## Session Handling\n\nThe application router establishes a session with the client (browser) using a session cookie.\n\nThe application router intercepts all _session_ cookies, sent by backend services and stores them in its own session. Backend session cookies are not sent to the client in order to prevent cookie collisions. Upon subsequent requests the application router sends back the cookies to the respective backend services so they can establish their own sessions.\n**Note:** Non-session cookies from backend services are forwarded to the client. Cookie collisions may occur and the application should be able to handle them.\n\nIf a pending request is canceled, the request cancellation will be propagated to the backend service.\n\nIf there is no session in the application router, either because there has been a session timeout or because no session has been created yet, and if the incoming request matches a non-public route, the application router triggers a redirect to the authentication service (UAA or IAS).\nAfter a successful login, a redirect back to application router takes place using the login callback endpoint, which triggers the creation of a new session.\nIf the incoming request is an AJAX request (has the request header X-Requested-With: XMLHttpRequest) or if the HTTP verb is not GET and no session exists (there is no session cookie and the request doesn’t have an x-approuter-authorization header), the application router returns the response code 401 - Unauthorized. This enables the client application to handle the 401 response before it navigates to the authentication service. For example, the application can store data entered by the user and prevent data loss.\nWhen the handling of the 401 response is completed, the client application should send a request without an xmlhttprequest object to trigger the application router authentication flow.\n\n### Session Contents\n\n* CSRF token - the generated CSRF token so it can be verified against the token in the request, see [CSRF Protection](#csrf-protection) above.\n* OAuth token - JSON Web Token (JWT) fetched from UAA and forwarded to backend services in the Authorization header. The client never gets this token.\nThe application router refreshes the JWT automatically before it expires (if the session is valid). By default this routine is triggered 5 minutes before the expiration of the JWT.\nThis can also be configured via the `JWT_REFRESH` environment variable (the value is in minutes). If `JWT_REFRESH` is set to 0 then the refresh is disabled.\n* OAuth scopes - scopes owned by the current user, used to check if the user has the scope required for each request. See `scope` in [Routes](#routes).\n* Backend session cookies - all session cookies sent by backend services.\n* Business Services OAuth tokens - JSON Web Token (JWT) exchanged and used to access re-use services bound to the application router\n\n**Note:** If the JWT is close to expiration and the session is still active a JWT refresh will be triggered in `JWT_REFRESH` minutes before expiration.\n`JWT_REFRESH` is an environment variable stating the number of minutes before the JWT expiration the refresh will be triggered. The default value is 5 minutes.\n\n## External Session Management\nThe application router supports a backup of user sessions in an external session store. This enables the session recovery in case the application router instance that stores a session crashes and another application router instance has to continue handling the running user session.  \nTo enable this capability, you must bind a service instance of a service that supports a fast persistence store, such as *Redis*. When such a service is bound, the application router backs up the in-memory session information into the external persistency store.  \nIf, in subsequent requests, the session information is not found in the in-memory session store, the application router tries to rebuild the in-memory session information from the external persistency store.   \n\nThe sessions are stored compressed. For capacity planning, you can assume 50 Kb per session storage in the fast persistence store. \n\n### External Session Management Configuration\nIn order to use this feature, you have to set the following environment variable:\n\n```EXT_SESSION_MGT```  \n\nThe variable value must be defined in the JSON format and provide the following properties:\n* **instanceName (mandatory)** - the name of the service instance of the storage service.\n* **storageType (mandatory)** - the type of the storage, for example - \"redis\". Note that if no custom storage driver is used, only “redis” is allowed.\n* **sessionSecret (mandatory)** - a secret to be used to generate a session cookie. Please generate a unique string with at least 64 characters.\n\nFor example: \n```json\n{\n    \"instanceName\": \"approuter-redis\",\n    \"storageType\": \"redis\",\n    \"sessionSecret\": \"someuniquesessionsecret\"\n}\n```\n\n> **_NOTE:_** Currently, the application router supports only a Redis store\n\n### Configuration of a Custom Storage Driver\nFor information about the configuration of a custom storage driver, see [Configuring a custom storage driver](doc/sessionManagement.md#custom-storage-driver)\n\n\n## Service to Application Router\n\nThe application router can receive a consumer service JWT token created by the SAP Authorization and Trust Management (xsuaa) service or an OIDC access token created by Identity Authentication service and use it to access the UI and the data. The token is passed to the application router in the \"x-approuter-authorization\" header of the request. For more information, see [Authorization Header](#authorization-header-beta-version).\n\nCookie Handling:\nIn this flow client cookies are merged to backend cookies in case a backend cookie with the same key does not exist.\n\nIf you have configured [external session management](#external-session-management), an external session is created for each token in the external session management service (for example, in Redis). Such an external session has the same expiration time as the token for which it was created. \nThe application router uses the external session to store cached data, such as the exchanged tokens and destination configurations, to improve the performance by reducing roundtrips to the authentication and destination services.\n\n**Note**: The XSUAA JWT token or the OIDC token are generated with the same XSUAA service instance or the same Identity service instance that is bound to the application router. \n\n\n## Central Logout\n\nCentral Logout can be client initiated or can be triggered due to session timeout.\n* Client initiated\n  * Deletes the user session.\n  * Requests all backend services logout paths (if configured in the [destinations property](#destinations-property)).\n  * Request all business services logout paths (if configured in the [services property](#services-property)).\n  * Redirects the client to logout from UAA.\n  * If configured, redirects back to a custom page (for XS OnPremise Runtime only). For more information, see [logout-property](#logout-property).\n* Session timeout\n  * Deletes the user session.\n  * Requests all backend services logout paths (if configured in the [destinations property](#destinations-property)).\n  * Requests all business services logout paths (if configured in the [services property](#services-property)).\n\nThe session timeout can be configured with the [SESSION_TIMEOUT](#session-timeout) variable through the environment.\n\n## Allowlist Service\n\nA protection concept is designed in SAP that uses UI libraries and an allowlist service for proper clickjack protection of applications. The general idea is that when an html page needs to be rendered in a frame, a check is done by calling the allowlist service to validate if the parent frame is allowed to render the content in a frame. The actual check is provided by the allowlist service.\n\n### Enable the service\n\nTo enable the allowlist service and to open the service endpoint you need to configure the [whitelistService](#whitelistservice-property) property in *xs-app.json*.\n\n### Configuring allowed hostnames / domains\n\nThe allowlist service reads allowed hostnames and domains from the environment variable `CJ_PROTECT_WHITELIST`.\nThe content is a JSON array of object with the following properties:\n\nProperty | Type | Optional | Description\n-------- | ---- |:--------:| -----------\nprotocol | String | x | URI scheme, for example `http`.\nhost | String |  | Hostname / domain - valid hostname, or domain defined with a star (\\*), for example `some.concrete.hostname`, or `*.example.domain`.\nport | String / Number | x | Port string or number containing a valid port.\n\nExample:\n```json\n[\n  {\n    \"protocol\": \"http\",\n    \"host\": \"*.example.domain\",\n    \"port\": 12345\n  },\n  {\n    \"host\": \"some.concrete.hostname\",\n  }\n]\n```\n\nMatching is done against provided properties. For example if only host is provided then the service will return `framing: true` for all and matching will be for all schemas and protocols.\n\n### Return value\n\nThe service accepts only `GET` requests and the response is a JSON object.\nThe allowlist service call uses the parent origin as URI parameter (URL encoded) as follows:\n\n```\nGET url/to/whitelist/service?parentOrigin=https://parent.domain.com\n```\n\nThe response is a JSON object with following properties:\n\n```\n{\n    \"version\" : \"1.0\",\n    \"active\"  : true | false,                   // indicates whether framing control is switched on\n    \"origin\"  : \"<same as passed to service>\",\n    \"framing\" : true | false                    // if active, describes if framing should be allowed\n}\n```\n\nThe property `active` will have value `false` only in case `CJ_PROTECT_WHITELIST` is not provided.\n\n**Note**: Keep in mind that the application router sends by default the X-Frame-Options header with value `SAMEORIGIN`, in the case the allowlist service is enabled, this header value probably needs to be changed, see the [X-Frame-Options](#x-frame-options-configuration) header section for details how to change it.\n\n## User API Service\nThe application router exposes a user API that returns the details of the user who is logged in. This API supports two endpoints: `/currentUser` and `/attributes`.\nThe /currentUser endpoint returns all details of logged in users, while the /attributes endpoint returns the main user properties.\nThe user API can be implemented by modelling an xs-app.json route using service sap-approuter-userapi.\n\nNote: The following applies if the route has the authentication type “xsuaa”:\n*\tUser scopes from the xsuaa access token will be added to the response of both endpoints.\n*\tUser attributes from the identity provider (IdP) chosen for the authentication will be added to the response of the “/attributes” endpoint. If a custom IdP is configured for Identity Authentication Service (IAS), the custom user attributes are also added to the response of the “/attributes” endpoint. For more information about the definition of custom properties in IAS, see [Configure the Default Attributes Sent to the Application](https://help.sap.com/docs/IDENTITY_AUTHENTICATION/6d6d63354d1242d185ab4830fc04feb1/a2f1e4692e7d4379ab82144ab309e7b3.html) on the SAP Help Portal.\n\nExamples:\n\nHandle both endpoints\n```\n{\n    \"source\": \"^/user-api(.*)\",\n    \"target\": \"$1\",\n    \"service\": \"sap-approuter-userapi\"\n},\n```\n\nHandle `/currentUser` endpoint only\n```\n{\n    \"source\": \"^/user-api/currentUser$\",\n    \"target\": \"/currentUser\",\n    \"service\": \"sap-approuter-userapi\"\n},\n```\nThe /currentUser endpoint response has the following format:\n```\n{\n   \"firstname\": \"John\",\n   \"lastname\": \"Doe\",\n   \"email\": \"john.doe@sap.com\",\n   \"name\": \"john.doe@sap.com\",\n   \"displayName\": \"John Doe (john.doe@sap.com)\",\n   \"scopes\": \"openid,user_attributes,uaa.user\" (See the note above about routes with authentication type “xsuaa”.)\n}\n```\nThe /attributes endpoint response has the following format:\n```\n{\n   \"firstname\": \"John\",\n   \"lastname\": \"Doe\",\n   \"email\": \"john.doe@sap.com\",\n   \"name\": \"john.doe@sap.com\",\n   \"scopes\": \"openid,user_attributes,uaa.user\", (See the note above about routes with authentication type “xsuaa”.)\n   <user attributes, including custom attributes> (See the note above about routes with authentication type “xsuaa”.)\n}\n```\nNote that the \"name\" property is the user ID in the identity provider, which in many cases is also the email address.\n## Scaling\n\nThe application router keeps all established sessions in local memory and does not sync them across multiple instances.\nIn order to scale the application router to multiple instances, session stickiness should be enabled.\nThis means that each HTTP session is handled by the same application router instance.\n\nIn Cloud Foundry's router, session stickiness is enabled from version 0.1.0.\n\nIn SAP HANA XS Advanced OnPremise Runtime session stickiness is enabled, if SAP Web Dispatcher is used as a router.\nThis is set by default from version 0.1535 of SAP HANA XS Advanced runtime.\nIf your on-premise runtime uses *nginx* as router, you can switch to SAP Web Dispatcher by passing the command line option `--router=webdispatcher` to `xs-controller`.\n\n## Sizing Guide for Application Router\n\nThe memory consumption of the application router is described in the [sizing guide](doc/sizingGuide.md).\n\n## Configure server-side HTTPS\n\nYou can configure application router to accept only HTTPS connections. See `httpsOptions` option of [start](doc/extending.md#startoptions-callback) function.\n\n## Audit-Log Service\n\nThe application router logs information regarding unauthorized requests. To avoid exposure of private information such as user id and IP address,  you must bind the consuming application to an instance of the audit-log service.\n\nIf you do not bind the consuming application to the audit-log service, the application router will log this information to the console output, using asterisks to mask the user id and IP address. (This is the default behavior.)\n\n\n## Troubleshooting\n\nThe application router uses _@sap/logging_ package so all of its features are available to control logging.\nFor example to set all logging and tracing to finest level set `XS_APP_LOG_LEVEL` environment variable to `debug`.\n\nIf the application is deployed on Cloud Foundry, you can change the log level by running command:\n```sh\ncf set-env <application-name> XS_APP_LOG_LEVEL debug\n```\n\nIf the application is deployed on XS Advanced On-premise Runtime, you can change the log level without restarting the application.\nFor example this command will set all logging and tracing to finest level.\n```sh\nxs set-logging-level <application-name> \"*\" debug\n```\nSee _@sap/logging_ documentation for details.\n\nYou can enable additional traces of the incoming and outgoing requests by setting the environment variable `REQUEST_TRACE` to `true`.\nWhen enabled they will log basic information for every incoming and outgoing request of the application router. This could have a performance impact.\n\nSome of the libraries used by this package employ other tracing mechanisms. For example many use the popular [debug](https://www.npmjs.com/package/debug) package. This means that by setting `DEBUG` environment variable, you can enable additional traces. Set it to `*` to enable all of them, but be careful as the output may be overwhelming.\nIn addition internal Node.js traces can be enabled via `NODE_DEBUG` environment variable. [This post](http://www.juliengilli.com/2013/05/26/Using-Node.js-NODE_DEBUG-for-fun-and-profit/) describes it in more detail.\n\n\n**Warning:** Enabling some of these options may trace security sensitive data, so use with caution.\n\nThe _@sap/logging_ package sets the header 'x-request-id' in the application router's responses.\nThis is useful if you would like to search entries belonging to a particular request execution in the application router's logs and traces.\nNote that the application router does not change the headers received from the backend and being forwarded to the client.\nIf the backend is a Node.js application which uses the _@sap/logging_ package (and also sets the 'x-request-id' header), then the value of the header\nthat the client will receive will be the one coming from the backend and not the one of the application router itself.\n\n## Getting Support\nCreate a BCP ticket on component `BC-XS-APR`\n\n## Extending Application Router\nSee [extending](doc/extending.md) for information how to extend the application router\nwith custom logic.\n\n## Best practices\n\n### Security best practices\n\n#### Content-Security-Policy\nSetting the `Content-Security-Policy` header - this is a response header which informs browsers (capable of interpreting it) about the trusted sources\nfrom which an application expects to load resources. This mechanism allows the client to detect and block malicious scripts injected into an application.\nA value can be set via the `httpHeaders` environment variable in the [additional headers configuration](#additional-headers-configuration).\nThe value represents a security policy which contains directive-value pairs. The value of a directive is an allowlist of trusted sources.\nIn case content-security-policy headers are returned from backend, they will override `httpHeaders` configuration. \nTo enable returning both (backend and local content-security-policy headers), configure environment variable `MERGE_CSP_HEADERS`.\n\nRefer to the `Content-Security-Policy` specification for more information on the header's value.\n\n**Note:** Usage of the `Content-Security-Policy` header is considered second line of defense. An application should always provide proper input validation and output encoding.\n\n### Identity Provider Configuration Best Practices\n\n#### Modelling options:\n\n1. If you to enable login in same browser window as doctor and patient you can create 2 cf routes to same approuter:\n```https://approuter-doctors.cfapps.hana.com/myapp/doctors/index.html```\n```json\n{\n  \"source\": \"^/doctors(/.*)\",\n  \"target\": \"$1\",\n  \"service\": \"html5-apps-repo-rt\",\n  \"authenticationType\": \"xsuaa\",\n  \"identityProvider\": \"doctorsIDP\"\n}\n```\n\n```https://approuter-patients.cfapps.hana.com/myapp/patients/index.html```\n```json\n{\n  \"source\": \"^/patients(/.*)\",\n  \"target\": \"$1\",\n  \"service\": \"html5-apps-repo-rt\",\n  \"authenticationType\": \"xsuaa\",\n  \"identityProvider\": \"patrientsIDP\"\n}\n```\n\n2. If you to enable single access at a time (force logout from doctors idp and re-login to patients idp), create a single cf route\n```https://approuter-hospital.cfapps.hana.com/myapp/doctors/index.html```\n```json\n{\n  \"source\": \"^/doctors(/.*)\",\n  \"target\": \"$1\",\n  \"service\": \"html5-apps-repo-rt\",\n  \"authenticationType\": \"xsuaa\",\n  \"identityProvider\": \"doctorsIDP\"\n}\n```\n \n```https://approuter-hospital.cfapps.hana.com/myapp/patients/index.html```\n```json\n{\n  \"source\": \"^/patients(/.*)\",\n  \"target\": \"$1\",\n  \"service\": \"html5-apps-repo-rt\",\n  \"authenticationType\": \"xsuaa\",\n  \"identityProvider\": \"patrientsIDP\"\n}\n```\n",
      "changelog": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## 11.1.0 - 2022-06-06\n\n### Added\n- Enhance user-api: both endpoints with user scopes, \"attributes\" endpoint with user attributes (including custom attributes)\n\n### Fixed\n- ARBE cookie: null while working with multiple backends.\n\n## 11.0.1 - 2022-05-15\n\n### Fixed\n- ARBE cookie size issue\n\n## 11.0.0 - 2022-05-09\n\n### Added\n- Support node version 14 and node version 16 instead of node version 12 and node version 14\n\n### Updated dependencies\n- async removed\n\n## 10.15.4 - 2022-05-08\n\n### Fixed\n- Instance level destination handling\n- Error handling when calling svc2Approuter middleware\n\n### Updated dependencies\n- deps: @sap/xssec@3.2.13\n- Caret (^) added to: @sap/audit-logging,@sap/e2e-trace,@sap/logging,@sap/xssec,async,node-forge,urijs\n\n\n## 10.15.3 - 2022-04-26\n\n### Fixed\n- Request contains an invalid x-csrf-token\n\n## 10.15.2 - 2022-04-24\n\n### Fixed\n- Improve readme documentation\n- Token xsrf undefined, when approuter bound to external session storage \n\n### Updated dependencies\n- deps: @sap/logging@6.1.1\n- deps: async@3.2.3\n\n## 10.15.1 - 2022-04-07\n\n### Updated dependencies\n- should-send-same-site-none removed\n- request.js removed\n- moment removed\n- deps: urijs@1.19.11\n- deps: @sap/logging@6.1.0\n\n## 10.15.0 -  2022-04-03\n\n### Added\n- External session management support in service2approuter flow\n- Return auditLog, if has multi-tenant plan oauth2, as a dependency during subscription creation\n- Write auditLog error message into subscription tenant, when approuter runs in multi-tenant mode\n- Private-link proxy type support\n- Error stack in error-handler\n\n### Updated dependencies\n- deps: body-parser@1.2.0\n\n### Fixed\n- Type error in case of missing app.services\n\n## 10.14.2 -  2022-03-23\n\n### Updated dependencies\n- deps: node-forge@1.3.0\n\n## 10.14.1 -  2022-03-23\n\n### Fixed\n- Cookie addition in decrypt cookies and check in merge cookies\n- Improve destination service resilience in SaaS Approuter\n\n## 10.14.0 - 2022-03-15\n\n### Added\n- Auto-Pipeline for ioredis support\n\n### Fixed\n- web sockets fixed status code\n- IAS logout page redirect\n- convert environment variable EXTERNAL_REVERSE_PROXY to boolean type\n\n### Updated dependencies\n- bluebird removed\n\n## 10.13.2 - 2022-03-08\n\n### Fixed\n- Change log level to info for missing host destination\n- Null object error for user property\n\n### Updated dependencies\n- deps: urijs@1.19.10\n- deps: @sap/audit-logging@5.5.1\n- deps: @sap/xsenv@3.2.1\n\n## 10.13.1 - 2022-03-01\n\n### Fixed\n- Add check for correlationId header existence in getCorrelationId\n\n## 10.13.0 - 2022-02-27\n\n### Added \n- Support multiple zoneIds in same IAS tenant\n\n### Fixed\n- Avoid reading uaa property from a null object\n- Improve error handling in exchange token\n\n### Updated dependencies\n- deps: urijs@1.19.8\n- deps: axios@0.26.0\n\n## 10.12.0 - 2022-01-30\n\n### Added \n- Replace 'request' module by 'axios'\n- Support query params in user-api\n\n### Updated dependencies\n- deps: tough-cookie@4.0.0\n\n## 10.11.3 - 2022-01-25\n\n### Updated dependencies\n- deps: @sap/audit-logging@5.4.1\n- deps: @sap/xssec@3.2.12\n\n## 10.11.2 - 2022-01-13\n\n### Updated dependencies\n- deps: scmp@1.0.0\n\n## 10.11.1 - 2022-01-12\n\n### Updated dependencies\n- deps: node-forge@1.2.1\n\n## 10.11.0 - 2022-01-11\n\n### Added\n- POST method support for logout flows\n- New env. variable to skip loading client_credentials tokens on approuter start\n- Adding minimumTokenValidity from env variable\n\n### Fixed\n- Get uaadomain from subscription manager in case XSUAA is not bound\n- Logs reduction -remove stackTrace on error log level\n- Websocket try to get status code from message string when statusCode property undefined\n- isDynamicRouting read defaultEnv.json file only in development environment\n- accessToken references\n\n### Updated dependencies\n- deps: node-forge@1.2.0\n\n## 10.10.4 - 2021-12-16\n\n### Fixed\n- SameSite cookie property concatenation   \n\n## 10.10.3 - 2021-12-13\n\n### Fixed\n- Handle bad cookie decryption error\n- Fix missing session when token validity too short\n- Set client_credentials token by tenant timeout to 5000 ms\n- setXForwardedFor remove headers correction\n\n### Added\n- Adding serverKeepAlive from env variable to routerConfig\n\n### Updated dependencies\n- deps: @sap/audit-logging@5.3.0\n- deps: debug@4.3.2 \n- deps: uuid@8.3.2\n- deps: scmp@2.1.0\n\n## 10.10.2 - 2021-12-02\n\n### Fixed\n- Adding expiration date on login-callback-provider check \n- Increase client_credentials token request timeout to 5000 ms\n- Protect accessToken references\n\n### Updated dependencies\n- deps: compressible@2.0.18\n- deps: sap/xssec@3.2.11\n\n## 10.10.1 - 2021-11-21\n\n### Fixed\n- Avoid sending certificates if not authentication type is client certificate or trusted certificate\n\n## 10.10.0 - 2021-11-18\n\n### Added\n- Propagate correlationId to xssec and UAA requests\n- Support compression of response content with multipart/mixed content type\n\n### Fixed\n- Subscriber destination consumption in public flows\n- Samesite attribute in callback login response header\n- Support destination trust certificate propagation (format pem)\n\n### Updated dependencies\n- deps: sap/xssec@3.2.10\n\n## 10.9.2 - 2021-11-09\n\n### Fixed\n- Backend invalid cookies handling\n- Add checking for missing xsappConfig file along with xs-app.json on configuration load\n\n\n### Updated dependencies\n- deps: cf-nodejs-logging-support@6.11.0\n- deps: validator@13.7.0\n\n## 10.9.1 - 2021-10-28\n\n### Fixed\n- Missing HTML5 repo token in cache failure \n\n## 10.9.0 - 2021-10-24\n\n### Added\n- Additional cookie logs\n- Support client certificate authentication (format p12)\n- Change log level to info for backend logs \n- IAS token support in service to approuter flow\n\n### Updated dependencies\n- deps: sap/xssec@3.2.8\n\n## 10.8.2 - 2021-10-11\n\n### Fixed\n- Remove clientsecret validation for mtls\n\n## 10.8.1 - 2021-10-07\n\n### Added\n- New audit log SDK support\n- Kyma Redis credentials documentation\n\n### Fixed\n- Redis credentials handling in Kyma\n- X509 client secret validation in uua schema \n\n### Updated dependencies\n- deps: http-proxy-agent@4.0.1\n- deps: https-proxy-agent@5.0.0\n- deps: @sap/audit-logging@5.1.0\n\n## 10.8.0 - 2021-09-13\n\n### Added\n- Propagate destination headers in approuter\n\n### Fixed\n- Sessions expiration in Redis\n- Connections to Redis on Azure with premium plan\n- Same site support for Lax value\n- Request url with code parameter will be directed to authentication, in case it is required\n- Session handling documentation\n- When application name does not adhere to regex, the request will be directed to main routing configuration file\n \n## 10.7.1 - 2021-08-30\n\n### Added\n- Skip xs-app.json cache support\n- Login with XSUAA certificates \n- Mutual Transport Layer Security (mTLS) handling\n- Single use token support\n\n## 10.6.1 - 2021-08-03\n\n### Fixed\n- Subscription callback requests will be directed to main routing configuration file \n- App. config response headers modify additional headers value\n\n## 10.6.0 - 2021-07-28\n\n### Added\n- HTML5 Application Repository Tenant Awareness support\n\n### Fixed\n- nullifying the Redis client when there's a connection issue with Redis\n- Clear interval when  calling approuter.close()\n\n## 10.5.1 - 2021-07-25\n\n### Fixed\n- Return error immediately when reaches login callback middleware via query parameters\n\n### Updated dependencies\n- deps: urijs@1.19.7\n\n## 10.5.0 - 2021-07-14\n\n### Added\n- Support of the configuration of the minimal logging level for the cf-nodejs-logging-support library\n\n### Fixed\n- Return an error code when calling login callback directly\n- Fix for request traces that crash the application router \n\n## 10.4.3 - 2021-07-05\n\n### Fixed\n- Display log with tenant ID, also when using direct routing URIs\n- Support of session management with redis with multiple nodes plans\n\n## 10.4.2 - 2021-06-13\n\n### Fixed\n- Correcting additional bug when Websocket Proxy is crashing if excluding a route by DIRECT_ROUTING_URI_PATTERN\n\n## 10.4.1 - 2021-06-09\n\n### Fixed\n- Changing \"favico.ico\" to \"favicon.ico\" as a predefined direct routing URI\n- Parsing client certificate for non-CF SMS subscription\n- Improving logs in path-rewriter, request-handler, service-to-approuter-middleware, oauth2-strategy\n- Adding cache-Control header ('no-cache, no-store') to the User API response\n- Correcting a bug when Websocket Proxy is crashing if excluding a route by DIRECT_ROUTING_URI_PATTERN\n\n### Updated dependencies\n- deps: ws@7.4.6\n\n## 10.4.0 - 2021-05-24\n\n### Added\n- External session management support\n\n### Fixed\n- Client certificate handling for non-CF SMS subscription\n- Expose License\n\n## 10.3.0 - 2021-05-11\n\n### Added\n- CLIENT_CERTIFICATE_HEADER_NAME configuration for non CF flows\n- Support of SAP statistics for reporting the request performance\n- AfterRequestHandler and backendTimeout extension support\n\n### Fixed\n- Lazy html5-repo client-credentials token creation in case it could not be created during startup\n- Added \"login\" as a pre-configured direct URI route to prevent unnecessary calls to the HTML5 Application Repository\n\n### Updated dependencies\n- deps: cf-nodejs-logging-support@6.7.0\n\n## 10.2.0 - 2021-04-11\n\n### Added\n- Support of routing directly to the routing configuration file (xs-app.json) of the application router using the DIRECT_ROUTING_URI_PATTERNS environment variable \n- Caching support for destinations from destination service\n\n### Fixed\n- Verify cookie when IAS and XSUAA bound\n- Websockest pong callback handling\n- Empty getDependencies configuration handling in SaaS Registry subscription\n- Handle SMS apiURLs in K8S\n- Encode redirect logout url parameters in case of xsuaa authentication\n\n## 10.1.0 - 2021-03-21\n\n### Added\n- If you are using Identity Authentication (IAS), you can now use subdomains in multitenant URLs\n- Identity Authentication (IAS) is fully supported (no longer a Beta feature)\n\n### Fixed\n- Destination token exchange when using destinations on instance level\n\n## 10.0.0 - 2021-03-10\n\n### Added\n- Support node version 12 and node version 14 instead of node version 10 and node version 12\n\n## 9.4.0 - 2021-03-09\n\n### Added\n- Support the consumption of destinations from the provider subaccount via the preferLocal property\n- Support of cross-origin resource sharing via the application router configuration file (xs-app.json)\n\n### Fixed\n- logout flow while using system plan XSUAA instance\n- missing scope in XSUAA token after refresh\n\n### Updated dependencies\n- deps: lodash@4.17.21\n- deps: @sap/audit-logging@4.2.0\n- deps: @sap/logging@6.0.3\n\n## 9.3.0 - 2021-02-24\n\n### Fixed\n- user-api consumption from local approuter\n- avoid endless loop when calling approuter with /login/callback\n\n### Added\n- Service to approuter is not beta anymore, README file changed\n\n### Updated dependencies\n- deps: urijs@1.19.6\n\n## 9.2.0 - 2021-02-14\n\n### Added\n- Support of custom response headers via the application router configuration file (xs-app.json)\n\n### Fixed\n- Verify application key without query parameters\n\n### Updated dependencies\n- deps: e2e-trace@3.0.0\n- deps: xsenv@3.1.0\n\n## 9.1.0 - 2021-01-21\n\n### Added\n- User API\n\n### Fixed\n- Connectivity authentication issue in IAS flow\n- Initialize server keepAliveTimeout to zero\n\n### Updated dependencies\n-  deps: @sap/audit-logging@3.2.0\n\n## 9.0.2 - 2021-01-14\n\n### Fixed\n- Options handling for extensibility case when html5 repo is bound\n- Logout request handling when approuter session times out\n- Use \"http_header\" section of authTokens from the Destination Service response\n\n### Updated dependencies\n- deps: urijs@1.19.5\n\n## 9.0.1 - 2020-12-20\n\n### Fixed\n- Subprotocol handling in websockets flows\n\n### Updated dependencies\n- deps: validator@13.5.2\n- deps: @sap/logging@6.0.2\n\n## 9.0.0 - 2020-12-06\n\n### Added\n- IAS authentication support\n- Forward IAS token to destination\n- IAS authentication with  XSUAA authorization\n- Subscription manager (SMS) support\n\n### Updated dependencies\n- deps: base64-url@2.3.3\n\n## 8.6.1 - 2020-11-25\n\n### Fixed\n- Wrong application URL protocol returned by onSubscription callback additional fix\n\n## 8.6.0 - 2020-11-19\n\n### Fixed\n- Wrong application URL protocol returned by onSubscription callback\n\n## 8.5.5 - 2020-10-21\n\n### Fixed\n- Destination middleware improvement\n\n## 8.5.4 - 2020-10-14\n\n### Fixed\n- Fix invalid backend response handling\n\n## 8.5.3 - 2020-10-06\n\n### Fixed\n- Do not forward SAP-Connectivity-Authentication header in onPremise flows if destination authentication type is NoAuthentication\n\n## 8.5.2 - 2020-09-21\n\n### Fixed\n- Handle SameSite:None value in client side cookies (signature, locationAfterLogin and fragmentAfterLogin)\n\n## 8.5.1 - 2020-08-25\n\n### Updated dependencies\n- deps: lodash@4.17.20\n- deps: sap/logging@5.3.1\n- deps: cf-nodejs-logging-support@6.4.3\n\n### Fixed\n- Avoid crash if user provided service without credentials\n- Don't forward auth token to connectivity in service2approuter flow if destination.forwardToken = false\n\n## 8.5.0 - 2020-08-10\n\n### Updated dependencies\n- deps: @sap/audit-logging@3.1.1\n- deps: request@2.88.2\n- deps: @sap/xssec@3.0.9\n- deps: lodash@4.17.19\n- deps: ws@7.3.1\n\n### Fixed\n- Pass tenant id in service to approuter audit log message\n\n## 8.4.1 - 2020-08-02\n\n### Fixed\n- Fix token exchange for Business Service access\n\n## 8.4.0 - 2020-08-02\n\n### Added\n- Support merge of approuter and backend content-security-policy headers\n- Support cookie merge in service2Approuter flow\n\n### Fixed\n- Handle undefined user in refresh token flow\n\n## 8.3.1 - 2020-07-26\n\n### Fixed\n- Upgrade xssec version to 3.0.7 - fix big tokens exchange error\n\n## 8.3.0 - 2020-07-23\n\n### Fixed\n- Fix missing subdomain in exchange token\n\n## 8.2.2 - 2020-07-15\n\n### Fixed\n- Adapt to changes in @sap/xssec-3.0.6 - replace secContext private subdomain property by getSubdomain method\n- Fix websocket pong behavior when status is not open\n\n## 8.2.1 - 2020-07-09\n\n### Fixed\n- SAP Passport header handling fixed in service 2 approuter flow\n\n## 8.2.0 - 2020-07-02\n\n### Fixed\n- Passport handling fix in service 2 approuter flow – increment counter\n\n### Updated dependencies\n- deps: sap/xssec@3.0.6\n\n## 8.1.1 - 2020-06-24\n\n### Announcement\n- The Preserve URL fragment (PRESERVE_FRAGMENT) will not be deprecated as previously announced.\n\n### Fixed\n- Bug correction in forwardAuthToken in business service flow\n\n## 8.1.0 - 2020-06-14\n\n### Added\n- Added fallback mechanism for html5 repo client_credentials token refresh\n- Security improvement for signature verifying during login\n\n### Fixed\n- Bug fix when calling connectivity in a non-authenticated flow (no login in approuter)\n\n## 8.0.0 - 2020-05-26\n\n### Updated dependencies\n - deps: @sap/xssec@3.0.3\n\n### Removed\n- Remove of SAP_JWT_TRUST_ACL environment variable support (functionality now comes with audience validation)\n\n## 7.1.3 - 2020-05-17\n\n### Added\n- Enhances of the x-approuter-authorization token security check in the service2Approuter flow.\n\n## 7.1.2 - 2020-05-08\n\n### Fixed\n- Fix appurl usage of x-subscriber-tenant\n\n## 7.1.1 - 2020-05-05\n\n### Added\n- Cache improvements\n- Usage of x-subscriber-tenant header when provided.\n- handle html5 repo and xsuaa destinations separately\n\n### Fixed\n- Fix connectivity token handling for Kubernetes\n\n## 7.1.0 - 2020-04-16\n\n### Added\n- Enable service logout configuration in central xs-app.json.\n### Fixed\n- Destination token cached in session is never refreshed.\n\n## 7.0.0 - 2020-04-06\n\n### Added\n- Support node version 10 and node version 12 instead of node version 8 and node version 10\n\n## 6.8.2 - 2020-03-04\n\n### Fixed\n- Fix extension of resolveUaaConfig\n\n## 6.8.1 - 2020-02-20\n\n### Fixed\n- Fix default route\n\n## 6.8.0 - 2020-02-10\n\n### Added\n- Enable external session manager extensibility when using HTML5 Repository\n\n## 6.7.2 - 2020-01-30\n\n### Added\n- Support SameSite cookie attribute\n\n### Updated dependencies\n - deps: express-session@1.17.0\n - deps: @sap/logging@5.2.0\n\n## 6.7.1 - 2019-12-24\n\n### Added\n- Backend cookies secret variable (BACKEND_COOKIES_SECRET) Secret that is used to encrypt backend session cookies in service to Application Router flow. Should be set in case multiple instances of Application Router are used. By default a random sequence of characters is used.\n\n\n## 6.7.0 - 2019-11-24\n\n### Added\n- Enhance the use of the xsenv@2.1.0 library to access bound destination service credentials, which support reading destination service credentials in Kubernetes.\n\n### Fixed\n- Anonymous login on destination flow\n\n## 6.6.0 - 2019-11-12\n\n### Announcement\n- The Preserve URL fragment (PRESERVE_FRAGMENT) is being deprecated and will be removed in the near future\n\n### Updated dependencies\n- deps: sap/xsenv@2.1.0 Application Router uses xsenv library to access bound services credentials. We have upgraded the library to xsenv version 2.1.0 which supports reading credentials in Kubernetes.\n- deps: https-proxy-agent@2.2.4\n## 6.5.1 - 2019-10-10\n\n### Fixed\n- Adding sec-websocket-protocol header as the protocol of websockets\n\n## 6.5.0 - 2019-10-03\n\n### Added\n- Timeout for Business Service\n\n### Fixed\n- Adding destination token middleware for websockets\n\n## 6.4.1 - 2019-09-23\n\n### Fixed\n- CSP header fix return frame-ancestors in login\n\n## 6.4.0 - 2019-09-16\n\n### Added\n- Allowed dynamic destinations \n- Return CSP header with no cache\n- Added setXForwardedHeaders option\n\n## 6.3.0 - 2019-09-10\n\n### Added\n- Support Cache-Control for static content from html5-repo\n\n## 6.2.0 - 2019-09-03\n\n### Added\n- Support Subscription url from vcap.\n- Adding validation - Session created for one tenant must not be used by other tenants\n\n### Updated dependencies\n - deps: @sap/xssec@2.2.2\n\n## 6.1.2 - 2019-08-28\n- Support Xsuaa credentials in request body\n\n## 6.1.1 - 2019-08-27\n- Fix in destination middleware - session.update\n \n## 6.1.0 - 2019-07-31\n\n### Added\n- Support for redirection to logout page with query parameters after central logout\n- Connectivity is now returned in subscription getDependencies callback\n\n### Fixed\n- Error when processing unknown authentication types\n\n## 6.0.2 - 2019-07-14\n\n### Fixed\n- Validation of destination with OnPremise proxyType\n- CSRF protection in Service to Approuter flow\n### Updated dependencies\n- deps: lodash@4.17.13\n\n## 6.0.1 - 2019-05-30\n\n### Fixed\n- Fixed TypeError bug when Approuter saves a cookie from backend and should logout when session timeout exceeded. \n- Fixed calculation of location after login.\n\n## 6.0.0 - 2019-05-06\n\n### Added\n- Support node version 8 and node version 10 instead of node version 4.5 and node version 6\n\n## 5.15.0 - 2019-04-29\n\n### Added\n- Support for Service to Application Router functionality (Beta version).\n- Added destination in host support.\n\n## 5.14.1 - 2019-04-17\n\n### Added\n- Enhanced Approuter application logs when serving of static content (from HTML5 App Repo) was failed.\n\n### Fixed\n- Fixed subscription callbacks url.\n\n## 5.14.0 - 2019-04-04\n\n### Added\n- Websockets support for HTML5 Application Repository.\n\n### Fixed\n- onSubscription callback.\n\n## 5.13.1 - 2019-03-27\n\n### Added\n- Added automatic recovery of Approuter after recovery of UAA.\n\n### Fixed\n- Fixed subscription callbacks url.\n- Fixed avoid central appConfig routes overrides.\n\n### Updated dependencies\n - deps: @sap/xssec@2.1.16\n\n## 5.13.0 - 2019-02-14\n\n### Added\n- Ability to define identity provider for authentication in the route.\n\n## 5.12.0 - 2019-02-05\n\n### Added\n- Dynamic destination support.\n\n## 5.11.0 - 2019-01-22\n\n### Added\n- Client credentials token support.\n\n## 5.10.2 - 2019-01-08\n\n### Fixed\n- Fix proxy issue in Connectivity flow.\n\n## 5.10.1 - 2019-01-03\n\n### Fixed\n- Fixed flow of access destination via desination service.\n\n## 5.10.0 - 2018-12-30\n\n### Added\n- Propagation of approuter host during logout.\n\n## 5.9.0 - 2018-12-18\n\n### Added\n- Ability to change destination without restarting application on CF\n- Access destination that is exposed on destination service instance level.\n- Enabled all authentication types defined in the destination service.\n\n## 5.8.0 - 2018-10-27\n\n### Fixed\n- Fix login flow for URLs with empty query (URL that ends with '?').\n\n### Added\n- Documentation of integration with HTML5 Apps Repo.\n\n### Updated dependencies\n - deps: ws@1.1.5\n - deps: lodash@4.17.11\n - deps: @sap/logging@4.0.2\n    - deps: lodash@4.17.11\n\n## 5.7.0 - 2018-10-08\n\n### Added\n - Propagate client id to UAA during Logout\n \n## 5.6.4 - 2018-08-27\n\n### Updated dependencies\n- deps: @sap/audit-logging@2.2.4\n- deps: sync-request@5.0.0\n     \n### Fixed\n- Duplicate destination names in xs-app.json bug\n\n## 5.6.3 - 2018-08-15\n\n### Updated dependencies\n - deps: e2e-trace@1.3.0\n - deps: xssec@2.1.15\n    - deps: request@2.88.0\n\n### Fixed\n - Fix bug of post/put requests with content/type=application/json\n\n## 5.6.2 - 2018-08-09\n\n### Updated dependencies\n - deps: serve-static@1.13.2\n    - deps: send@0.16.1\n\t     - deps: mime@1.4.1\n\t     - \tdeps: debug@2.6.9\n\n### Fixed\n - Fix error in case of local destination and UAA with tenant mode shared\n \n## 5.6.1 - 2018-08-07\n\n### Updated dependencies\n - deps: body-parser@1.18.3\n - deps: uid-safe@2.1.5\n - deps: @sap/xssec@2.1.9\n - deps: send@0.16.2\n - deps: compression@1.7.3\n - deps: express-session@1.15.6\n - deps: connect@3.6.5\n\n## 5.6.0 - 2018-08-05\n\n### Added\n - Added SaaS application registration support (subscription)\n - Enhanced usage of PreserveHostHeader additional property\n\n### Fixed\n - Fix error handling in case of bad signature\n\n## 5.5.0 - 2018-07-19\n\n### Added\n - Added optional additional properties 'PreserveHostHeader' to Destination service\n - Added optional additional properties 'sap-client' to Destination service\n\n## 5.4.2 - 2018-07-04\n\n### Fixed\n - Fix refresh page location after timeout bug\n - Fix fragment cookie name bug\n - Fix vulnerabilities issues\n \n## 5.4.1 - 2018-06-25\n \n### Fixed\n - Fix logout bug\n\n## 5.4.0 - 2018-06-10\n\n### Added\n - Support extensibility of logout end-point \n \n### Fixed\n - Fix vulnerabilities issues\n\n## 5.3.0 - 2018-05-13\n\n### Added\n - Enable extended session management\n - Enable Correlation ID propagation\n\n## 5.2.1 - 2018-05-02\n\n### Added\n - Support audit log service\n\n## 5.2.0 - 2018-04-16\n\n### Added\n - Support routing to destination with authentication type OAuth2SAMLBearerAssertion\n\n### Fixed\n - Fix bug in forward undefine token\n\n\n## 5.1.0 - 2018-03-14\n\n### Added\n - Support destination configuration from destination service\n\n### Fixed\n - Fix bug in trace functionality\n - Fix bug in fragment functionality\n\n## 5.0.0 - 2018-01-29\n\n### Fixed\n - Minor fix in destinations handling in Extension flow.\n - Fix fragment handling in URL during Login flow.\n \n## 4.0.1 - 2018-01-01\n\n### Fixed\n - Minor fixes in CORs.\n\n## 4.0.0 - 2017-12-18\n\n### Added\n - Application router can consume content from the HTML5 application repository.\n\n### Fixed\n - Fix in headers handling when using CF destination and onPremise destination in same xs-app.json.\n - Minor fix in CORs.\n\n## 3.0.1 - 2017-10-08\n\n### Removed\n - Node 0.12 support.\n \n## 2.10.0 - 2017-07-30\n\n### Added\n - Enabled connectivity to on premise backend.\n - Added external reverse proxy support.\n\n### Fixed\n - Fix CSRF token generation to use a Secure Random number generator.\n\n## 2.9.1 - 2017-06-29\n\n### Fixed\n - Minor fixes in CORs.\n - Introduce CORs feature in README.md.\n \n## 2.9.0 - 2017-06-27\n\n### Added\n - Support for CORs functionality.\n\n## 2.8.2 - 2017-06-13\n\n### Fixed\n - Fix cancel request.\n - Fix logout in dynamic routing.\n\n## 2.8.1 - 2017-06-01\n\n### Fixed\n - Fixes in documentation of dynamic routing and troubleshooting section.\n - Fix logout when using websocket.\n\n## 2.8.0 - 2017-04-26\n\n### Added\n - Introduce table of contents in README.md.\n - Added JWT refresh in websocket connections.\n - Significant performance improvements via adopting @sap/logging version 3\n\n## 2.7.1 - 2017-03-20\n\n### Fixed\n - Add username to logs.\n - Minor fixes in websockets and session handling.\n\n## 2.7.0 - 2017-02-13\n\n### Added\n- Replacements from services.\n- Start approuter on https\n- Show warning when a route is explicitly both public and csrf protected.\n\n### Fixed\n- Should not escape client cookies.\n- Redirect to welcome page if not CSRF token fetch request.\n- Wrong basic authentication status codes.\n\n## 2.6.1 - 2017-01-25\n\n### Changed\n- Rename package to use @sap scope\n\n## 2.6.0 - 2017-01-25\n\n### Added\n- `REQUEST_TRACE` environment variable for enhanced request tracing.\n- Support for PATCH in router configuration.\n- New extensions - see extending.md.\n\n### Removed\n- Customizable UAA config resolution.\n\n### Fixed\n- Fixes in documentation.\n- Handling of request protocol.\n- Removed npm 2 restriction.\n\n## 2.5.0 - 2016-12-13\n\n### Added\n- Enable customizable UAA config resolution\n- Support for custom error pages (errorPage in xs-app.json)\n- Extend sizing guide\n\n### Fixed\n- Crash in error handler due to missing logger.\n- Does not cache login responses.\n- Does not log UAA missing when not needed.\n- In case of parallel logins Approuter may use wrong user.\n- Does not send basic credentials to backend, unless route is public.\n\n## 2.4.0 - 2016-11-16\n\n### Added\n- Introduce SECURE_SESSION_COOKIE environment variable - enforces the secure flag of application router's session cookie.\n- Additional checks for regular expressions during startup.\n\n### Changed\n- Previous component name in sap passport has been changed to 'XSA Approuter'.\n\n### Fixed\n - Missing logging context in error handler when using extensions.\n\n## 2.3.4 - 2016-11-04\n\n### Fixed\n- The _x-csrf-token_ header is no longer forwarded to backend in case a path requires authentication and CSRF token protection.\n- Set the _Secure_ flag of the session cookie depending on the environment application router runs in.\n- Some of the links in README.md were broken.\n\n## 2.3.3 - 2016-11-02\n\n### Added\n-\tAdd COMPRESSION env var to be able to configure compression.\n\n### Fixed\n- Do not cache wsAllowedOrigins across requests.\n- Favor UAA config from default-env.json over default-services.json.\n-\tExtend error message for proxy settings problem.\n-\tEnable compression by default when custom setting is provided.\n-\tPropagate errors to handler.\n- Avoid session resave at the end of request. Fix session overwrite.\n\n## 2.3.2 - 2016-09-30\n\n### Fixed\n- Cookie locationAfterLogin clash in port based routing.\n\n## 2.3.1 - 2016-09-28\n\n### Fixed\n- Unverified redirect via locationAfterLogin cookie.\n- Fallback to default UAA if no tenant captured.\n- Fix X-Frame-Options header overwriting.\n- Session cookie name - use application_id instead of instance_id.\n- Fix port validation for approuter.start().\n\n## 2.3.0 - 2016-09-02\n\n### Added\n- Multitenancy support.\n- Matching route by both URL path and HTTP method.\n\n### Fixed\n- Fixed race condition while CSRF token generation.\n\n## 2.2.0 - 2016-08-17\n\n### Added\n- Start approuter with xs-app.json passed as an object.\n- Follow symlinks in localDir config.\n- Document the Content-Security-Policy header as a best practice.\n\n## 2.1.3 - 2016-08-13\n\n### Added\n- Genarate CSRF token once per session.\n\n## 2.1.2 - 2016-08-06\n\n### Fixed\n- Remove instance cookies from client request.\n- Fix locatioinAfterLogin cookie path.\n\n## 2.1.1 - 2016-07-24\n\n### Fixed\n- Support to host welcome page externally.\n- Fix logout path matching.\n- Fix 500 sent in case locationAfterLogin cookie is missing.\n\n\n## 2.1.0 - 2016-07-17\n\n### Added\n- Allow source of route to be matched in case-insensitive way.\n- New configuration for maximum client connection timeout.\n- Add support for approuter extensions (custom middleware).\n- Allow fetching CSRF token with HEAD request.\n\n## 2.0.0 - 2016-05-12\n\n### Added\n- Configuration for the Cache-Control header in xs-app.json. The header is used when serving static resources.\n\n### Removed\n- local-* files (e.g. local-destinations, local-plugins) can no longer be used in the approuter during local development. Instead of these the approuter reads a single file located in the working directory (default-env.json), which contains the corresponding environment variables (e.g. destinations, plugins) and their values.\n",
      "downloadsCurrentMonth": 71773,
      "downloadsCurrentFortnight": 31013,
      "downloads365": 772732,
      "downloadsFortnightGrowth": -23.91,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 62192 },
        { "yearMonth": "2021-08", "downloads": 58329 },
        { "yearMonth": "2021-09", "downloads": 62895 },
        { "yearMonth": "2021-10", "downloads": 60452 },
        { "yearMonth": "2021-11", "downloads": 64446 },
        { "yearMonth": "2021-12", "downloads": 62270 },
        { "yearMonth": "2022-01", "downloads": 60809 },
        { "yearMonth": "2022-02", "downloads": 62424 },
        { "yearMonth": "2022-03", "downloads": 72825 },
        { "yearMonth": "2022-04", "downloads": 71195 },
        { "yearMonth": "2022-05", "downloads": 74559 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T19:49:25.398Z" },
        { "version": "7.1.0", "date": "2020-06-11T19:49:25.821Z" },
        { "version": "modified", "date": "2022-06-06T16:29:36.430Z" },
        { "version": "6.7.0", "date": "2020-06-11T19:49:33.538Z" },
        { "version": "6.0.0", "date": "2020-06-11T19:49:40.990Z" },
        { "version": "5.7.0", "date": "2020-06-11T19:49:48.137Z" },
        { "version": "2.10.0", "date": "2020-06-11T19:49:55.785Z" },
        { "version": "5.14.0", "date": "2020-06-11T19:50:03.773Z" },
        { "version": "5.15.0", "date": "2020-06-11T19:50:13.795Z" },
        { "version": "5.13.1", "date": "2020-06-11T19:50:22.936Z" },
        { "version": "7.1.3", "date": "2020-06-11T19:50:31.070Z" },
        { "version": "5.10.1", "date": "2020-06-11T19:50:39.855Z" },
        { "version": "5.11.0", "date": "2020-06-11T19:50:49.299Z" },
        { "version": "4.0.0", "date": "2020-06-11T19:50:57.802Z" },
        { "version": "5.14.1", "date": "2020-06-11T19:51:05.217Z" },
        { "version": "2.7.0", "date": "2020-06-11T19:51:12.093Z" },
        { "version": "5.4.2", "date": "2020-06-11T19:51:20.705Z" },
        { "version": "5.0.0", "date": "2020-06-11T19:51:29.162Z" },
        { "version": "5.13.0", "date": "2020-06-11T19:51:37.442Z" },
        { "version": "3.0.1", "date": "2020-06-11T19:51:45.056Z" },
        { "version": "6.8.2", "date": "2020-06-11T19:51:53.054Z" },
        { "version": "5.6.1", "date": "2020-06-11T19:52:03.209Z" },
        { "version": "7.1.2", "date": "2020-06-11T19:52:10.593Z" },
        { "version": "5.5.0", "date": "2020-06-11T19:52:19.959Z" },
        { "version": "6.0.2", "date": "2020-06-11T19:52:29.030Z" },
        { "version": "2.7.1", "date": "2020-06-11T19:52:37.581Z" },
        { "version": "5.6.3", "date": "2020-06-11T19:52:45.373Z" },
        { "version": "6.8.1", "date": "2020-06-11T19:52:54.123Z" },
        { "version": "5.6.4", "date": "2020-06-11T19:53:05.713Z" },
        { "version": "5.2.1", "date": "2020-06-11T19:53:13.666Z" },
        { "version": "6.5.0", "date": "2020-06-11T19:53:21.005Z" },
        { "version": "5.4.1", "date": "2020-06-11T19:53:29.645Z" },
        { "version": "6.4.0", "date": "2020-06-11T19:53:38.278Z" },
        { "version": "5.8.0", "date": "2020-06-11T19:53:47.320Z" },
        { "version": "4.0.1", "date": "2020-06-11T19:53:54.745Z" },
        { "version": "6.4.1", "date": "2020-06-11T19:54:05.240Z" },
        { "version": "8.0.0", "date": "2020-06-11T19:54:14.880Z" },
        { "version": "5.9.0", "date": "2020-06-11T19:54:22.229Z" },
        { "version": "6.3.0", "date": "2020-06-11T19:54:29.580Z" },
        { "version": "6.1.2", "date": "2020-06-11T19:54:37.656Z" },
        { "version": "6.5.1", "date": "2020-06-11T19:54:46.619Z" },
        { "version": "5.10.2", "date": "2020-06-11T19:54:54.012Z" },
        { "version": "5.1.0", "date": "2020-06-11T19:55:03.500Z" },
        { "version": "2.6.1", "date": "2020-06-11T19:55:11.127Z" },
        { "version": "5.2.0", "date": "2020-06-11T19:55:18.394Z" },
        { "version": "6.6.0", "date": "2020-06-11T19:55:30.987Z" },
        { "version": "6.7.2", "date": "2020-06-11T19:55:39.811Z" },
        { "version": "6.2.0", "date": "2020-06-11T19:55:47.065Z" },
        { "version": "7.0.0", "date": "2020-06-11T19:55:58.185Z" },
        { "version": "5.6.2", "date": "2020-06-11T19:56:06.805Z" },
        { "version": "7.1.1", "date": "2020-06-11T19:56:24.334Z" },
        { "version": "6.1.0", "date": "2020-06-11T19:56:43.162Z" },
        { "version": "6.7.1", "date": "2020-06-11T19:56:51.045Z" },
        { "version": "2.9.1", "date": "2020-06-11T19:56:59.756Z" },
        { "version": "6.0.1", "date": "2020-06-11T19:57:07.294Z" },
        { "version": "5.3.0", "date": "2020-06-11T19:57:17.437Z" },
        { "version": "5.12.0", "date": "2020-06-11T19:57:27.627Z" },
        { "version": "6.1.1", "date": "2020-06-11T19:57:36.244Z" },
        { "version": "5.10.0", "date": "2020-06-11T19:57:44.157Z" },
        { "version": "6.8.0", "date": "2020-06-11T19:57:51.730Z" },
        { "version": "8.1.0", "date": "2020-06-15T19:40:53.898Z" },
        { "version": "8.1.1", "date": "2020-06-17T10:28:48.157Z" },
        { "version": "8.1.2", "date": "2020-06-17T10:30:31.769Z" },
        { "version": "8.1.3", "date": "2020-06-18T08:31:50.833Z" },
        { "version": "8.2.0", "date": "2020-07-03T08:47:30.942Z" },
        { "version": "8.2.1", "date": "2020-07-09T14:48:03.899Z" },
        { "version": "8.2.2", "date": "2020-07-16T11:45:15.594Z" },
        { "version": "8.3.0", "date": "2020-07-23T17:27:02.019Z" },
        { "version": "8.3.1", "date": "2020-07-27T06:53:22.573Z" },
        { "version": "8.4.0", "date": "2020-08-02T09:47:35.116Z" },
        { "version": "8.4.1", "date": "2020-08-02T20:07:48.297Z" },
        { "version": "8.5.0", "date": "2020-08-10T12:09:53.012Z" },
        { "version": "8.5.1", "date": "2020-08-30T15:02:46.491Z" },
        { "version": "8.5.2", "date": "2020-09-21T09:05:43.594Z" },
        { "version": "8.5.3", "date": "2020-10-07T13:04:20.559Z" },
        { "version": "8.5.4", "date": "2020-10-14T11:45:06.922Z" },
        { "version": "8.5.5", "date": "2020-10-26T08:35:14.261Z" },
        { "version": "8.6.0", "date": "2020-11-19T14:15:35.086Z" },
        { "version": "8.6.1", "date": "2020-11-25T12:47:06.651Z" },
        { "version": "9.0.0", "date": "2020-12-08T14:01:24.163Z" },
        { "version": "9.0.1", "date": "2020-12-20T14:47:24.892Z" },
        { "version": "9.0.2", "date": "2021-01-14T13:05:10.619Z" },
        { "version": "9.1.0", "date": "2021-01-26T12:39:31.083Z" },
        { "version": "9.2.0", "date": "2021-02-15T16:26:55.025Z" },
        { "version": "9.3.0", "date": "2021-02-24T17:30:05.707Z" },
        { "version": "9.4.0", "date": "2021-03-09T16:23:00.082Z" },
        { "version": "10.0.0", "date": "2021-03-10T16:19:56.897Z" },
        { "version": "10.1.0", "date": "2021-03-21T10:43:57.218Z" },
        { "version": "10.2.0", "date": "2021-04-11T11:06:06.987Z" },
        { "version": "10.3.0", "date": "2021-05-19T14:43:28.495Z" },
        { "version": "10.4.0", "date": "2021-05-25T13:12:48.767Z" },
        { "version": "10.4.1", "date": "2021-06-09T14:26:36.936Z" },
        { "version": "10.4.2", "date": "2021-06-13T19:05:48.282Z" },
        { "version": "10.4.3", "date": "2021-07-05T09:59:05.896Z" },
        { "version": "10.5.0", "date": "2021-07-14T18:45:07.065Z" },
        { "version": "10.5.1", "date": "2021-07-25T15:08:54.585Z" },
        { "version": "10.6.0", "date": "2021-07-28T11:14:59.985Z" },
        { "version": "10.6.1", "date": "2021-08-03T10:08:11.256Z" },
        { "version": "10.7.1", "date": "2021-08-30T14:58:03.975Z" },
        { "version": "10.8.0", "date": "2021-09-13T11:48:44.069Z" },
        { "version": "10.8.1", "date": "2021-10-07T08:31:33.979Z" },
        { "version": "10.8.2", "date": "2021-10-11T08:33:47.332Z" },
        { "version": "10.9.0", "date": "2021-10-24T10:36:17.700Z" },
        { "version": "10.9.1", "date": "2021-10-28T16:00:55.131Z" },
        { "version": "10.9.2", "date": "2021-11-09T12:19:52.989Z" },
        { "version": "10.10.0", "date": "2021-11-18T11:57:37.706Z" },
        { "version": "10.10.1", "date": "2021-11-22T08:55:17.182Z" },
        { "version": "10.10.2", "date": "2021-12-02T12:18:06.694Z" },
        { "version": "10.10.3", "date": "2021-12-13T08:56:09.942Z" },
        { "version": "10.10.4", "date": "2021-12-16T18:39:42.752Z" },
        { "version": "10.11.0", "date": "2022-01-11T10:11:32.045Z" },
        { "version": "10.11.1", "date": "2022-01-12T09:21:20.619Z" },
        { "version": "10.11.2", "date": "2022-01-13T14:27:39.182Z" },
        { "version": "10.11.3", "date": "2022-01-25T12:27:47.516Z" },
        { "version": "10.12.0", "date": "2022-01-30T13:51:29.744Z" },
        { "version": "10.13.0", "date": "2022-02-27T16:32:39.147Z" },
        { "version": "10.13.1", "date": "2022-03-01T11:55:09.683Z" },
        { "version": "10.13.2", "date": "2022-03-08T14:24:14.646Z" },
        { "version": "10.14.0", "date": "2022-03-15T16:06:53.297Z" },
        { "version": "10.14.1", "date": "2022-03-23T09:31:06.158Z" },
        { "version": "10.14.2", "date": "2022-03-23T11:16:28.344Z" },
        { "version": "10.15.0", "date": "2022-04-03T14:36:18.553Z" },
        { "version": "10.15.1", "date": "2022-04-07T14:45:15.425Z" },
        { "version": "10.15.2", "date": "2022-04-24T15:23:21.644Z" },
        { "version": "10.15.3", "date": "2022-04-26T09:48:44.569Z" },
        { "version": "10.15.4", "date": "2022-05-08T15:51:53.721Z" },
        { "version": "11.0.0", "date": "2022-05-09T11:39:59.110Z" },
        { "version": "11.0.1", "date": "2022-05-15T15:15:50.327Z" },
        { "version": "11.1.0", "date": "2022-06-06T16:29:36.338Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/approuter"
    },
    {
      "name": "artifact-management-base-types",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2021-10-26T08:49:15.924Z",
      "updatedAt": "2022-06-06T02:32:30.851Z",
      "readme": "# Introduction\nThis package contains type definitions for [artifact-management-base](https://www.npmjs.com/package/@sap/artifact-management-base).\n\n# Usage\n npm i @sap/artifact-management-base-types",
      "downloadsCurrentMonth": 533,
      "downloadsCurrentFortnight": 179,
      "downloads365": 2604,
      "downloadsFortnightGrowth": -49.44,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 0 },
        { "yearMonth": "2021-08", "downloads": 0 },
        { "yearMonth": "2021-09", "downloads": 0 },
        { "yearMonth": "2021-10", "downloads": 45 },
        { "yearMonth": "2021-11", "downloads": 570 },
        { "yearMonth": "2021-12", "downloads": 195 },
        { "yearMonth": "2022-01", "downloads": 301 },
        { "yearMonth": "2022-02", "downloads": 333 },
        { "yearMonth": "2022-03", "downloads": 362 },
        { "yearMonth": "2022-04", "downloads": 202 },
        { "yearMonth": "2022-05", "downloads": 468 }
      ],
      "versions": [
        { "version": "created", "date": "2021-10-26T08:49:15.924Z" },
        { "version": "1.1.0", "date": "2021-10-26T08:49:16.110Z" },
        { "version": "modified", "date": "2022-06-06T02:32:30.851Z" },
        { "version": "1.1.1", "date": "2021-11-15T15:17:15.317Z" },
        { "version": "1.1.2", "date": "2021-11-16T08:00:39.805Z" },
        { "version": "1.1.3", "date": "2021-11-24T11:12:31.897Z" },
        { "version": "1.2.0", "date": "2021-11-24T11:43:25.597Z" },
        { "version": "1.3.0", "date": "2021-12-22T15:08:44.988Z" },
        { "version": "1.4.0", "date": "2022-01-13T16:28:09.884Z" },
        { "version": "1.5.0", "date": "2022-02-01T05:22:30.398Z" },
        { "version": "1.6.0", "date": "2022-02-11T04:21:55.390Z" },
        { "version": "1.6.1", "date": "2022-02-17T13:28:34.567Z" },
        { "version": "1.7.0", "date": "2022-02-25T05:50:57.309Z" },
        { "version": "1.8.0", "date": "2022-03-14T05:14:46.466Z" },
        { "version": "1.8.1", "date": "2022-03-18T01:15:41.774Z" },
        { "version": "1.9.0", "date": "2022-03-25T04:08:37.574Z" },
        { "version": "1.10.0", "date": "2022-04-08T06:15:38.431Z" },
        { "version": "1.11.0", "date": "2022-05-10T10:04:58.557Z" },
        { "version": "1.11.1", "date": "2022-05-17T12:10:26.828Z" },
        { "version": "1.12.0", "date": "2022-06-06T02:32:30.761Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/artifact-management-base-types"
    },
    {
      "name": "artifact-management-base",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2021-10-26T08:49:07.276Z",
      "updatedAt": "2022-06-06T02:32:23.103Z",
      "readme": "# Introduction\nThis package contains helper classes/methods that are used by [artifact-management](https://www.npmjs.com/package/@sap/artifact-management) and plugins.\nThis serves as the dependency for artifact-management and plugins.",
      "changelog": "## 1.11.1 - 17 May, 2022\n* Version update for `@sap/artifact-managment@1.11.1`\n## 1.11.0 - 26 April, 2022\n* Version update for `@sap/artifact-managment@1.11.0`\n## 1.10.0 - 7 April, 2022\n* Version update for `@sap/artifact-managment@1.10.0`\n## 1.9.0 - 24 March, 2022\n* Version update for `@sap/artifact-managment@1.9.0`\n## 1.8.1 - 17 March, 2022\n* Version update for `@sap/artifact-managment@1.8.1`\n## 1.8.0 - 10 March, 2022\n* Version update for `@sap/artifact-managment@1.8.0`\n## 1.7.0 - 24 February, 2022\n* Version update for `@sap/artifact-managment@1.7.0`\n## 1.6.0 - 10 February, 2022\n* Version update for `@sap/artifact-managment@1.6.0`\n## 1.5.0 - 28 January, 2022\n* Version update for `@sap/artifact-managment@1.5.0`\n## 1.4.0 - 07 January, 2022\n* Version update for `@sap/artifact-managment@1.4.0`\n## 1.3.0 - 22 December, 2021\n* Version update for `@sap/artifact-managment@1.3.0`\n## 1.2.0 - 24 November, 2021\n* Version update for `@sap/artifact-managment@1.2.0`\n## 1.1.1 - 15 November, 2021\n### Changed\n* Remove import of `ReflectedModel` from cds and changed the type of csn object to `any`.\n* Updated chokidar version from `3.5.1` to `3.5.2`.\n\n## 1.1.0 - 25 October, 2021\n* Initial release.\n",
      "downloadsCurrentMonth": 345,
      "downloadsCurrentFortnight": 82,
      "downloads365": 2210,
      "downloadsFortnightGrowth": -68.82,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 0 },
        { "yearMonth": "2021-08", "downloads": 0 },
        { "yearMonth": "2021-09", "downloads": 0 },
        { "yearMonth": "2021-10", "downloads": 48 },
        { "yearMonth": "2021-11", "downloads": 442 },
        { "yearMonth": "2021-12", "downloads": 151 },
        { "yearMonth": "2022-01", "downloads": 330 },
        { "yearMonth": "2022-02", "downloads": 344 },
        { "yearMonth": "2022-03", "downloads": 321 },
        { "yearMonth": "2022-04", "downloads": 201 },
        { "yearMonth": "2022-05", "downloads": 315 }
      ],
      "versions": [
        { "version": "created", "date": "2021-10-26T08:49:07.276Z" },
        { "version": "1.1.0", "date": "2021-10-26T08:49:07.504Z" },
        { "version": "modified", "date": "2022-06-06T02:32:23.103Z" },
        { "version": "1.1.1", "date": "2021-11-15T15:17:07.037Z" },
        { "version": "1.1.2", "date": "2021-11-16T08:00:29.423Z" },
        { "version": "1.1.3", "date": "2021-11-24T11:12:18.434Z" },
        { "version": "1.2.0", "date": "2021-11-24T11:43:15.212Z" },
        { "version": "1.3.0", "date": "2021-12-22T15:08:31.879Z" },
        { "version": "1.4.0", "date": "2022-01-13T16:27:59.076Z" },
        { "version": "1.5.0", "date": "2022-02-01T05:22:18.230Z" },
        { "version": "1.6.0", "date": "2022-02-11T04:21:44.435Z" },
        { "version": "1.6.1", "date": "2022-02-17T13:28:26.349Z" },
        { "version": "1.7.0", "date": "2022-02-25T05:50:49.353Z" },
        { "version": "1.8.0", "date": "2022-03-14T05:14:38.539Z" },
        { "version": "1.8.1", "date": "2022-03-18T01:15:33.623Z" },
        { "version": "1.9.0", "date": "2022-03-25T04:08:29.454Z" },
        { "version": "1.10.0", "date": "2022-04-08T06:15:30.981Z" },
        { "version": "1.11.0", "date": "2022-05-10T10:04:49.161Z" },
        { "version": "1.11.1", "date": "2022-05-17T12:10:19.369Z" },
        { "version": "1.12.0", "date": "2022-06-06T02:32:23.034Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/artifact-management-base"
    },
    {
      "name": "artifact-management-types",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2021-10-26T08:49:24.665Z",
      "updatedAt": "2022-06-06T02:32:39.388Z",
      "readme": "# Introduction\nThis package contains type definitions for [artifact-management](https://www.npmjs.com/package/@sap/artifact-management).\n\n# Usage\n npm i @sap/artifact-management-types",
      "downloadsCurrentMonth": 484,
      "downloadsCurrentFortnight": 167,
      "downloads365": 2366,
      "downloadsFortnightGrowth": -47.32,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 0 },
        { "yearMonth": "2021-08", "downloads": 0 },
        { "yearMonth": "2021-09", "downloads": 0 },
        { "yearMonth": "2021-10", "downloads": 44 },
        { "yearMonth": "2021-11", "downloads": 432 },
        { "yearMonth": "2021-12", "downloads": 174 },
        { "yearMonth": "2022-01", "downloads": 373 },
        { "yearMonth": "2022-02", "downloads": 310 },
        { "yearMonth": "2022-03", "downloads": 314 },
        { "yearMonth": "2022-04", "downloads": 177 },
        { "yearMonth": "2022-05", "downloads": 423 }
      ],
      "versions": [
        { "version": "created", "date": "2021-10-26T08:49:24.665Z" },
        { "version": "1.1.0", "date": "2021-10-26T08:49:24.899Z" },
        { "version": "modified", "date": "2022-06-06T02:32:39.388Z" },
        { "version": "1.1.1", "date": "2021-11-15T15:17:23.589Z" },
        { "version": "1.1.2", "date": "2021-11-16T08:00:49.824Z" },
        { "version": "1.1.3", "date": "2021-11-24T11:12:42.307Z" },
        { "version": "1.2.0", "date": "2021-11-24T11:43:35.649Z" },
        { "version": "1.3.0", "date": "2021-12-22T15:09:11.204Z" },
        { "version": "1.4.0", "date": "2022-01-13T16:28:32.679Z" },
        { "version": "1.5.0", "date": "2022-02-01T05:23:01.334Z" },
        { "version": "1.6.0", "date": "2022-02-11T04:22:30.366Z" },
        { "version": "1.6.1", "date": "2022-02-17T13:28:50.877Z" },
        { "version": "1.7.0", "date": "2022-02-25T05:51:11.428Z" },
        { "version": "1.8.0", "date": "2022-03-14T05:15:07.368Z" },
        { "version": "1.8.1", "date": "2022-03-18T01:16:00.019Z" },
        { "version": "1.9.0", "date": "2022-03-25T04:08:51.563Z" },
        { "version": "1.10.0", "date": "2022-04-08T06:15:52.423Z" },
        { "version": "1.11.0", "date": "2022-05-10T10:05:07.906Z" },
        { "version": "1.11.1", "date": "2022-05-17T12:10:35.517Z" },
        { "version": "1.12.0", "date": "2022-06-06T02:32:39.322Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/artifact-management-types"
    },
    {
      "name": "artifact-management",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2021-08-03T09:36:48.630Z",
      "updatedAt": "2022-06-06T02:32:15.520Z",
      "readme": "# Introduction\n\nArtifact Management on SAP BTP facilitates the generation of project metadata comprising of multiple modules of different technologies,\nbundles the module into one single deployment artifact and supports one click deploy to Cloud Foundry\n\n## Key Capabilities\n* Access to project properties\n* Access to VSCode workspace\n* Provide list of modules and items of each module\n* Watchers to notify of changes to project\n* Support of tags and filter\n* Capability to Test run\n* Capability to generate \n[MTA yaml](https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.04/en-US/ebb42efc880c4276a5f2294063fae0c3.html) and \n[MTAR](https://sap.github.io/cloud-mta-build-tool)\n* Deployment of MTAR to [Cloud Foundry](https://www.cloudfoundry.org)\n* Plugins for SAP technologies such as \n[MDK](https://developers.sap.com/topics/mobile-development-kit.html),\n[FioriElement](https://sapui5.hana.ondemand.com/sdk/#/topic/03265b0408e2432c9571d6b3feb6b1fd),\n[Workflow](https://developers.sap.com/group.cp-workflow-cf.html),\n[CAP](https://cap.cloud.sap/docs/), \n[XSUAA](https://blogs.sap.com/2019/01/07/uaa-xsuaa-platform-uaa-cfuaa-what-is-it-all-about/)\n\n---\n\n### Pre-Requisites\n\n* Node.JS 12 or higher\n* CAP Development Kit (`npm install -g @sap/cds-dk`)\n\n### Pre-Requisites to Build and Deploy MTARs\n\n* [MTAR builder](https://www.npmjs.com/package/mbt) (`npm install -g mbt`)\n* Install [lerna] for mono-repo building (`npm install -g lerna`)\n* Install MDK-Tools, `npm install @sap/mdk-tools -g`\n* [Cloud Foundary CLI](https://docs.cloudfoundry.org/cf-cli/install-go-cli.html), Install cf-cli and run command `cf install-plugin multiapps`.\n\n---\n\n### Initialization\n```\nnpm i -g @sap/artifact-management\n```\nThere are two main sets of classes provided by the library. \n- `ProjectApi`, `ProjectImpl` : These are the interface and implmentation classes respectively for project level usages.\n- `WorkspaceApi`, `WorkspaceImpl` : These are the interface and implmentation classes respectively for Workspace level usages.\n\nYou can import the module in your code as follows:\n`import { ProjectImpl } from '@sap/artifact-management';`\n\nTo initialise Project API, instance of ProjectImpl has to be created which takes absolute path of a project.\n```\nimport { ProjectImpl } from '@sap/artifact-management';\nconst path = '<my-application-folder-root-path>';\n\n/**\n* readModuleAsProject Default value is false.\n* If the boolean is false, then only lcap/cap projects are read.\n* If true then any project can also be read.\n*/\nconst readModuleAsProject = false\n\nconst project = new ProjectImpl(path ,readModuleAsProject);\n```\n\nTo initialise Workspace API, instance of WorkspaceImpl has to be created.\n```\nimport { WorkspaceImpl } from '@sap/artifact-management';\nconst workspace = new WorkspaceImpl();\n```\n\nThe library also provides CLI `dev-project` which can be used to visualise the outputs of APIs as shown in the following section.\n\n---\n# APIs & Examples\n\n## Access to VSCode workspace\n### Get Projects \n###### Description\nGet all the projects in the workspace. Get the project based on tag if provided and Return type is array of ProjectAPIs / Returns ProjectAPI based on the tag.\n###### Method\n`getProjects(tag?: Tag) : Promise<ProjectApi[]>`\n\n###### Parameters\n- tag: (Optional) `Tag` value which can be used to filter projects.\n###### returns\n- array of `ProjectApi` instance or `undefined`\n\n###### Example\n```\nimport {Tag} from @sap/artifact-management'  //Optional\nconst ws = new WorkspaceImpl();\nconst projects = await ws.getProjects();\n```\n\n\n### Get Project URIs\n###### Description\nGet all project Uris in the workspace.\n###### Method\n`getProjectUris(): Promise<Uri[]>`\n\n###### returns\n- array of `Uri` or `undefined`\n\n###### Example\n```\nconst ws = new WorkspaceImpl();\nconst projectUris = await ws.getProjectUris();\n```\n\n\n### Start Watch \n###### Description\nit detects File addition or deletions in workspace and triggers the updated event\n###### Method\n`startWatch() : void`\n\n###### returns\n- `void`\n\n###### Example\n```\nconst ws = new WorkspaceImpl();\nawait ws.startWatch();\n```\n\n\n### Stop Watch \n###### Description\nit stops the watch event \n###### Method\n`stopWatch() : void`\n\n###### returns\n- `void`\n\n###### Example\n```\nconst ws = new WorkspaceImpl();\nawait ws.stopWatch();\n```\n\n### onWorkspaceChanged\n###### Description\nit captures the add/remove events for the folders in the Workspace \n###### Method\n`onWorkspaceChanged(handler: (event: string, folders: WorkspaceFolder[]) => void) : void`\n\n###### Parameters\n- a `function` which takes a string `event` (\"add\" | \"remove\") and array of `WorkspaceFolder` as arguments\n\n###### returns\n- `void`\n\n###### Example\n```\nimport { WorkspaceFolder } from 'vscode';\nconst ws = new WorkspaceImpl();\nws.onWorkspaceChanged((event: string, folders: WorkspaceFolder[]) => {\n  // add implementation \n});\n```\n\n---\n\n## Access to project properties\n### Get Project Structure \n###### Description\nRead the entire project and return the information about project, its CAP modules and their items.\n###### Method\n`read(logger? : IChildLogger, tag? : Tag): Promise<Project | undefined>;`\n\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\n- tag: (Optional) `Tag` value which can be used to filter projects.\n###### returns\n- `Project` instance or `undefined`\n\n###### Example\n```\nimport {Tag} from @sap/artifact-management'   //Optional\nconst api = new ProjectImpl(projectPath);\nconst project = await api.read();\n```\n###### CLI\n\n```\ndev-project show  <my-application-folder-root absolute path> \n```\n\n###### Sample Output\n```\n{\n  \"type\": \"com.sap.cap\",\n  \"path\": \"<Absolute Path of Project>\",\n  \"prefix\": \"DemoProject\",\n  \"cloudService\": \"com.DemoProject\",\n  \"name\": \"DemoProject\",\n  \"tags\": [\n    \"project\",\n    \"cap\"\n  ],\n  \"modules\": [\n    {\n      \"type\": \"com.sap.security.XsSecurity\",\n      \"name\": \"_To_Be_Generated_\",\n      \"path\": \"\",\n      \"items\": []\n    }\n  ]\n}\n```\n\n### Get Project information\n###### Description\nReads only Project level information without reading its modules and items.\n###### Method\n`getProjectInfo(logger? : IChildLogger): Promise<ProjectData | undefined>;`\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\n###### returns\n- `ProjectData` or `undefined`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nconst project = await api.getProjectInfo();\n```\n###### CLI\n```\ndev-project get-project-info  <my-application-folder-root absolute path> \n```\n###### Sample Output\n```\n{\n  \"type\": \"com.sap.cap\",\n  \"path\": \"<Absolute Path of Project>\",\n  \"prefix\": \"DemoProject\",\n  \"cloudService\": \"com.DemoProject\",\n  \"name\": \"DemoProject\",\n  \"tags\": [\n    \"project\",\n    \"cap\"\n  ]\n}\n```\n---\n\n## Provide list of modules and items of each module\n### Get Modules information\n###### Description\nReads only module level information for all the modules in the project without reading their items.\n###### Method\n`getModules(logger? : IChildLogger): Promise<ModuleData[] | undefined>;`\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- Array of `ModuleData` or `undefined`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nconst project = await api.getModules();\n```\n###### CLI\n```\ndev-project get-modules-info  <my-application-folder-root absolute path> \n```\n###### Sample Output\n```\n[\n  {\n    \"type\": \"com.sap.security.XsSecurity\",\n    \"name\": \"_To_Be_Generated_\",\n    \"path\": \"\"\n  }\n]\n```\n\n### Read Items\n###### Description\nRead the entire project and return the information about all the items/entities in the project.\n###### Method\n`readItems(filter? : ItemFilter, logger? : IChildLogger) : Promise<Item[]>;`\n###### Parameters\n- filter: (Optional) `ItemFilter` which can be used to filter items in the project.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- An array of `Item`\n###### Example\n```\nimport {ItemFilter} from @sap/artifact-management'  //Optional\nconst api = new ProjectImpl(projectPath);\nconst project = await api.readItems();\n```\n\n###### CLI\n\nRead all items\n\n```\ndev-project list-items  <my-application-folder-root absolute path> \n```\n###### Sample Output\n\n```\n[\n    {\n      \"external\": false,\n      \"name\": \"fioriApp\",\n      \"namespace\": \"sap.ui.demoproject\",\n      \"path\": \"db/schema.cds\",\n      \"ref\": \"sap.ui.demoproject.fioriApp\",\n      \"tags\": [\n          \"item\",\n          \"cap\"\n      ],\n      \"type\": \"com.sap.cds/Entity\"\n    },\n    ...\n    ...\n    ...\n]\n```\n\n---\n\n\n## Watchers to notify of changes to project\n###### Description\nRead and watch the items/entities in the project. Any changes in the items addition, deletion or updation which match the watch criteria will be notified by the event `updated` which is listened by `ItemWatcherApi`.\n###### Method\n`watchItems(filter? : ItemFilter, logger? : IChildLogger) : Promise<ItemWatcherApi>;`\n###### Parameters\n- filter: (Optional) `ItemFilter` which can be used to filter items in the project.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `ItemWatcherApi`. This can be used to read the updated items.\n\n###### Example\n```\nimport {ItemFilter} from @sap/artifact-management'  //Optional\nconst project = new ProjectImpl(projectPath);\nconst itemWatcher = await project.watchItems();\nconst items = await itemWatcher.readItems();\nitemWatcher.on('updated', () => {\n    console.log('Items updated');\n});\n```\n\n###### CLI\n\nRead all items\n\n```\ndev-project watch-items  <my-application-folder-root absolute path> \n```\n\n---\n\n\n## Support of Filters\n###### Description\nItems can be filtered on basis of `type`, `tag` and `ref`\nThe filter can be passed in `readItems` and `watchItems` APIs as an argument which will return items based on the filter. Check `readItems` and `watchItems` APIs for further information\n\n###### Example \n```\nimport {ItemFilter} from @sap/artifact-management'\n\n// Filter by type\nconst filter: ItemFilter = {types: [\"com.sap.cds/Entity\"]};\n\n// Filter by tags\nconst filter: ItemFilter = {​​​tags: {​​​values: [\"db\", \"srv\"]}​​​}​​​;\n\n// Filter by refs\nconst filter: ItemFilter= {refs: [\"<item ref>\"]​​​}​​​;\n\n\nconst api = new ProjectImpl(projectPath);\nconst entities = await api.readItems(filter);\n```\n\n---\n\n## Capability to Test run\n###### Method\n`run(option?: string[] | undefined, logger? : IChildLogger ) : Promise<void>`\n###### Description\nIt starts the CDS server and watches for any modifications in the files, if any changes detected it automatically restarts to serve the new content \n###### Parameters\n- options: (Optional) run options. Comma separated list of options and their values. e.g. ['port', '8008', 'open']. Currently only supports port number and open option.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Promise<void>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nawait api.run();\n```\n###### CLI\n```\ndev-project run  <my-application-folder-root absolute path> port 9039 open\n```\n\n---\n\n## Capability to generate MTA yaml and MTAR\n###### Method\n`build(options? : MtaGeneratorSettings, logger? : IChildLogger) : Promise<void>;`\n###### Description\nGenerate manifest for the project and all the modules and create a `mta.yaml` and `<app-name>.mtar` file.\n###### Parameters\n- options: (Optional) `MtaGeneratorSettings` build options.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Promise<void>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nawait api.build();\n```\n###### CLI\n```\ndev-project build  <my-application-folder-root absolute path> \n```\n###### Sample Output\n```\n_schema-version: '3.1'\nID: DemoProject\nversion: 1.0.0\ndescription: A simple CAP project.\nparameters:\n  enable-parallel-deployments: true\nbuild-parameters:\n  before-all:\n    - builder: custom\n      commands:\n        - bash -c \"cds compile srv --to xsuaa > xs-security.json\"\n    - builder: custom\n      commands:\n        - npm install --production\n        - >-\n          bash -c \"cds -v 2>/dev/null >/dev/null || npm install --no-save\n          @sap/cds-dk\"\n        - npx cds build --production\nmodules:\n  - name: DemoProject-db-deployer\n    type: hdb\n    path: gen/db\n    parameters:\n      buildpack: nodejs_buildpack\n    build-parameters:\n      builder: npm\n      ignore:\n        - node_modules\n    requires:\n      - name: DemoProject-service-uaa\n      - name: DemoProject-service-db\n    ...\n    ...\n    ...\n\nresources:\n  - type: org.cloudfoundry.managed-service\n    name: DemoProject-service-uaa\n    parameters:\n      service: xsuaa\n      service-plan: application\n      service-name: DemoProject-uaa\n      path: xs-security.json\n    ...\n    ...\n    ...\n\n```\n\n---\n\n## Capability to generate MTA yaml and MTAD yaml\n###### Method\n`buildV2(options? : MtaGeneratorSettings, logger? : IChildLogger) : Promise<void>;`\n###### Description\nGenerate manifest for the project and the modules specified in .status_tracker file and create a `mta.yaml` and `mtad.yaml` file.\n###### Parameters\n- options: (Optional) `MtaGeneratorSettings` build options.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Promise<void>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nawait api.buildV2();\n```\n###### CLI\n```\ndev-project buildV2  <my-application-folder-root absolute path> \n```\n###### Sample Output\n```\n_schema-version: '3.1'\nID: DemoProject\nversion: 1.0.0\ndescription: A simple CAP project.\nparameters:\n  enable-parallel-deployments: true\nbuild-parameters:\n  before-all:\n    - builder: custom\n      commands:\n        - bash -c \"cds compile srv --to xsuaa > xs-security.json\"\n    - builder: custom\n      commands:\n        - npm install --production\n        - >-\n          bash -c \"cds -v 2>/dev/null >/dev/null || npm install --no-save\n          @sap/cds-dk\"\n        - npx cds build --production\nmodules:\n  - name: DemoProject-db-deployer\n    type: hdb\n    path: gen/db\n    parameters:\n      buildpack: nodejs_buildpack\n    build-parameters:\n      builder: npm\n      ignore:\n        - node_modules\n    requires:\n      - name: DemoProject-service-uaa\n      - name: DemoProject-service-db\n    ...\n    ...\n    ...\n\nresources:\n  - type: org.cloudfoundry.managed-service\n    name: DemoProject-service-uaa\n    parameters:\n      service: xsuaa\n      service-plan: application\n      service-name: DemoProject-uaa\n      path: xs-security.json\n    ...\n    ...\n    ...\n\n```\n\n#### Get MTA Manifest content\n###### Method\n`getManifest(logger? : IChildLogger) : Promise<any>;`\n###### Description\nGet the content of the `mta.yaml` file.\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\n###### returns\n- `Promise<any>`\n###### CLI\n```\n./src/project-api/bin/dev-project show-manifest ../risk-management-example\n```\n###### Sample Output\n```\n_schema-version: '3.1'\nID: cpapp\nversion: 1.0.0\ndescription: \"A simple CAP project.\"\nparameters:\n  enable-parallel-deployments: true\n\nbuild-parameters:\n  before-all:\n   - builder: custom\n     commands:\n      - npm install --production\n      ...\n      ...\n\nmodules:\n - name: cpapp-app\n   type: html5\n   path: app\n   build-parameters:\n     builder: custom\n     commands:\n      - bash build.sh\n     supported-platforms: []\n     build-result: dist\n  ...\n  ...\n\n```\n---\n\n## Deployment of MTAR to Cloud Foundry\n###### Method\n`deploy(logger? : IChildLogger) : Promise<void>;`\n###### Description\nDeploy the generated `<app-name>.mtar` file to currently targeted CF space.\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Promise<void>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nawait api.deploy();\n```\n###### CLI\nBuild and deploy in one step\n```\ndev-project deploy  <my-application-folder-root absolute path> \n```\n\n---\n\n## Deployment of MTAR to Cloud Foundry\n###### Method\n`deployV2(logger? : IChildLogger) : Promise<void>;`\n###### Description\nGenerate the `<app-name>.mtar` file based on contents of .status_tracker file and deploy to currently targeted CF space.\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Promise<void>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nawait api.deployV2();\n```\n###### CLI\nBuild and deploy in one step\n```\ndev-project deployV2  <my-application-folder-root absolute path> \n```\n\n---\n\n## Get Project Overview URL\n###### Method\n`getProjectOverviewURL(logger? : IChildLogger) : Promise<string | undefined>;`\n###### Description\nGet the Project Overview URL of application deployed to currently targeted CF space.\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\n###### returns\n- `Promise<string | undefined>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nconst projectOverviewURL = await api.getProjectOverviewURL();\n```\n###### CLI\n```\ndev-project get-projectoverview-url <my-application-folder-root absolute path>\n```\n###### Sample Output\n```\n{\n  applicationOverviewURL : <projectOverviewURL>\n}\n```\n---\n\n## Get Application Deployment Summary\n###### Method\n`getApplicationDeploymentSummary(logger? : IChildLogger) : Promise<{ ProjectOverviewURL?: string; DeployedUTCTime?: String; } | undefined>;`\n###### Description\nGet the Application Deployment Summary of application deployed to currently targeted CF space which contains ProjectOverviewURL and DeployedUTCTime.\n###### Parameters\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\n###### returns\n- `Promise<{ ProjectOverviewURL?: string; DeployedUTCTime?: String; } | undefined>`\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nconst applicationSummary = await api.getApplicationDeploymentSummary();\n```\n###### CLI\n```\ndev-project get-application-deployment-summary <my-application-folder-root absolute path>\n```\n###### Sample Output\n```\n{\n  applicationOverviewURL : <projectOverviewURL>,\n  DeployedUTCTime : <deployedUTCTime>\n}\n```\n---\n\n## Get Detail Information of Entities\n#### Get Detail information\n###### Method\n`getDetailInfo(type: ItemType, ref: string, entityPath?: string, logger? : IChildLogger) :Promise<Item | undefined>;`\n###### Description\nGet additional detail information about a particular item.\n###### Parameters\n- type: `ItemType` type of the Item.\n- ref: Unique reference of the Item.\n- entityPath: (Optional) Path of the item.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Item` or `undefined`\n\n###### Example\n```\nimport {ItemType} from \"src/project-glue/ItemType.ts\"  //Optional\nconst api = new ProjectImpl(projectPath);\nconst entities = await api.getDetailInfo(type, ref, entityPath)\n```\n###### CLI\n```\ndev-project get-detail-info  <my-application-folder-root absolute path> <type> <ref>\n```\n###### Sample Output\n```\n{\n  \"type\": \"com.sap.cds/Entity\",\n  \"name\": \"fioriApp\",\n  \"ref\": \"sap.ui.demoproject.fioriApp\",\n  \"path\": \"schema.cds\",\n  \"info\": {\n    \"ID\": {\n      \"@Core.Computed\": true,\n      \"key\": true,\n      \"type\": \"cds.UUID\"\n    },\n    \"title\": {\n      \"type\": \"cds.String\",\n      \"length\": 100\n    },\n    \"owner\": {\n      \"type\": \"cds.String\"\n    },\n    \"descr\": {\n      \"type\": \"cds.String\"\n    },\n    \"miti\": {\n      \"type\": \"cds.Association\",\n      \"target\": \"sap.ui.demo.ui5App\"\n    },\n    \"impact\": {\n      \"type\": \"cds.Integer\"\n    },\n    \"criticality\": {\n      \"type\": \"cds.Integer\"\n    }\n  }\n}\n```\n\n---\n\n## Get Information from Data File\n###### Method\n`getInfoFromDataFile(filePath: string, logger? : IChildLogger) :Promise<any>;`\n###### Description\nRead and parse Excel data file (CSV or XML format).\n###### Parameters\n- filePath: Path of the data file.\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\n###### returns\n- `Promise<any>`\n\n###### Example\n```\nconst api = new ProjectImpl(projectPath);\nconst data = await api.getInfoFromDataFile(filePath)\n```\n###### CLI\n```\ndev-project get-data-info  <data file absolute path>\n```\n###### Sample Output\n```\n[\n  {\n    \"entity\": \"entity\",\n    \"values\": [\n      [\n        \"9a8a4cad-19c1-46b2-a599-4b735e82374f\",\n        \"1\",\n        \"1000000\",\n        \"Technology\"\n      ],\n      [\n        \"c84a8e54-ce5a-423b-923e-dab637d298c1\",\n        \"2\",\n        \"1500000\",\n        \"Products\"\n      ],\n      [\n        \"939be63d-7175-4b53-b593-aa0dde74a04e\",\n        \"3\",\n        \"2000000\",\n        \"Technology\"\n      ]\n    ],\n    \"labels\": [\n      {\n        \"label\": \"ID\",\n        \"value\": \"ID\"\n      },\n      {\n        \"label\": \"Capex Request\",\n        \"value\": \"capex_request\"\n      },\n      {\n        \"label\": \"Total Cost\",\n        \"value\": \"total_cost\"\n      },\n      {\n        \"label\": \"Department\",\n        \"value\": \"department\"\n      }\n    ],\n    \"props\": [\n      {\n        \"name\": \"ID\",\n        \"kind\": \"dataType\",\n        \"type\": \"UUID\"\n      },\n      {\n        \"name\": \"capex_request\",\n        \"kind\": \"dataType\",\n        \"type\": \"String\"\n      },\n      {\n        \"name\": \"total_cost\",\n        \"kind\": \"dataType\",\n        \"type\": \"String\"\n      },\n      {\n        \"name\": \"department\",\n        \"kind\": \"dataType\",\n        \"type\": \"String\"\n      }\n    ],\n    \"dbProps\": [\n      \"ID\",\n      \"capex_request\",\n      \"total_cost\",\n      \"department\"\n    ]\n  }\n]\n```\n---",
      "changelog": "## 1.12.0 - 27 May, 2022\n### Added\n* Added new CLI api `get-data-info` to support parsing data file (csv, xml)\n### Changed\n* Refactor mta.yaml to support CI/CD service\n## 1.11.0 - 26 April, 2022\n### Added\n* Enable application logs service.\n## 1.10.0 - 7 April, 2022\n### Changed\n* Changed logic to identify PDM entities and service.\n### Fixed\n* Fixed Delta Deployment failure on first deploy issue.\n* Fixed the error thrown in getProjectInfo API when result is undefined.\n## 1.9.0 - 24 March, 2022\n### Added\n* Added support to create destination to workflow instance on deploy.\n## 1.8.1 - 17 March, 2022\n### Fixed\n* Duplicate MDK UI apps fixed.\n## 1.8.0 - 10 March, 2022\n### Added\n* Added support for Delta-build.\n* Added support for Delta-deploy.\n### Fixed\n* Fixed Deploy failure issue when MDK Task UI app uses Document FormCell control.\n* Fixed issue where wrong MDK display name was returned to homepage.\n* Fixed issue where incorrect description of role is added to mta.yaml.\n* Fixed Deploy failure issue if Role Collection already exists in this subaccount.\n\n## 1.7.0 - 24 February, 2022\n### Added\n* Added support for Personal Data Manager.\n### Fixed\n* Fixed Deploy failure issue due to missing xsappname from xs-security.json.\n* Fixed issue with generating new role on Cloud Foundry if the project is already deployed.\n\n## 1.6.0 - 10 February, 2022\n### Added\n* Added immutability/read-only view to Project-API result object data structures.\n### Changed\n* Removed in-memory cache for project summary.\n### Fixed\n* Fixed roles issue when xs-security.json is absent.\n\n## 1.5.0 - 28 January, 2022\n### Added\n* Support capability to return the user roles for LCAP application.\n### Changed\n* Enhanced taskUi item name to use name of the app instead of `TaskUI`.\n### Fixed\n* Fixed issue related to persistence of links even when dependency was deleted.\n* Fixed issue where click on the application tile in preview page was unresponsive.\n\n## 1.4.0 - 07 January, 2022\n### Added\n* Added new API getApplicationDeploymentSummary() which provides information about project overview url and the time of last successful deployment time in UTC format.\n### Fixed\n* Fixed UI issues on preview and application overview pages.\n* Fixed the issue where sample data for external service was not read immediately after creation.\n\n## 1.3.0 - 22 December, 2021\n### Added\n* Support dependency relationship between entity and sample data.\n* Support version deployment as per the version in project.\n* Support sample data for external services.\n* Added support for reading full name of external entity.\n* Set default runtime allocation for LCAP apps.\n### Changed\n* Updated open source libraries to newer versions. \n* Handling references from artifact-management and it's corresponding types.\n* Enhanced `getProjectOverviewURL` cache.\n### Fixed\n* Improved performance w.r.t. watch functionality.\n* Fixed launching of Fiori app while link opened without launchpad.\n* Fixed issue w.r.t. project in subfolder structure.\n\n## 1.2.0 - 24 November, 2021\n### Added\n* Added workflow section containing workflow apps such as My Inbox, Workflow Definitions and Workflow Instances in `Application overview page`.\n* Added cache implementation for `getProjectOverviewURL` api.\n* Enhanced info message codes to indicate the source module in case of exceptions.\n* Added item links between workflow and taskUi app, workflow and service entity, and two db entities.\n### Changed\n* Force update mdk module during deployment.\n* Enhanced the mechanism to identify the workflow folder.\n### Fixed\n* Fixed issue related to concurrent access to `readItems` api.\n\n\n## 1.1.2 - 16 November, 2021\n### Fixed\n* Fixed deploy issue with respect to launchpad.\n\n## 1.1.1 - 15 November, 2021\n### Changed\n* Changed the title of landing page after deployment from `Project Preview` to `Application Overview`.\n\n### Fixed\n* Fixed Fiori application deployement issue by adding @ui5/cli dependency for HTML5 module in mta.yaml.\n* Handled scenarios where CDS returns empty folders map.\n* Fixed import issues in artifact-management-types by adding correct references to artifact-management-base-types.\n\n## 1.1.0 - 25 October, 2021\n### Added\n* Added new api `getManifest` and corresponding CLI command `show-manifest` to get contents of mta.yaml.\n* Added new api `getProjectOverviewURL` and corresponding CLI command `get-projectoverview-url` to get the url of project overview page on CF.\n\n* Created separate package `@sap/artifact-management-types` for declaration files.\n* Created separate package `@sap/artifact-management-base` which contains helper classes and methods that are used by `@sap/artifact-management` and plugins.\n\n* Added `workflowTaskEnabled` tag to service entity which corresponds to the data model annotated as workflow task enabled.\n* Added `db` and `srv` tags to identify db and srv modules distinctly.\n\n* Added support of port option in run api.\n* Added support of identifying and reading projects when present in subfolders of given path.\n* Added support of info messages in project data which describe reasons for missing data or errors.\n* Added resource for connectivity in mta.yaml to support external services.\n\n### Changed\n* Enhanced mta.yaml creation to add workflow service only when workflow module is present in project.\n* Enhanced `run` and `deploy` api to generate project overview page which showcases web applications and services in a new UI.\n* Remove enum types from project.\n* Made tags non-optional.\n\n### Fixed\n* Removed log comments from CLI output\n* Fixed failure of logging to console even when debug option was provided in CLI command.\n* Fixed failure of `build` api when called for more than one project.\n\n\n----\n\n## 1.0.1 - 20 August, 2021\n### Added\n* Added support to package the library with webpack.\n\n### Changed\n* Removed workflow application from html5 app container of local run and Cloud Foundry deploy.\n\n### Fixed\n* Fixed failure of watch items when content of any file is invalid.\n\n----\n## 1.0.0 - 03 August, 2021\n* Initial release.\n",
      "downloadsCurrentMonth": 724,
      "downloadsCurrentFortnight": 284,
      "downloads365": 5469,
      "downloadsFortnightGrowth": -35.45,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 0 },
        { "yearMonth": "2021-08", "downloads": 129 },
        { "yearMonth": "2021-09", "downloads": 721 },
        { "yearMonth": "2021-10", "downloads": 1058 },
        { "yearMonth": "2021-11", "downloads": 915 },
        { "yearMonth": "2021-12", "downloads": 246 },
        { "yearMonth": "2022-01", "downloads": 411 },
        { "yearMonth": "2022-02", "downloads": 448 },
        { "yearMonth": "2022-03", "downloads": 368 },
        { "yearMonth": "2022-04", "downloads": 364 },
        { "yearMonth": "2022-05", "downloads": 625 }
      ],
      "versions": [
        { "version": "created", "date": "2021-08-03T09:36:48.630Z" },
        { "version": "1.0.0", "date": "2021-08-03T09:36:48.916Z" },
        { "version": "modified", "date": "2022-06-06T02:32:15.520Z" },
        { "version": "1.0.1", "date": "2021-08-20T07:58:50.500Z" },
        { "version": "1.1.0", "date": "2021-10-26T03:57:54.821Z" },
        { "version": "1.1.1", "date": "2021-11-15T15:16:53.049Z" },
        { "version": "1.1.2", "date": "2021-11-16T08:00:14.596Z" },
        { "version": "1.1.3", "date": "2021-11-24T11:12:03.700Z" },
        { "version": "1.2.0", "date": "2021-11-24T11:43:00.796Z" },
        { "version": "1.3.0", "date": "2021-12-22T15:08:21.452Z" },
        { "version": "1.4.0", "date": "2022-01-13T16:27:46.725Z" },
        { "version": "1.5.0", "date": "2022-02-01T05:22:07.946Z" },
        { "version": "1.6.0", "date": "2022-02-11T04:21:34.650Z" },
        { "version": "1.6.1", "date": "2022-02-17T13:28:19.047Z" },
        { "version": "1.7.0", "date": "2022-02-25T05:50:42.340Z" },
        { "version": "1.8.0", "date": "2022-03-14T05:14:31.392Z" },
        { "version": "1.8.1", "date": "2022-03-18T01:15:26.380Z" },
        { "version": "1.9.0", "date": "2022-03-25T04:08:22.175Z" },
        { "version": "1.10.0", "date": "2022-04-08T06:15:23.532Z" },
        { "version": "1.11.0", "date": "2022-05-10T10:04:40.712Z" },
        { "version": "1.11.1", "date": "2022-05-17T12:10:11.629Z" },
        { "version": "1.12.0", "date": "2022-06-06T02:32:15.437Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/artifact-management"
    },
    {
      "name": "asp-middleware",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-09-10T18:09:11.494Z",
      "updatedAt": "2022-05-20T08:46:10.560Z",
      "readme": "@sap/asp-middleware\n==============\n\n<!-- toc -->\n\n- [@sap/asp-middleware](#sapasp-middleware)\n\t- [Overview](#overview)\n\t- [Usage](#usage)\n\t\t- [Approuter Middleware](#approuter-middleware)\n\t\t- [ABAP Solution Runtime Client](#abap-solution-runtime-client)\n\t\t\t- [Get Tenant](#get-tenant)\n\t\t- [Configuration](#configuration)\n\t\t\t- [Custom User Onboarding Path](#custom-user-onboarding-path)\n\t- [Supported Approuter versions](#supported-approuter-versions)\n\t- [Getting Support](#getting-support)\n\n<!-- tocstop -->\n\n## Overview\nThe `asp-middleware` is an extension for the [@sap/approuter](https://www.npmjs.com/package/@sap/approuter) that enables usage of the *ABAP Solution* Service offered for the *SAP Cloud Platform, ABAP Environment*.\n\n**It takes care of the following:**\n- User onboarding for the initial administrator of a new tenant\n- Routing to the right tenant url once a user onboarding is completed successfully\n\n## Usage\n\n### Approuter Middleware\n\nThis module must be loaded as an extension into the [@sap/approuter](https://www.npmjs.com/package/@sap/approuter).\n\n\nThe simplest way to achieve this is:\n```javascript\nconst approuter = require('@sap/approuter');\nconst ar = approuter();\n\nar.start({\n  extensions: [ require('@sap/asp-middleware') ]\n});\n```\n\n### ABAP Solution Runtime Client\n\nThe AspRuntimeClient allows you to communicate with the ABAP Solution Service to get information about your tenants.\n\n```javascript\nconst AspRuntimeClient = require('@sap/asp-middleware/asp-runtime-client');\n\nconst client = AspRuntimeClient.getInstance();\nconst tenant = client.getTenant({\n  consumerZoneId: '<consumer-zone-id>'\n})\n```\n\n#### Get Tenant\n\nThe parameter *consumerZoneId* is passed to you during the getDependency call (as *tenantId* URL parameter) and the onSubscription call (as *subscribedTenantId* in the body), that is by default handled by the approuter component, but can also be implemented manually.\n\nThe getTenant call results in a Promise of a Tenant object, which has the following fields:\n\n| Name | Description |\n|---|---|\n| tenantHost | The host of the ABAP tenant corresponding to this consumer |\n| consumerZoneId | The zone ID of the consumer (as passed into the getTenant call) |\n| abapServiceInstanceId | The service instance ID of the ABAP service instance the tenant is located on | \n| abapTenantId | The id of the ABAP tenant itself |\n\n### Configuration\n\nA service instance of service `abap-solution` in plan `standard` must be bound to the approuter application.\n\nAs a last step the `xs-app.json` must be configured to route to the `abap-solution` service. As a minimum this results in the following `xs-app.json` file:\n```json\n{\n\t\"authenticationMethod\": \"route\",\n\t\"welcomeFile\": \"/ui\",\n\t\"logout\": {\n\t\t\"logoutEndpoint\": \"/public/logout\",\n\t\t\"logoutPage\": \"/ui\"\n\t},\n\t\"routes\": [\n\t\t{\n\t\t\t\"source\": \"^/sap/(.*)$\",\n\t\t\t\"target\": \"/sap/$1\",\n\t\t\t\"authenticationType\": \"xsuaa\",\n\t\t\t\"service\": \"com.sap.cloud.abap.solution\",\n\t\t\t\"csrfProtection\": false\n\t\t},\n\t\t{\n\t\t\t\"source\": \"^/ui(.*)$\",\n\t\t\t\"target\": \"/ui$1\",\n\t\t\t\"authenticationType\": \"xsuaa\",\n\t\t\t\"service\": \"com.sap.cloud.abap.solution\",\n\t\t\t\"csrfProtection\": false\n\t\t}\n\t]\n}\n```\n\n#### Custom User Onboarding Path\n\nBy configuring an environment variable called ASP_USER_ONBOARDING_PATHS, the application can decide, which paths should be intercepted for the onboarding of the initial user in the ABAP tenant. By default this is only /ui as this is the path to the ABAP Fiori Launchpad.\n\nThe variable should be configured as a JSON array. E.g. \n\n```json\n[\"/path/to/entry_point_1\",\"/path/to/entry_point_2\"]\n```\n\n## Supported Approuter versions\n\nSupported [@sap/approuter](https://www.npmjs.com/package/@sap/approuter) versions are (meaning every minor version of version 8): `^8.0.0`\n\nIt can be installed using: `npm i @sap/approuter@^8`\n\n## Getting Support\nCreate a BCP Ticket on `BC-CP-ABA-INT`\n",
      "downloadsCurrentMonth": 392,
      "downloadsCurrentFortnight": 139,
      "downloads365": 2572,
      "downloadsFortnightGrowth": -45.06,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 166 },
        { "yearMonth": "2021-08", "downloads": 106 },
        { "yearMonth": "2021-09", "downloads": 162 },
        { "yearMonth": "2021-10", "downloads": 115 },
        { "yearMonth": "2021-11", "downloads": 239 },
        { "yearMonth": "2021-12", "downloads": 238 },
        { "yearMonth": "2022-01", "downloads": 288 },
        { "yearMonth": "2022-02", "downloads": 209 },
        { "yearMonth": "2022-03", "downloads": 270 },
        { "yearMonth": "2022-04", "downloads": 232 },
        { "yearMonth": "2022-05", "downloads": 413 }
      ],
      "versions": [
        { "version": "created", "date": "2020-09-10T18:09:11.494Z" },
        { "version": "1.0.1", "date": "2020-09-10T18:09:11.940Z" },
        { "version": "modified", "date": "2022-05-20T08:46:10.560Z" },
        { "version": "1.0.2", "date": "2020-11-27T14:23:57.883Z" },
        { "version": "1.0.3", "date": "2020-12-18T06:52:36.283Z" },
        { "version": "1.0.4", "date": "2021-01-05T17:22:52.124Z" },
        { "version": "1.0.6", "date": "2021-04-19T12:54:00.053Z" },
        { "version": "1.0.7", "date": "2021-11-08T10:57:07.536Z" },
        { "version": "1.0.8", "date": "2021-12-14T14:07:43.231Z" },
        { "version": "1.0.9", "date": "2022-05-20T08:46:10.464Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/asp-middleware"
    },
    {
      "name": "audit-logging",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T18:52:21.479Z",
      "updatedAt": "2022-04-08T10:10:44.457Z",
      "readme": "# @sap/audit-logging\n\nProvides audit logging functionalities for Node.js applications.\n\n<!-- toc -->\n\n- [Overview](#overview)\n  * [General audit logging principles](#general-audit-logging-principles)\n  * [Prerequisites](#prerequisites)\n  * [Versions](#versions)\n  * [Express Middleware](#express-middleware)\n    - [Simple Usage](#simple-usage)\n    - [Making Use of the SecurityContext and User Token Exchange Flow](#making-use-of-the-securitycontext-and-user-token-exchange-flow)\n    - [Plugging Middleware Only When Needed](#plugging-middleware-only-when-needed)\n  * [mTLS Support](#mtls-support)\n- [API - v1](#api---v1)\n  * [Importing the library](#importing-the-library)\n  * [Data access messages](#data-access-messages)\n  * [Data modification messages](#data-modification-messages)\n  * [Update data modification](#update-data-modification)\n  * [Configuration change messages](#configuration-change-messages)\n  * [Update configuration change](#update-configuration-change)\n  * [General security messages](#general-security-messages)\n  * [Logging a message](#logging-a-message)\n- [API - v2](#api---v2)\n  * [Importing the library](#importing-the-library-1)\n  * [Data access messages](#data-access-messages-1)\n  * [Data modification messages](#data-modification-messages-1)\n  * [Configuration change messages](#configuration-change-messages-1)\n  * [General security messages](#general-security-messages-1)\n- [OAuth2 User Token Exchange](#oauth2-user-token-exchange)\n- [Local development](#local-development)\n  * [Without Audit log service](#without-audit-log-service)\n  * [With Audit log service](#with-audit-log-service)\n\n<!-- tocstop -->\n\n## Overview\n\nAudit logging is about writing entries in a specific format to a log storage. Subject to audit logging are events of significant importance.\nFor example, security events which may impact the confidentiality, the integrity or the availability of a system.\nAnother example of such an event would be access to personal data (both reading and altering) like bank accounts, political opinion,\nhealth status etc.\n\nWhile the consumer of ordinary logs is a system administrator who would like to keep track of the state of a system,\naudit logs are read by an auditor. There are legal requirements (in some countries stricter than in others) regarding audit logging.\n\nIn general the events that are supposed to be audit logged can be grouped in 3 main categories:\n- changes to system configurations (which may have significant effect on the system itself)\n- access to personal data (related to data privacy)\n- general security events (like starting/stopping a system, failed authorization checks etc.)\n\n\n### General audit logging principles\n\n- All attempts to perform an action in a system should be audit logged no matter if they have been successful or not.\n- Audit log entries should be consistent with the state of the system. If, for example, the writing of the audit log entry fails,\nbut the changes to system critical parameters have been applied, then those changes should be reverted. Best practice is to wait for\nthe callback of the logger before continuing with the execution of other code.\n- Especially important is which user (or other agent) has triggered the corresponding event that is being audit logged.\nFor most of the cases the library will validate that such a field is provided in the message.\n- All audit log entries should be in English. Numbers should be converted to strings with English locale.\nAll time fields should be in UTC time in order to avoid timezone and day light saving time issues.\n- Passwords should never be audit logged.\n\n### Prerequisites\n\nAn application using the audit log library needs to be bound to an instance of the Audit log service.\n\n### Versions\n\nThe Audit log service provides REST APIs that are available to applications for\nlogging relevant messages. The latest Audit log server supports 2 versions\nof the REST APIs. This library provides JavaScript programming interfaces for\nboth of these versions of the server's APIs.\n**Note:** It is recommended to use REST APIs v2 if available on the Audit log server being in use (and respectively the JavaScript v2 APIs).\nThe initial version of the Audit log server REST APIs is deprecated in favor of the v2 version. The same applies to the JavaScript APIs provided by this library.\n\n### Express Middleware\n\nThe Audit Log client provides an easier way to use the auditlog client in an express application. Below you can find a few examples on how to make use of the express middleware. The middleware works with both **v1** and **v2** of the Auditlog Service.\n\n#### Simple Usage\n\n```js\nconst express = require(\"express\");\nconst app = express();\n\nconst auditMiddleware = require('./node-audit-logging/middleware');\n\n// Config for auditLoggingService.\nconst auditLogConfig = {...}; // Retrieved from the environment using @sap/xsenv.\n// app.use(auditMiddleware(auditLogConfig, 1)); // Here we select using v1.\napp.use(auditMiddleware(auditLogConfig, 2));\n\napp.get('/', async function (req, res) {\n  let auditLog = req.auditLog;\n  // ...\n});\n```\n\n#### Making Use of the SecurityContext and User Token Exchange Flow\n\nIn order to make use also of the *SecurityContext* that comes from the *@sap/xssec* library, you need to make sure you import the *@sap/xssec* middleware before the auditlogging. **This only works with the OAuth2 plan.**\n\n```js\nconst express = require('express');\n// Includes required for xssec.\nconst passport = require('passport');\nconst { JWTStrategy } = require('xssec');\n// Includes required for auditLogging.\nconst auditLogMiddleware = require('@sap/audit-logging/middleware');\n\nconst app = express();\n\n// Config for xssec middelware.\nconst xsuaaConfig = {...}; // Retrieved from the environment using @sap/xsenv.\npassport.use(new JWTStrategy(xsuaaConfig));\napp.use(passport.initialize());\napp.use(passport.authenticate('JWT', { session: false, failWithError: true }));\n\n// Config for auditLoggingService.\nconst auditLogConfig = {...}; // Retrieved from the environment using @sap/xsenv.\napp.use(auditLogMiddleware(auditLogConfig));\n\napp.get('/', async function (req, res) {\n  let auditLog = req.auditLog;\n  // ...\n});\n```\n\n#### Plugging Middleware Only When Needed\n\nIf you have the case where you do not want to include the auditLog to a request, you can plug the middleware only on the routes it is required:\n\n```js\nconst express = require('express');\n// Includes required for xssec.\nconst passport = require('passport');\nconst { JWTStrategy } = require('xssec');\n// Includes required for auditLogging.\nconst auditLogMiddleware = require('@sap/audit-logging/middleware');\n\nconst app = express();\n\n// Config for xssec middelware.\nconst xsuaaConfig = {...}; // Retrieved from the environment using @sap/xsenv.\npassport.use(new JWTStrategy(xsuaaConfig));\napp.use(passport.initialize());\napp.use(passport.authenticate('JWT', { session: false, failWithError: true }));\n\n// Config for auditLoggingService.\nconst auditLogConfig = {...}; // Retrieved from the environment using @sap/xsenv.\n\n// In this API we need auditlog, so we add the auditLogMiddleware\napp.get('/withAuditLog', auditLogMiddleware(auditLogConfig), function(req, res) {\n    let auditLog = req.auditLog; // This will be undefined.\n    // ...\n});\n\n// Here we do not need the auditLog, so we do not add the auditLogMiddleware.\napp.get('/withoutAuditLog', function(req, res) {\n    let auditLog = req.auditLog; // This will be undefined.\n    // ...\n});\n```\n\n### mTLS Support\n\nThe library also supports certificate based authentication. In order to use this type of authentication, you need to create x509 credentials and pass them to the auditlog library the same way you would pass all other credential types. If you are retrieving credentials via *@sap/xsenv* you might need to create **binding** and not **service key**.\n\nFor further information how to create the appropriate credential type, visit [Audit Log Retrieval API Usage for the Cloud Foundry Environment](https://help.sap.com/products/BTP/65de2977205c403bbc107264b8eccf4b/30ece35bac024ca69de8b16bff79c413.html).\n\n## API - v1\n\nThe library provides an API for writing audit messages of type configuration changes, data modifications, data accesses and security events.\n\n### Importing the library\n\n`credentials` object is the bound audit log service's credentials.\nTake a look at *@sap/xsenv* package for more information on how to retrieve service credentials.\n\n#### Standard Plan (deprecated)\n\n```js\nvar credentials = {\n  \"user\": \"user\",\n  \"password\": \"password\",\n  \"url\": \"https://host:port\"\n};\nvar auditLog = require('@sap/audit-logging')(credentials);\n```\n\n#### OAuth2 Plan\n\n```js\nvar credentials = {\n  \"uaa\": {\n    \"clientid\": \"clientid\",\n    \"clientsecret\": \"clientsecret\",\n    \"url\": \"https://host:port\"\n  }\n  \"url\": \"https://host:port\"\n};\nvar auditLog = require('@sap/audit-logging')(credentials, securityContext);\n```\n\n* `credentials` - Retrieved from the environment.\n* `securityContext` - *Optional* - created manually or through usage of the req.AuthInfo from **@sap/xssec**.\n\n### Data access messages\n\nLet's suppose we need to create an entry for a data access operation over personal data. We can achieve that with the following code:\n\n#### Standard Plan (deprecated)\n\n```js\nauditLog.read('user123')\n  .attribute('username', true)\n  .attribute('first name', true)\n  .attribute('last name', true)\n  .accessChannel('UI')\n  .tenant('tenantId')\n  .by('John Doe')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `read` - takes a string which identifies the object which is being *accessed*.\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being accessed.\n  * `successful` - specifies whether the access was successful or not.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `accessChannel` - takes a string which specifies *channel* of access.\n* `attachment(id, name)` - if attachments or files are downloaded or displayed, information identifying the attachment shall be logged.\n  * `id` - attachment id\n  * `name` - attachment name\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n#### OAuth2 Plan\n\n```js\nauditLog.read('user123')\n  .attribute('username', true)\n  .attribute('first name', true)\n  .attribute('last name', true)\n  .accessChannel('UI')\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `read` - takes a string which identifies the object which is being *accessed*.\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being accessed.\n  * `successful` - specifies whether the access was successful or not.\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `accessChannel` - takes a string which specifies *channel* of access.\n* `attachment(id, name)` - if attachments or files are downloaded or displayed, information identifying the attachment shall be logged.\n  * `id` - attachment id\n  * `name` - attachment name\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n### Data modification messages\n\nHere is how to create an entry for a data modification operation:\n\n#### Standard Plan (deprecated)\n\n```js\nauditLog.update('user123')\n  .attribute('first name', 'john', 'John')\n  .tenant('tenantId')\n  .by('John Doe')\n  .log(...);\n```\n\n**Note**: Specifying an old and a new value for an attribute is only supported in newer versions of the Audit log service. Providing these values while working with an older version of the service results in an error in the callback. In such cases one may use the `attribute` method with an alternative signature:\n\n```js\nauditLog.update('user123')\n  .attribute('password', false)\n  .tenant('tenantId')\n  .by('John Doe')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `update` - takes a string which identifies the object which is being *updated*.\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being modified.\n  * `oldValue` - is the current value of the attribute.\n  * `newValue` - is the value of the attribute after the change.\n\n  **Note**: One may use this signature of the `attribute` method only if the Audit log service being consumed supports old and new values.\n\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being modified.\n  * `successful` - specifies whether the modification was successful or not.\n\n  **Note**: this signature of the method is **deprecated**. It should be used only if the consumed Audit log service does not support old and new values.\n\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n#### OAuth2 Plan\n\n```js\nauditLog.update('user123')\n  .attribute('first name', 'john', 'John')\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .log(...);\n```\n\n**Note**: Specifying an old and a new value for an attribute is only supported in newer versions of the Audit log service. Providing these values while working with an older version of the service results in an error in the callback. In such cases one may use the `attribute` method with an alternative signature:\n\n```js\nauditLog.update('user123')\n  .attribute('password', false)\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `update` - takes a string which identifies the object which is being *updated*.\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being modified.\n  * `oldValue` - is the current value of the attribute.\n  * `newValue` - is the value of the attribute after the change.\n\n  **Note**: One may use this signature of the `attribute` method only if the Audit log service being consumed supports old and new values.\n\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being modified.\n  * `successful` - specifies whether the modification was successful or not.\n\n  **Note**: this signature of the method is **deprecated**. It should be used only if the consumed Audit log service does not support old and new values.\n\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n### Update data modification\n\n```js\nauditLog.updateDataModification(id, isSuccessful)\n  .log(...);\n```\n\n* `updateDataModification(id, isSuccessful)` - takes two arguments.\n  * `id` - id of the data modification message saved earlier (see [log](#logging-a-message))\n  * `isSuccessful` - denotes whether the data modification was successful or not.\n* `log` - See [here](#logging-a-message)\n\n**Note**: This function should only be used with an Audit log service that supports old and new values.\n\n### Configuration change messages\n\nHere is how to create an entry for a configuration change operation:\n\n#### Standard Plan (deprecated)\n\n```js\nauditLog.configurationChange('configuration object')\n  .attribute('session timeout', '5', '25')\n  .tenant('tenantId')\n  .by('Application Admin')\n  .successful(true)\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `configurationChange` - takes a string which identifies the object which is being *configured*.\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being accessed.\n  * `oldValue` - is the current value of the attribute being changed.\n  * `newValue` - is the value of the attribute after the change.\n* `successful(isSuccessful)` - used to mark whether the configuration change is finished with success, failure.\n  If not called configuration change will be marked as *pending*.\n  * `isSuccessful` - should be a valid boolean.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n#### OAuth2 Plan\n\n```js\nauditLog.configurationChange('configuration object')\n  .attribute('session timeout', '5', '25')\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .successful(true)\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `configurationChange` - takes a string which identifies the object which is being *configured*.\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\n  * `name` - is the name of the attribute being accessed.\n  * `oldValue` - is the current value of the attribute being changed.\n  * `newValue` - is the value of the attribute after the change.\n* `successful(isSuccessful)` - used to mark whether the configuration change is finished with success, failure.\n  If not called configuration change will be marked as *pending*.\n  * `isSuccessful` - should be a valid boolean.\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n### Update configuration change\n\n```js\nauditLog.updateConfigurationChange(id, isSuccessful)\n  .log(...);\n```\n\n* `updateConfigurationChange(id, isSuccessful)` - takes two arguments.\n  * `id` - id of the configuration message saved earlier (see [log](#logging-a-message))\n  * `isSuccessful` - denotes whether the configuration change was successful or not.\n* `log` - See [here](#logging-a-message)\n\n### General security messages\n\nHere is how to create a general security audit log message:\n\n#### Standard Plan (deprecated)\n\n```js\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\n  .tenant('tenantId')\n  .by('John Doe')\n  .externalIP('127.0.0.1')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\n* `externalIP` - states the IP of the machine that contacts the system. It is not mandatory, but it should be either IPv4 or IPv6.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n#### OAuth2 Plan\n\n```js\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .externalIP('127.0.0.1')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(...);\n```\n\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\n* `externalIP` - states the IP of the machine that contacts the system. It is not mandatory, but it should be either IPv4 or IPv6.\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - See [here](#logging-a-message)\n\n### Logging a message\n\nUse the `log` method to write a message to the Audit log. It takes one argument - a callback function.\nBe aware that the state of the audit logs should be consistent with the state of the system.\nMake sure you handle errors from the audit log writer properly.\nApplication code **should wait** for the logging to finish before executing any other code.\n\n```js\nvar message = /* any of the above example messages */;\nmessage.log(function (err, id) {\n    // Do error handling and place all of the remaining logic here\n  });\n```\n\n* `message` - Any of the following:\n  * [`read`](#data-access-messages)\n  * [`update`](#data-modification-messages)\n  * [`configurationChange`](#configuration-change-messages)\n  * [`updateConfigurationChange`](#update-configuration-change)\n  * [`securityMessage`](#general-security-messages)\n* `err` - error object in case of error.\n* `id` - Id of the message that is saved. Use it when you want to do [`updateConfigurationChange`](#update-configuration-change). `id` is undefined in case of [`updateConfigurationChange`](#update-configuration-change).\n\n**Note**: When a message is logged, the library checks for missing properties and will throw an error if some are missing.\n\n## API - v2\n\n### Importing the library\n\n`credentials` object with credentials for the Audit log service.\nTake a look at *@sap/xsenv* package for more information on how to retrieve service credentials.\nThe callback will be called with an error if the Audit log server does not support version 2 of the REST APIs.\n\n#### Standard Plan (deprecated)\n\n```js\nvar credentials = {\n  \"user\": \"user\",\n  \"password\": \"password\",\n  \"url\": \"https://host:port\"\n};\n\nvar auditLogging = require('@sap/audit-logging');\nauditLogging.v2(credentials, function(err, auditLog) {\n  if (err) {\n    // if the Audit log server does not support version 2 of the REST APIs\n    // an error in the callback is returned\n    return console.log(err);\n  }\n});\n```\n\n#### OAuth2 Plan\n\n```js\nvar credentials = {\n  \"uaa\": {\n    \"clientid\": \"clientid\",\n    \"clientsecret\": \"clientsecret\",\n    \"url\": \"https://host:port\"\n  }\n  \"url\": \"https://host:port\"\n};\n\nvar auditLogging = require('@sap/audit-logging');\nauditLogging.v2(credentials, securityContext, function(err, auditLog) {\n  if (err) {\n    // if the Audit log server does not support version 2 of the REST APIs\n    // an error in the callback is returned\n    return console.log(err);\n  }\n});\n```\n\n* `credentials` - Retrieved from the environment.\n* `securityContext` - *Optional* - created manually or through usage of the req.AuthInfo from **@sap/xssec**.\n*Note: This method is backwards compatible if you provide the callback instead of the securityContext it will still work.*\n\n### Data access messages\n\n#### Standard Plan (deprecated)\n\n```js\nauditLog.read({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\n  .attribute({ name: 'status' })\n  .attribute({ name: 'date-of-birth', successful: true })\n  .attachment({ id: 'exam-results-9537' })\n  .attachment({ id: 'recommendations-4381', name: 'file.doc' })\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\n  // multiple data subjects can also be provided in array format as following:\n  //  .dataSubjects([{ type: 'student', id: { student_id: 'st_913' }, role: 'foreign student' },\n  //                 { type: 'student', id: { student_id: 'st_619' }, role: 'foreign student' }])\n  .accessChannel('UI')\n  .tenant('tenantId')\n  .by('John Doe')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(function (err) {\n\n  });\n```\n\n* `read` - takes a JavaScript object which identifies the object which contains the data being accessed. Should have `type` and `id` properties.\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally a `successful` property. It is **mandatory** to provide at least one attribute.\n* `attachment(attachment)` - takes an object which describes an attachment (used if attachments or files are downloaded or displayed). Should have an `id` property and optionally a `name` property.\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` or `dataSubjects` is **mandatory**.\n* `dataSubjects` - takes an array of data subject objects.\n* `accessChannel` - takes a string which specifies *channel* of access.\n* `tenant` - takes a string which specifies the tenant id.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - logs the message.\n\n#### OAuth2 Plan\n\n```js\nauditLog.read({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\n  .attribute({ name: 'status' })\n  .attribute({ name: 'date-of-birth', successful: true })\n  .attachment({ id: 'exam-results-9537' })\n  .attachment({ id: 'recommendations-4381', name: 'file.doc' })\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\n  // multiple data subjects can also be provided in array format as following:\n  //  .dataSubjects([{ type: 'student', id: { student_id: 'st_913' }, role: 'foreign student' },\n  //                 { type: 'student', id: { student_id: 'st_619' }, role: 'foreign student' }])\n  .accessChannel('UI')\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(function (err) {\n\n  });\n```\n\n* `read` - takes a JavaScript object which identifies the object which contains the data being accessed. Should have `type` and `id` properties.\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally a `successful` property. It is **mandatory** to provide at least one attribute.\n* `attachment(attachment)` - takes an object which describes an attachment (used if attachments or files are downloaded or displayed). Should have an `id` property and optionally a `name` property.\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` or `dataSubjects` is **mandatory**.\n* `dataSubjects` - takes an array of data subject objects.\n* `accessChannel` - takes a string which specifies *channel* of access.\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - logs the message.\n\n### Data modification messages\n\n#### Standard Plan (deprecated)\n\n```js\nvar message = auditLog.update({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\n  .attribute({ name: 'status' })\n  .attribute({ name: 'town', old: 'Birmingham', new: 'London' })\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\n  .tenant('tenantId')\n  .by('John Doe')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\n\nmessage.logPrepare(function (err) {\n  message.logSuccess(function (err) { });\n  // or\n  message.logFailure(function(err) { });\n});\n```\n\n* `update` - takes a JavaScript object which identifies the object which contains the data being updated. Should have `type` and `id` properties.\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally - `old` and `new` properties. It is **mandatory** to provide at least one attribute.\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` is **mandatory**.\n* `tenant` - takes a string which specifies the tenant id.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `at(time)` - sets a custom timestamp for event time.\n* `logPrepare` - Used to log that a user has started an operation over the data.\n* `logSuccess` - Used to log that the operation over the data has been completed successfully.\n* `logFailure` - Used to log that the operation over the data has not been completed successfully.\n\n#### OAuth2 Plan\n\n```js\nvar message = auditLog.update({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\n  .attribute({ name: 'status' })\n  .attribute({ name: 'town', old: 'Birmingham', new: 'London' })\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\n\nmessage.logPrepare(function (err) {\n  message.logSuccess(function (err) { });\n  // or\n  message.logFailure(function(err) { });\n});\n```\n\n* `update` - takes a JavaScript object which identifies the object which contains the data being updated. Should have `type` and `id` properties.\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally - `old` and `new` properties. It is **mandatory** to provide at least one attribute.\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` is **mandatory**.\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `logPrepare` - Used to log that a user has started an operation over the data.\n* `logSuccess` - Used to log that the operation over the data has been completed successfully.\n* `logFailure` - Used to log that the operation over the data has not been completed successfully.\n\n### Configuration change messages\n\n#### Standard Plan (deprecated)\n\n```js\nvar message = auditLog.configurationChange({ type: 'online system', id: { name: 'Students info system', configuration: 'global-config' } })\n  .attribute({ name: 'session timeout', old: '5', new: '25' })\n  .tenant('tenantId')\n  .by('Application Admin')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\n\nmessage.logPrepare(function (err) {\n  message.logSuccess(function (err) { });\n  // or\n  message.logFailure(function(err) { });\n});\n```\n\n* `configurationChange` - takes a JavaScript object which identifies the object which contains the data being configured. Should have `type` and `id` properties.\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name`, `old` and `new` properties. It is **mandatory** to provide at least one attribute.\n* `tenant` - takes a string which specifies the tenant id.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `at(time)` - sets a custom timestamp for event time.\n* `logPrepare` - Used to log that a user has started a configuration change operation.\n* `logSuccess` - Used to log that the operation has been completed successfully.\n* `logFailure` - Used to log that the operation has not been completed successfully.\n\n#### OAuth2 Plan\n\n```js\nvar message = auditLog.configurationChange({ type: 'online system', id: { name: 'Students info system', configuration: 'global-config' } })\n  .attribute({ name: 'session timeout', old: '5', new: '25' })\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\n\nmessage.logPrepare(function (err) {\n  message.logSuccess(function (err) { });\n  // or\n  message.logFailure(function(err) { });\n});\n```\n\n* `configurationChange` - takes a JavaScript object which identifies the object which contains the data being configured. Should have `type` and `id` properties.\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name`, `old` and `new` properties. It is **mandatory** to provide at least one attribute.\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `at(time)` - sets a custom timestamp for event time.\n* `logPrepare` - Used to log that a user has started a configuration change operation.\n* `logSuccess` - Used to log that the operation has been completed successfully.\n* `logFailure` - Used to log that the operation has not been completed successfully.\n\n### General security messages\n\n#### Standard Plan (deprecated)\n\n```js\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\n  .externalIP('127.0.0.1')\n  .tenant('tenantId')\n  .by('John Doe')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(function (err) {\n\n  });\n```\n\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\n* `externalIP` - states the IP of the machine that contacts the system. Specifying it is optional, but if provided, should be either IPv4 or IPv6.\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\n* `tenant` - takes a string which specifies the tenant id.\n* `at(time)` - sets a custom timestamp for event time.\n* `log` - logs the message.\n\n#### OAuth2 Plan\n\n```js\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\n  .externalIP('127.0.0.1')\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\n  .by('$USER')\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\n  .log(function (err) {\n\n  });\n```\n\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\n* `externalIP` - states the IP of the machine that contacts the system. Specifying it is optional, but if provided, should be either IPv4 or IPv6.\n* `by` -  takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\n* `tenant` -  takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**.\n* `at(time)` - sets a custom timestamp for event time.f\n* `log` - logs the message.\n\n## OAuth2 User Token Exchange\n\nIn order to make full use of the OAuth2, you will need to provide a **SecurityContext** to the library to be able to exchange user tokens to create auditlog entries on their behalf. To understand how to create a **SecurityContext**, please review [*@sap/xssec* library](https://www.npmjs.com/package/@sap/xssec).\n\n### v1\n\n```js\nvar xssec = require('@sap/xssec');\nlet auditlog;\n\n// access_token = user access token.\n\nxssec.createSecurityContext(access_token, xsuaa, function(error, securityContext, tokenInfo) {\n    if (error) {\n        console.log('Security Context creation failed');\n        return;\n    }\n    auditlog = require('@sap/audit-logging')(auditLogCreds, securityContext)\n});\n```\n\n### v2\n\n```js\nvar xssec = require('@sap/xssec');\nvar auditLogging = require('@sap/audit-logging');\nlet auditlog;\n\n// access_token = user access token.\n\nxssec.createSecurityContext(access_token, xsuaa, function(error, securityContext, tokenInfo) {\n    if (error) {\n        console.log('Security Context creation failed');\n        return;\n    }\n    auditLogging.v2(auditLogCreds, securityContext, (err, auditlog) => {\n      auditLog = auditlog;\n    })\n});\n```\n\n## Local development\n\n### Without Audit log service\n\n```js\nvar credentials = {\n  logToConsole: true\n};\nvar auditLog = require('@sap/audit-logging')(credentials);\n\n// or\n\nrequire('@sap/audit-logging').v2(credentials, function (err, auditLog) {\n\n});\n```\n\nWhen `logToConsole` is `true` the library will ignore other credential properties and will not use the Audit log service,\nbut will write the messages to the console.\n\n**Hint:** If you use the *@sap/xsenv* package, you can pass the credentials through the *default-services.json* file\nor `VCAP_SERVICES` environment variable.\n\n### With Audit log service\n\nIf your application is not deployed in Cloud Foundry or XS Advanced,\nbut you have a running Audit log service somewhere, you should set the `VCAP_APPLICATION` environment variable to a string like\n`{ \"application_name\" : \"my-app\", \"organization_name\" : \"my-org\", \"space_name\" : \"my-space\" }`\n\n**Hint:** If you use the *@sap/xsenv* package, you can set environment variables like this:\n\n```js\nvar xsenv = require('@sap/xsenv');\n\nxsenv.loadEnv();\nvar credentials = xsenv.getServices({ auditlog: 'auditlog-instance-name' }).auditlog;\nvar auditLog = require('@sap/audit-logging')(credentials);\n```\n\n*default-env.json* file:\n\n```json\n{\n  \"VCAP_APPLICATION\": {\n    \"application_name\" : \"my-app\",\n    \"organization_name\" : \"my-org\",\n    \"space_name\" : \"my-space\"\n  },\n\n  \"VCAP_SERVICES\" : {\n    \"auditlog\" : [ {\n      \"name\" : \"auditlog-instance-name\",\n      \"credentials\" : {\n        \"password\" : \"password\",\n        \"user\" : \"user\",\n        \"url\" : \"https://host:port\"\n      }\n    } ]\n  }\n}\n```\n",
      "changelog": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n\n## 5.5.3- 2022-04-06\n\n### Changed\n- changed istanbul test framework with c8\n\n## 5.5.2 - 2022-03-22\n\n### Updated\n- Remove certificate forwarding to Auditlog service.\n\n## 5.5.1 - 2022-03-01\n\n### Fixed\n- - Updated xssec to v3.2.13\n\n## 5.5.0 - 2022-01-28\n\n### Added\n- Node.js 16.x support\n\n### Fixed\n- Updated *@sap/hdbext* to 7.6.0\n- Updated *debug* to 4.3.3\n\n## 5.4.0 - 2022-01-03\n\n### Updated\n- Documentation with new usage for tenant() when providing subdomain.\n\n### Fixed\n- $SUBSCRIBER option can now be properly used by providing a subdomain in tenant().\n\n## 5.3.0 - 2021-11-22\n\n### Added\n- Added mTLS support.\n- Custom Timestamp functionality via .at() method for messages.\n\n### Updated\n- Documentation with mTLS support guidelines.\n- Documentation with custom timestamp usage.\n- *@sap/xssec* library to v3.2.10.\n\n## 5.2.0 - 2021-10-08\n\n### Added\n- Added express middleware functionality.\n\n### Updated\n- Documentation with express middleware usage steps.\n\n## 5.1.0 - 2021-08-12\n\n### Added\n- Added support for OAuth2 plan\n- Added support for SecurityContext with OAuth2 (and user token exchange)\n\n## 5.0.0 - 2021-03-09\n\n### Fixed\n- Replaced *request* with *node-fetch* 2.6.1\n- Replaced *requestretry* with *fetch-retry* 4.1.0\n\n## 4.2.0 - 2021-02-22\n\n### Added\n- Node.js 14.x support\n\n### Fixed\n- Updated *@sap/hdbext* to 7.1.3\n- Updated *lodash* to 4.17.21\n\n## 4.1.0 - 2021-02-12\n\n### Added\n- Added support for passing HTTP(s) request agent options to the Service transport.\n  This feature is experimental and is therefore not documented. It may be changed or removed anytime.\n\n## 4.0.0 - 2021-02-09\n\n### Fixed\n- Update devdeps\n- Update debug to 4.2.0\n- Update requestretry to 4.1.1\n- Allow empty strings in objectWithTypeAndId (utils.js) check\n\n### Removed\n- Node.js 6.x support\n\n## 3.2.0 - 2020-08-10\n\n### Added\n- Add support for multiple data subjects in Data access messages, v2 API\n\n## 3.1.1 - 2020-07-27\n\n### Fixed\n- Update dependencies\n\n## 3.1.0 - 2019-12-06\n\n### Added\n- Node.js 12.x support\n- Retry logic when accessing the auditlog\n\n### Fixed\n- Update dependencies\n\n## 3.0.2 - 2019-07-16\n\n### Fixed\n- Update dev dependencies\n\n## 3.0.1 - 2019-05-17\n\n### Fixed\n- Transactional messages: uuid and time fields are now updated for each log operation\n\n## 3.0.0 - 2019-04-23\n\n### Removed\n- Node.js v0.12 support\n- Node.js v4 support\n\n## 2.3.0 - 2018-12-18\n\n### Added\n- Node.js version 10 support\n\n### Fixed\n- Update `lodash` to 4.17.11\n\n## 2.2.4 - 2018-08-14\n\n### Fixed\n- Update dependencies.\n\n## 2.2.3 - 2018-07-17\n\n### Fixed\n- Update request to v2.87.0.\n\n## 2.2.2 - 2018-05-18\n\n### Fixed\n- Update request to v2.86.0.\n\n## 2.2.1 - 2018-04-05\n\n### Fixed\n- Update dependencies.\n\n## 2.2.0 - 2018-01-23\n\n### Added\n- npm-shrinkwrap.json.\n- Audit log service v2 support.\n\n### Fixed\n- Documentation for data access messages.\n\n## 2.1.1 - 2017-10-13\n\n### Changed\n- Dependencies' versions\n\n## 2.1.0 - 2017-08-08\n\n### Added\n- Support for old and new values in data modification messages.\n- Support for setting a tenant.\n- Support for Node.js v8.\n- Documentation improvements.\n\n## 2.0.1 - 2017-05-30\n\n### Fixed\n- Improved debug messages.\n\n## 2.0.0 - 2017-03-13\n\n### Added\n- The library requires the application to be bound to an instance of the **Audit log service**.\n- Instantiating the library now requires a configuration object containing the `credentials` from the service binding to be provided (see README.md).\n- `configurationChange` method is added to the API (see README.md).\n- `updateConfigurationChange` method is added to the API (see README.md).\n\n### Changed\n- `read`, `update` and `securityMessage` methods have some changes to their argument lists (see README.md).\n\n### Removed\n- `delete` method is removed from the API.\n- `create` method is removed from the API.",
      "downloadsCurrentMonth": 168373,
      "downloadsCurrentFortnight": 73841,
      "downloads365": 1496487,
      "downloadsFortnightGrowth": -21.89,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 98556 },
        { "yearMonth": "2021-08", "downloads": 95568 },
        { "yearMonth": "2021-09", "downloads": 106730 },
        { "yearMonth": "2021-10", "downloads": 98185 },
        { "yearMonth": "2021-11", "downloads": 106677 },
        { "yearMonth": "2021-12", "downloads": 101338 },
        { "yearMonth": "2022-01", "downloads": 115539 },
        { "yearMonth": "2022-02", "downloads": 139313 },
        { "yearMonth": "2022-03", "downloads": 188903 },
        { "yearMonth": "2022-04", "downloads": 163167 },
        { "yearMonth": "2022-05", "downloads": 173944 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T18:52:21.479Z" },
        { "version": "2.2.2", "date": "2020-06-11T18:52:22.298Z" },
        { "version": "modified", "date": "2022-04-08T10:10:44.457Z" },
        { "version": "3.0.0", "date": "2020-06-11T18:52:28.654Z" },
        { "version": "2.3.0", "date": "2020-06-11T18:52:35.291Z" },
        { "version": "2.2.0", "date": "2020-06-11T18:52:42.237Z" },
        { "version": "2.1.1", "date": "2020-06-11T18:52:49.256Z" },
        { "version": "2.2.4", "date": "2020-06-11T18:52:55.466Z" },
        { "version": "2.1.0", "date": "2020-06-11T18:53:01.762Z" },
        { "version": "1.0.5", "date": "2020-06-11T18:53:08.016Z" },
        { "version": "3.0.2", "date": "2020-06-11T18:53:14.383Z" },
        { "version": "2.2.3", "date": "2020-06-11T18:53:20.844Z" },
        { "version": "3.1.0", "date": "2020-06-11T18:53:27.401Z" },
        { "version": "2.0.0", "date": "2020-06-11T18:53:34.438Z" },
        { "version": "2.0.1", "date": "2020-06-11T18:53:41.344Z" },
        { "version": "3.0.1", "date": "2020-06-11T18:53:47.293Z" },
        { "version": "2.2.1", "date": "2020-06-11T18:53:53.555Z" },
        { "version": "3.1.1", "date": "2020-07-27T13:01:34.084Z" },
        { "version": "3.2.0", "date": "2020-09-07T15:29:24.232Z" },
        { "version": "4.0.0", "date": "2021-02-10T07:41:13.566Z" },
        { "version": "4.1.0", "date": "2021-02-12T14:31:28.541Z" },
        { "version": "4.2.0", "date": "2021-02-22T16:25:36.570Z" },
        { "version": "5.0.0", "date": "2021-03-09T14:36:55.294Z" },
        { "version": "5.1.0", "date": "2021-08-16T07:10:28.115Z" },
        { "version": "5.3.0", "date": "2021-11-22T15:33:13.374Z" },
        { "version": "5.4.0", "date": "2022-01-13T14:32:54.193Z" },
        { "version": "5.4.1", "date": "2022-01-21T07:50:53.408Z" },
        { "version": "5.5.0", "date": "2022-01-31T07:55:11.319Z" },
        { "version": "5.5.1", "date": "2022-03-01T12:21:29.408Z" },
        { "version": "5.5.2", "date": "2022-03-23T13:22:34.750Z" },
        { "version": "5.5.3", "date": "2022-04-08T10:10:44.371Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/audit-logging"
    },
    {
      "name": "cds-compiler",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-12T00:07:27.422Z",
      "updatedAt": "2022-05-16T15:33:44.939Z",
      "readme": "# Getting started\n\n\n<!-- markdownlint-disable MD001 MD022 -->\n##### Table of Contents\n<!-- markdownlint-enable MD001 MD022 -->\n\n[Installation and Usage](#installation-and-usage)  \n[Documentation](#documentation)\n\n## Installation and Usage\n\nInstall with npm:\n\n```\nnpm install \"@sap/cds-compiler\"\n```\n\nOr maintain your package.json dependencies as follows:\n\n```\n  \"dependencies\": {\n    \"@sap/cds-compiler\": \"latest\"\n  }\n```\n\n## Documentation\n\nPlease refer to the [official CDS documentation](https://cap.cloud.sap/docs/cds/).\n\n\n## License\n\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\n",
      "changelog": "# ChangeLog for cds compiler and backends\n\n<!-- markdownlint-disable MD024 -->\n<!-- markdownlint-disable MD004 -->\n<!-- (no-duplicate-heading)-->\n\nNote: `beta` fixes, changes and features are usually not listed in this ChangeLog but [here](doc/CHANGELOG_BETA.md).\nThe compiler behavior concerning `beta` features can change at any time without notice.\n\n\n## Version 2.15.2 - 2022-05-12\n\n### Fixed\n\n- Option `cdsHome` can be used instead of `global.cds.home` to specify the path to `@sap/cds/`.\n- to.edm(x):\n  + Set anonymous nested proxy key elements to `Nullable:false` until first named type is reached.\n  + Enforce `odata-spec-violation-key-null` on explicit foreign keys of managed primary key associations.\n  + Proxies/service cross references are no longer created for associations with arbitrary ON conditions.\n    Only managed or `$self` backlink association targets are proxy/service cross reference candidates.\n  + Explicit foreign keys of a managed association that are not a primary key in the target are exposed in the the proxy.\n  + If an association is primary key, the resulting navigation property is set to `Nullable:false` in structured mode.\n\n## Version 2.15.0 - 2022-05-06\n\n### Added\n\n- A new warning is emitted if `excluding` is used without a wildcard, since this does\n  not have any effect.\n- All scalar types can now take named arguments, e.g. `MyString(length: 10)`.\n  For custom scalar types, one unnamed arguments is interpreted as length, two arguments are interpreted\n  as precision and scale, e.g. `MyDecimal(3,3)`.\n- If the type `sap.common.Locale` exists, it will be used as type for the `locale` element\n  of generated texts entities.  The type must be a `cds.String`.\n- to.cdl: Extend statements (from `extensions`) can now be rendered.\n- Add OData vocabulary 'Hierarchy'.\n- CDL: New associations can be published in queries, e.g. `assoc : Association to Target on assoc.id = id`\n\n### Changed\n\n- to.edm(x):\n  + perform inbound qualification and spec violation checks as well as most/feasible EDM preprocessing steps\n    on requested services only.\n  + Open up `@odata { Type, MaxLength, Precision, Scale, SRID }` annotation.  \n    The annotations behavior is defined as follows:\n    + The element/parameter must have a scalar CDS type. The annotation is not applied on named types\n      (With the V2 exception where derived type chains terminating in a scalar type are resolved).\n    + The value of `@odata.Type` must be a valid `EDM` type for the rendered protocol version.\n    + If `@odata.Type` can be applied, all canonic type facets (`MaxLength`, `Precision`, `Scale`, `SRID`) are\n      removed from the Edm Node and the new facets `@odata { MaxLength, Precision, Scale, SRID }` are applied.\n      Non Edm type conformant facets are ignored (eg. `@odata { Type: 'Edm.Decimal', MaxLength: 10, SRID: 0 }`).\n    + Type facet values are not evaluated.\n  + V2: Propagate `@Core.MediaType` annotation from stream element to entity type if not set.\n- to.edm: Render constant expressions in short notation.\n- Update OData Vocabularies: 'Common', 'Graph', 'Validation'.\n\n### Fixed\n\n- to.cdl:\n  + Annotations of elements of action `returns` are now rendered as `annotate` statements.\n  + Annotations on columns (query sub-elements) were not always rendered.\n  + Doc comments on bound actions were rendered twice.\n  + Unapplied annotations for action parameters were not rendered.\n  + Unions and joins are correctly put into parentheses.\n  + Add parentheses around certain expressions in function bodies that require it, such as `fct((1=1))`.\n- to.edm(x):\n  + Fix a bug in top level and derived type `items` exposure leading to undefined type rendering.\n  + Fix a naming bug in type exposure leading to false reuse types, disguising invididual type\n    modifications (such as annotations, (auto-)redirections, element extensions).\n  + Ignore `@Aggregation.default`.\n  + Consolidate message texts and formatting.\n  + Fix navigation property binding in cross service rendering mode.\n  + Remove partner attribute in proxy/cross service navigations.\n- Core engine (function `compile`):\n  + Annotations for new columns inside `extend projection` blocks were not used.\n  + Extending an unknown select item resulted in a crash.\n  + Extending a context/service with columns now correctly emits an error.\n  + Unmanaged `redirected to` in queries did not check whether the source is an association.\n- parseCdl: `extend <art> with enum {...}` incorrectly threw a compiler error.\n- API: `compile()` used a synchronous call `fs.realpathSync()` on the input filename array.  \n  Now the asynchronous `fs.realpath()` is used.\n- On-conditions in localized convenience views may be incorrectly rewritten if an element\n  has the same as a localized entity.\n- to.sql/hdi/hdbcds:\n  + No referential constraint is generated for an association if its parent\n  or target entity are annotated with `@cds.persistence.exists: true`.\n  + Fix rendering of virtual elements in subqueries\n  + Correctly process subqueries in JOINs\n- to.sql/hdi: Queries with `UNION`, `INTERSECT` and similar in expressions are now enclosed in parentheses.\n\n## Version 2.14.0 - 2022-04-08\n\n### Added\n\n- cdsc:\n  + `--quiet` can now be used to suppress compiler output, including messages.\n  + `--options <file.json>` can be used to load compiler options. A JSON file is expected. Is compatible to CDS `package.json`\n    and `.cdsrc.json` by first looking for `cdsc` key in `cds`, then for a `cdsc` key and otherwise uses the full JSON file.\n  + `--[error|warn|info|debug] id1,id2` can be used to reclassify specific messages.\n- Add OData Vocabularies: 'DataIntegration', 'JSON'.\n  \n### Changed\n\n- Update OData Vocabularies: 'UI'.\n\n### Fixed\n\n- to.cdl:\n  + Delimited identifiers as the last elements of arrays in annotation values are now\n    rendered with spaces in between, to avoid accidentally escaping `]`.\n  + Identifiers in includes and redirection targets were not quoted if they are reserved keywords.\n- to.edm(x): Correctly rewrite `@Capabilities.ReadRestrictions.ReadByKeyRestrictions` into\n  `@Capabilities.NavigationPropertyRestriction` in containment mode.\n\n## Version 2.13.8 - 2022-03-29\n\n### Fixed\n\n- to.hdbcds/hdi/sql: Correctly handle `localized` in conjunction with `@cds.persistence.exists` and `@cds.persistence.skip`\n\n## Version 2.13.6 - 2022-03-25\n\n### Fixed\n\n- to.hdbcds/hdi/sql: Correctly handle `localized` in conjunction with `@cds.persistence.exists`\n\n## Version 2.13.4 - 2022-03-22\n\nNo changes compared to Version 2.13.0; fixes latest NPM tag\n\n## Version 2.13.2 - 2022-03-22\n\nNo changes compared to Version 2.13.0; fixes latest NPM tag\n\n## Version 2.13.0 - 2022-03-22\n\n### Added\n\n- CDL syntax:\n  + Allow to `extend E:elem` and `annotate E:elem` instead of having to write deeply nested statements.\n  + Enable `default` values as part of scalar type definitions.\n  + The following `extend` syntax variants are now possible:\n    ```cds\n    extend … with elements { … }\n    extend … with definitions { … }\n    extend … with columns { … }\n    extend … with enum { … }\n    extend … with actions { … }\n    ```\n    This syntax expresses _how_ an artifact is extended instead of _what_ is extended.\n  + Using `ORDER BY` in generic functions such as SAP HANA's `first_value` is now possible.\n- Make API function `compileSources` accept CSN objects as file content\n- to.edm(x): Annotate view parameters with `@sap.parameter: mandatory` (V2) and `@Common.FieldControl: #Mandatory` (V4).\n- to.sql/hdi/hdbcds: Introduce the annotations `@sql.prepend` and `@sql.append` that allow inserting user-written SQL\n  snippets into the compiler generated content. Changes in annotations `@sql.prepend` and `@sql.append` are now reflected\n  in the output of `to.hdi.migration`. This enables CDS Build to produce `.hdbmigrationtable` files translating such model\n  changes into schema changes.\n- API: Lists of keywords for various backends are available as `to.<backend>[.<config>].keywords`, e.g. `to.sql.sqlite.keywords`.\n- for.odata/to.edm(x): The draft composition hull is now also taking into account compositions in subelements.\n\n### Changed\n\n- In query entities inside services, only auto-redirect associations and compositions\n  in the main query of the entity.\n- An element now inherits the property `notNull` from its query source (as\n  before) or its type (like it does for most other properties);\n  `notNull` is then not further propagated to its sub elements anymore.\n- A structure element inherits the property `virtual` from its query source (as\n  before), but does not further propagate `virtual` to its sub elements\n  (semantically of course, but the CSN is not cluttered with it);\n  there is a new warning if a previously `virtual` query entity\n  element is now considered to be non-virtual.\n- Do not propagate annotation value `null`.\n  The value `null` of an annotation (and `doc`) is used to stop the inheritance\n  of an annotation value.  This means than other than that, a value `null` should\n  not be handled differently to not having set that annotation.\n- In the effective CSN, the structure type is only expanded if something has changed\n  for associations: the `target` (`keys` does not change if the `target` does not change)\n  unmanaged associations as sub elements are not supported anyway.\n- In the effective CSN, “simple” type properties like `length`, `precision`,\n  `scale` and `srid` are propagated even for a propagation via type.\n- Update OData Vocabularies: 'Capabilities', 'Common', 'Core', 'UI'.\n- to.sql:\n  + For SQL dialect `hana` referential constraints are now appended\n    as `ALTER TABLE ADD CONSTRAINT` clause to the end of `schema.sql`.\n    With option `constraintsInCreateTable` constraints are rendered into the\n    `CREATE TABLE` statement.\n  + Referential constraint names are now prefixed with `c__`.\n\n### Fixed\n\n- Properly resolve references inside anonymous aspects:\n  + references starting with `$self.` made the compiler dump.\n  + a simple `$self` did  not always work as expected (it represents the entity created via the anonymous aspect).\n  + other references inside deeply nested anonymous aspects induced a compilation error.\n- compiler: `()` inside `ORDER BY` clause was not correctly set.\n- parse.cdl: References in `ORDER BY` and filters are now correctly resolved.\n- Issue error when trying to introduce managed compositions of aspects in `mixin`s\n- Issue error in all cases for type references to unmanaged associations.\n- Avoid dump when extending an illegal definition with a name starting with `cds.`.\n- to.sql/to.cdl/to.hdbcds/to.hdi: Render `cast()` inside `ORDER BY`, `GROUP BY` and `HAVING` properly.\n- to.sql/hdi/hdbcds:\n  + `$self` was incorrectly treated as a structured path step.\n  + Correctly handle table alias in on-condition of mixin in `exists` expansion.\n  + Correctly handle table `$self` references to aliased fields in on-condition of mixin association\n    during `exists` expansion.\n- to.edm: Don't escape `&` as `&amp;`.\n- to.edmx: Escaping compliant to XML specification:\n  + `&` and `<` are always escaped.\n  + `>` is not escaped, unless it appears in text values as `]]>`.\n  + `\"` is escaped in attribute values only.\n  + Control characters are always escaped.\n- Ellipsis (`...`) in annotations in different layers but without base annotation now produces an error.\n  The old but incorrect behavior can be re-enabled with option `anno-unexpected-ellipsis-layers`.\n\n## Version 2.12.0 - 2022-01-25\n\n### Added\n\n- CDL parser: You can now use multiline string literals and text blocks.  \n  Use backticks (\\`) for string literals that can span multiple lines and can use JavaScript-like escape\n  sequences such as `\\u{0020}`.  You can also use three backticks (\\`\\`\\`) for strings (a.k.a. text blocks)\n  which are automatically indentation-stripped and can have an optional language identifier that is used\n  for syntax highlighting, similar to markdown.  In difference to the former, text blocks require the\n  opening and closing backticks to be on separate lines.\n  Example:\n  ````\n  @annotation: `Multi\n   line\\u{0020}strings`\n\n  @textblock: ```xml\n              <summary>\n                <detail>The root tag has no indentation in this example</detail>\n              </summary>\n              ```\n  ````\n\n- Enhance the ellipsis operator `...` for array annotations by an `up to ‹val›`:\n  only values in the array of the base annotation up to (including) the first match\n  of the specified `‹val›` are included at the specified place in the final array value.\n  An array annotation can have more than on `... up to ‹val›` items and must also\n  have a pure `...` item after them.  \n  A structured `‹val›` matches if the array item is also a structure and all property\n  values in `‹val›` are equal to the corresponding property value in the array value;\n  it is not necessary to specify all properties of the array value items in `‹val›`.\n  Example\n  ```\n  @Anno: [{name: one, val: 1}, {name: two, val: 2}, {name: four, val: 4}]\n  type T: Integer;\n  @Anno: [{name: zero, val: 0}, ... up to {name: two}, {name: three, val: 3}, ...]\n  annotate T;\n  ```\n- for.odata: Support `@cds.on {update|insert}` as replacement for deprecated `@odata.on { update|insert }` to\n  set `@Core.Computed`.\n\n### Changed\n\n- Update OData Vocabularies 'Aggregation', 'Capabilities', 'Common', 'Core', PersonalData, 'Session', 'UI'\n\n### Fixed\n\n- to.sql/hdi/hdbcds: With `exists`, ensure that the precedence of the existing association-on-conditions and where-conditions is kept by adding braces.\n- to.sql/hdi: Window function suffixes are now properly rendered.\n- to.sql: `$self` comparisons inside aspects are not checked and won't result in an error anymore.\n- to.hdbcds:\n  + Correctly apply the \".\"-to-\"_\"-translation algorithm to artifacts that are marked with `@cds.persistence.exists`.\n  + Message with ID `anno-hidden-exists` (former `anno-unstable-hdbcds`) is now\n    only issued if the compiler generates a SAP HANA CDS artifact which would hide\n    a native database object from being resolved in a SAP HANA CDS `using … as …`.\n- to.cdl: Annotation paths containing special characters such as spaces or `@` are now quoted, e.g. `@![some@annotation]`.\n- compiler: A warning is emitted for elements of views with localized keys as the localized property is ignored for them.\n\n## Version 2.11.4 - 2021-12-21\n\n### Fixed\n\n- CDL parser: in many situations, improve message when people use reserved keywords as identifier\n- Improve error text and error location for ambiguous auto-redirection target\n- to.sql/hdi/hdbcds:\n  + Correctly detect `exists` in projections\n  + Correctly handle elements starting with `$` in the on-condition of associations\n  + Correctly handle sub queries in an entity defined with `projection on`\n  + Correctly handle associations in sub queries in a `from` of a sub query\n  + foreign key constraints: respect @assert.integrity: false for compositions\n- to.hdbcds: Correctly quote elements named `$self` and `$projection`\n- to.cdl: `when` was added to the keyword list for smart quoting\n- Compiler support for code completion for `$user` and `$session` now respect user\n  provided variables in `options.variableReplacements`.\n- API: `deduplicateMessages()` no longer removes messages for `duplicate` artifact/annotation errors.\n  Prior to this version, only one of the duplicated artifacts had a message, leaving the user to\n  guess where the other duplicates were.\n\n\n## Version 2.11.2 - 2021-12-06\n\n### Fixed\n\n- to.sql/hdi/hdbcds:\n  + No foreign key constraint will be rendered for managed `composition of one` if annotated with `@assert.integrity: false`\n  + Correctly handle managed associations with other managed associations as foreign keys in conjunction with `exists`\n\n## Version 2.11.0 - 2021-12-02\n\n### Added\n\n- Option `defaultBinaryLength` to set a `length` type facet for all definitions with type `cds.Binary`. This option\n  overrides the default binary length in the database backends and is also used as `MaxLength` attribute in Odata.\n- If doc-comments are ignored by the compiler, an info message is now emitted.  A doc-comment is ignored,\n  if it can't be assigned to an artifact.  For example for two subsequent doc-comments, the first doc-comment\n  is ignored.  To suppress these info messages, explicitly set option `docComment` to `false`.\n- `cdsc`:\n  + `cdsc explain list` can now be used to get a list of message IDs with explanation texts.\n  + `cdsc` now respects the environment variable `NO_COLOR`. If set, no ANSI escape codes will be used.\n    Can be overwritten by `cdsc --color always`.\n- to.sql/hdi: Support SQL Window Functions\n- to.sql/hdi/hdbcds:\n  + Support configuration of `$session` and `$user` via option `variableReplacements`.\n  + Restricted support for SQL foreign key constraints if option `assertIntegrityType` is set to `\"DB\"`.\n    The behavior of this feature might change in the future.\n\n### Changed\n\n- Updated OData vocabularies 'Common' and 'UI'.\n- to.sql/hdi/hdbcds: The default length of `cds.Binary` is set to `5000` similar to `cds.String`.\n\n### Removed\n\n- to.hdbcds: Doc comments on view columns are not rendered anymore. Doc comments on string literals will make the deployment fail\n  as the SAP HANA CDS compiler concatenates the doc comment with the string literal. Besides that, doc comments on view columns\n  are not transported to the database by SAP HANA CDS.\n- to.hdbcds/sql/hdi: Forbid associations in filters after `exists` (except for nested `exists`), as the final behavior is not yet specified.\n\n### Fixed\n\n- CSN parser: doc-comment extensions are no longer ignored.\n- Properly check for duplicate annotation definitions.\n- Correctly apply annotations on inherited enum symbols.\n- Correctly apply annotations on elements in an inherited structure array.\n- Fix a bug in API `defaultStringLength` value evaluation.\n- Fix crash if named arguments are used in a function that's inside a `CASE` statement.\n- to.sql/hdi/hdbcds:\n  + Properly flatten ad-hoc defined elements in `returns` / `params` of `actions` and `functions`.\n  + Correctly handle `*` in non-first position.\n  + Correctly handle action return types\n  + Correctly handle mixin association named `$self`\n- to.cdl: doc-comments are no longer rendered twice.\n- to.edm(x):\n  + Fix a bug in V2/V4 partner ship calculation.\n  + Remove warning of unknown types for Open Types in `@Core.Dictionary`.\n  + An empty CSN no longer results in a JavaScript type error\n\n## Version 2.10.4 - 2021-11-05\n\n### Fixed\n\n- to.sql/hdi/hdbcds:\n  + Correctly complain about `exists` in conjunction with non-associations/compositions\n  + Don't resolve types in action returns, as this causes issues with $self-resolution\n\n- to.edm(x): Be robust against transitively untyped keys in stacked view hierarchies\n\n## Version 2.10.2 - 2021-10-29\n\n### Fixed\n\n- to.sql/hdi/hdbcds: Correctly handle `exists` in conjunction with mixin-associations\n\n## Version 2.10.0 - 2021-10-28\n\n### Added\n\n- Support arbitrary paths after `$user` - similar to `$session`.\n- Support scale `floating` and `variable` for `cds.Decimal` in CDL and CSN. Backend specific handling is descibed in their sections.\n- Allow select item wildcard (`*`) in a `select`/`projection` at any position, not just the first.\n\n- to.edm(x):\n  + In Odata V4 generate transitive navigation property binding paths along containment hierarchies and terminate on the\n    first non-containment association. The association target is either an explicit Edm.EntitySet in the same EntityContainer\n    or in a referred EntityContainer (cross service references) or an implicit EntitySet identified by the containment path\n    originating from an explicit EntitySet. This enhancement has an observable effect only in structured format with containment\n    turned on.\n  + Support for scales `variable` and `floating`:\n    + V4: `variable` and `floating` are rendered as `Scale=\"variable\"`. Since V4 does not support `floating`, it is aproximated as `variable`.\n    + V2: `variable` and `floating` are announced via property annotation `sap:variable-scale=\"true\"`\n  \n- to.sql/hdi/hdbcds:\n  + Reject scale `floating` and `variable`.\n  + Reject arbitrary `$user` or `$session` paths that cannot be translated to valid SQL.\n  + Following a valid `exists`, further `exists` can be used inside of the filter-expression: `exists assoc[exists another[1=1]]`\n  + `exists` can now be followed by more than one association step.\n  `exists assoc.anotherassoc.moreassoc` is semantically equivalent to `exists assoc[exists anotherassoc[exists moreassoc]]`\n\n### Changed\n\n- to.odata: Inform when overwriting draft action annotations like `@Common.DraftRoot.ActivationAction`.\n\n## Version 2.9.0 - 2021-10-15\n\n### Changed\n\n- to.edm(x): Raise `odata-spec-violation-type` to a downgradable error.\n\n### Fixed\n\n- to.edm(x):\n  + Fix a bug in annotation propagation to foreign keys.\n  + Don't render annotations for not rendered stream element in V2.\n- to.hdi:\n  + for naming mode \"hdbcds\" and \"quoted\" parameter definitions are not quoted anymore.\n- to.hdi/sql/hdbcds:\n  + Correctly handle explicit and implicit alias during flattening.\n  + Raise an error for `@odata.draft.enabled` artifacts with elements without types - instead of crashing with internal assertions.\n\n## Version 2.8.0 - 2021-10-07\n\n### Added\n\n- Allow defining unmanaged associations in anonymous aspects of compositions.\n- Enable extensions of anonymous aspects for managed compositions of aspects.\n- When the option `addTextsLanguageAssoc` is set to true and\n  the model contains an entity `sap.common.Languages` with an element `code`,\n  all generated texts entities additionally contain an element `language`\n  which is an association to `sap.common.Languages` using element `local`.\n- for.odata:\n  + In `--odata-format=flat`, structured view parameters are flattened like elements.\n- to.hdbcds\n  + Use \"smart quotes\" for naming mode \"plain\" - automatically quote identifier which are reserved keywords or non-regular.\n\n### Changed\n\n- for.odata:\n  + In `--data-format=structured`, anonymous sub elements of primary keys and parameters are set to `notNull:true`,\n    an existing `notNull` attribute is _not_ overwritten. Referred named types are _not_ modified.\n- to.edm(x):\n  + Improve specification violation checks of (nested) keys:\n    + All (sub-)elements must be `Nullable: false` (error).\n    + Must represent a single value (error).\n    + In V4 must be a specification compliant Edm.PrimitiveType (warning).\n- to.hdi/hdbcds/sql: $user.\\<xy\\> now has \\<xy\\> added as alias - \"$user.\\<xy\\> as \\<xy\\>\"\n\n### Fixed\n\n- Properly generate auto-exposed entities for associations in parameters.\n- Correctly apply extensions to anonymous array item types.\n- Correctly apply/render annotations to anonymous action return types.\n- With CSN flavor `plain` (`gensrc`), correctly render annotations on elements\n  of referred structure types as `annotate` statements in the CSN's `extensions` property.\n- to.cdl:\n  + Correctly render extensions on array item types\n  + Correctly render annotations on action return types\n- to/for: Correctly handle CSN input where the prototype of objects is not the \"default\"\n- to.hdi:\n  + for naming mode \"hdbcds\" and \"quoted\" parameter definitions are now quoted.\n  + for naming mode \"plain\", smart quotation is applied to parameter definitions if they are reserved words.\n- to.hdi/hdbcds/sql:\n  + Ensure that cdl-style casts to localized types do not lose their localized property\n  + Fix a small memory leak during rendering of SQL/HDBCDS.\n- to.edm(x): Remove ambiguous `Partner` attribute from `NavigationProperty`. A forward association referred\n  to by multiple backlinks (`$self` comparisons) is no longer partner to an arbitrary backlink.\n\n## Version 2.7.0 - 2021-09-22\n\n### Added\n\n- to.hdi.migration:\n  + Support changes to HANA comments.\n\n### Changed\n\n- Updated OData vocabularies 'Common', 'Core'\n\n### Fixed\n\n- Fix memory issue: do not keep reference to last-compiled model.\n- Fix dump which occured when trying to report that the user has defined an element to be both `key` and `localized` if\n  `localized` was inherited via the provided type, or in the generated entity for a managed composition of aspect.\n- Properly auto-expose targets of associations in parameters and `many`.\n- for.Odata:\n  + Fix handling of annotation `@cds.odata.valuelist` in conjunction with associations in structures using flat-mode and sqlMapping set to plain.\n  + Set correctly the $localized property in the OData backend resulting CSN for artifacts that have localized convenience views.\n- to.edm(x):\n  + Fix rendering of structured referential constraints and nested partnerships in combination with `$self` comparisons.\n  + Fix merging of `@Capabilities` annotations while transforming them into `NavigationCapabilities` from the containee into the container.\n- to.sql/hdi/hdbcds:\n  + Fix a bug in Association to Join translation in multi-level association redirection in combination with `$self`.\n  + Correctly flatten paths with filters or parameters.\n  + Improve error message in case of invalid `exists`.\n\n## Version 2.6.2 - 2021-08-26\n\n### Fixed\n\n- to.sql/hdi/hdbcds/edm(x)/for.odata: Correctly handle tuple expansion in subqueries of Unions.\n\n## Version 2.6.0 - 2021-08-23\n\n### Added\n\n- Support managed associations without foreign keys. Associations targeting a definition without primary keys or with an\n  explicit empty foreign key tuple or with empty structured elements as foreign keys and their corresponding `$self`\n  comparisons do not describe the relationship between the source and the target entity.\n  These associations can be used to establish API navigations but cannot be used to access elements in the target\n  entity as they cannot be transformed into a valid JOIN expression.\n  Consequently, these associations are not added to the `WITH ASSOCIATIONS` clause or forwarded to HANA CDS.\n- to.sql/hdi/hdbcds/edm(x)/for.odata: Structure/managed association comparisons (tuple comparisons) are now\n  also expanded in infix filters, all expressions and all on-conditions.\n- to.hdbcds: Better locations for messages - mostly concerning keywords and duplicates\n\n### Changed\n\n- to.sql/hdi/hdbcds: Invalid (i.e. not expandable) usage of structures is now checked - an error is raised\n\n### Removed\n\n- The internal non-enumerable CSN property `$env` has been removed from the compiled CSN.\n\n### Fixed\n\n- Make `;` optional before `}` in all circumstances (was not the case with `many`).\n- to.sql/hdi/hdbcds/edm(x): More graceful handling of CSN input where associations do not have `keys` or an `on`-condition\n\n## Version 2.5.2 - 2021-08-10\n\n### Fixed\n\n- to.hdbcds: Fixed a bug introduced with 2.5.0 that caused virtual elements to be rendered in views.\n\n## Version 2.5.0 - 2021-07-28\n\n### Added\n\n- Allow to extend existing array annotation values via the ellipsis operator `...`.\n  An ellipsis may appear exactly once at an arbitrary position in the top level array\n  of an `annotate` directive. Only array values can be merged into arrays and unapplied\n  ellipses are removed from the final array value. Annotation layering rules remain unaffected.\n- to.sql/hdi/hdbcds:\n  + Doc comments are translated into HANA comments (or into `@Comment` annotation for `to.hdbcds`).\n  Such comments are possible on entities, views, elements of entities and `to.hdbcds` also supports comments on view columns.\n  Generation can be disabled via option `disableHanaComments`. Entites/views (and their elements/columns)\n  annotated with `@cds.persistence.journal` for `to.hdi`/`to.sql` will not have comments rendered.\n  + Generation of temporal `WHERE` clause can be suppressed by annotating the `validFrom`/`validTo` elements of the projection with `false` or `null`.\n- to.sql/hdi/hdbcds/edm(x)/for.odata: Structure/managed association comparisons (tuple comparisons) are now\n  also expanded in `WHERE` and `HAVING` - this was previously only supported in on-conditions.\n- `cdsc` now internally uses SNAPI.\n- to.hdi.migration:\n  + Validate that the two supplied CSNs are compatible.\n  + Improve delta-mechanism to not render superflous [ALTER|DROP|ADD] statements for unchanged SQL.\n\n### Changed\n\n- If the first source provided to the compile command has a `$sources` property\n  (whether enumerable or not) which is an array of strings,\n  use that instead of calculating one.\n- Updated OData vocabularies 'Aggregation', 'Analytics', 'Authorization', 'Capabilities',\n  'CodeList', 'Common', 'Communication', 'Core', 'Graph', 'HTML5', 'Measures', 'ODM', 'PersonalData',\n  'Repeatability', 'Session', 'UI', 'Validation'\n\n### Removed\n\n- Removed internal property `$viaTransform` from CSN produced by OData/HANA transformation\n\n### Fixed\n\n- Remove warnings 'Ignoring annotation “@odata.draft.enabled” as the artifact is not part of a service'\n  and 'Ignoring draft node for composition target ... because it is not part of a service'\n- Doc comments are no longer ignored after enum values and on view columns in parseCdl mode.\n- to.cdl:\n  + Doc comments for enum values are correctly rendered.\n  + Enum value and doc comments are now correctly rendered if the enum is called `doc`.\n  + Doc comments at type references are correctly rendered.\n  + Empty doc comments are correctly rendered and not left out.\n  + Doc comments on view columns are correctly rendered.\n- to.edm(x):\n  + OData V2: Ignore `@odata.singleton`.\n  + OData V4: Do not render an `edm:NavigationPropertyBinding` to a singleton if the association has\n    cardinality 'to-many'.\n- forOData:\n  + Fix automatic renaming of shortcut annotation (eg. `@label`) with value `null`.\n- CSN parser:\n  + Empty doc comments are correctly parsed and not complained about.\n\n## Version 2.4.4 - 2021-07-02\n\n### Fixed\n\n- Do not remove parentheses around single literals and references on the right-hand side of an `in` and `not in` operator.\n\n## Version 2.4.2 - 2021-07-01\n\n- Only changes to beta features. Refer to the [beta ChangeLog](doc/CHANGELOG_BETA.md#version-242) for more.\n\n## Version 2.4.0 - 2021-06-28\n\n### Added\n\n- to.edm(x):\n  + Warn if an `edm:Property` has no `Type` attribute.\n  + Warn about using the protected names 'Edm', 'odata', 'System', 'Transient' as `edm:Schema` `Namespace` values.\n  + Allow `$edmJson` inline annotations in `edm:Collection` and nested annotations.\n- to.hdi/sql/hdbcds: Transform a `exists <association>` into a `exists <subselect>`, where the subselect\n  selects from the target of `<association>` and establishes the same relation as `<association>` would via the WHERE clause.\n  Infix-filters of `<association>` are added to the WHERE clause.\n\n### Changed\n\n- Do not inherit `@cds.persistence.skip` when `@cds.persistence.table` is set on entity.\n- to.cdl: Opening and closing braces of empty services and contexts are now on the same line.\n\n### Fixed\n\n- `cdsc`: Option `--direct-backend` can now be combined with `toCsn`'s option `--with-localized`\n- The option `testSortCsn` was erroneously ignored in some compiler backends.\n\n## Version 2.3.2 - 2021-06-14\n\n### Fixed\n\n- for.odata: Propagate the `virtual` attribute correctly while flattening structures.\n- If internal relational types are used directly in CDL (e.g. `cds.Association`), an error is emitted.\n  In CSN, all artifacts of relational types need a `target` (/`targetAspect`) as well.\n- In Association to Join translation don't produce a JOIN node for exposed (transitive) associations in\n  combination with their exposed foreign keys. Also resolve foreign keys correctly against the target\n  entity allowing to expose renamed foreign keys when aliased.\n- The option `testSortCsn` (`--test-sort-csn` in `cdsc`) can be used to sort CSN definitions alphabetically.\n  This option is only intended for tests.  This will restore the pre-v2.3.0 ordering in EDMX.\n- to.sql:\n  + for SQL-dialect `sqlite`, render the string-format-time function (`strftime()`)\n    + `$at.from` with date-format: `'%Y-%m-%dT%H:%M:%S.000Z'`\n    + `$at.to` with date-format:  `'%Y-%m-%dT%H:%M:%S.001Z'` (**+1ms** compared to `$at.from`)\n  + for SQL-dialect `hana` wrap `SESSION_CONTEXT('VALID-TO')` and `SESSION_CONTEXT('VALID-FROM')` in `TO_TIMESTAMP(..)` function\n- to.hdbcds:\n  + Wrap `SESSION_CONTEXT('VALID-TO')` and `SESSION_CONTEXT('VALID-FROM')` in `TO_TIMESTAMP(..)` function\n\n## Version 2.3.0 - 2021-06-02\n\n### Added\n\n- `cdsc` got a new option `--fallback-parser <cdl|csn>` that is used\n  if an unknown or no file extension is used.\n- to.hdi/sql: Allow association publishing in UNIONs - this was previously forbidden, but this limitation only applies to HANA CDS.\n- to.edm(x): Support dynamic expressions as $edmJson inline code\n\n### Changed\n\n- Type `DecimalFloat` is no longer proposed for code-completion.\n- Non-string enums without values for their enum elements are warned about.\n- OData CSN is no longer sorted by definition names\n- to.edm(x): Update OData vocabularies 'Aggregation', 'Analytics', 'CodeList', 'Common', 'Measures', 'Session', 'UI'\n\n### Removed\n\n- to.hdbcds: Association publishing in subqueries is not supported by HANA CDS - an error is raised during compile time, instead of waiting for a deployment error.\n\n### Fixed\n\n- Correct auto-exposure in model with unscoped projection on deep scoped entity\n  (from managed aspect compositions: component in component, like they are common in ODM).\n- Internal types `cds.Association` and `cds.Composition` are no longer proposed for code-completion.\n- Fix various issues with Association to Join translation:\n  + Substitute `$self.alias` expressions and respect prefix paths in foreign key accesses.\n- to.hdbcds: In naming mode \"hdbcds\", correctly resolve $self backlinks with aliased foreign keys.\n- to.cdl:\n  + Correctly traverse subelements when rendering annotations for them.\n  + Quote element names (if required) in `annotate with` statements.\n- for.odata: Fix regression with detecting collision when generating foreign keys.\n- to.edmx: Correctly render final base types in EDMX V2 when called with transformed OData CSN for V4.\n\n## Version 2.2.8 - 2021-05-20\n\n### Fixed\n\n- Fix regression: also for associations _defined_ in a service, try to\n  implicitly redirect the provided model target.\n\n## Version 2.2.6 - 2021-05-12\n\n### Fixed\n\n- to.edmx(x):\n  + The reverted change \"`array of` elements are now allowed for OData V2, too.\" introduced with v2.2.0 has caused\n    regressions in various scenarios that used OData V4 processed CSN for OData V2 EDMX rendering. Therefore\n    the error has been lowered to a 'odata-spec-violation-array-of' warning.\n  + The fix 'Render constraints only if all principal keys are used in association' introduced with v2.2.2 has\n    caused regressions in mocking scenarios. With option `--odata-v2-partial-constr` partial constraint generation\n    can be reactivated. A 'odata-spec-violation-constraints' warning is raised.\n\n### 2.5.0 Addendum to Changed\n\n- Replace outdated option `length` with `defaultStringLength` which is usable in `for.*` and `to.*` APIs.\n\n\n## Version 2.2.4 - 2021-05-06\n\nNo changes compared to Version 2.2.2; fixes latest NPM tag\n\n## Version 2.2.2 - 2021-05-04\n\n### Fixed\n\n- Usually reserved names like `in` in references used as annotation values can now really\n  be provided without delimited identifiers (if the name is not `true`, `false` or `null`).\n- Fixed the implicit redirection of associations to scoped targets (like texts entities).\n- Fix regression: Allow virtual structured elements.\n- to.edm(x):\n  + OData V2:\n    + Remove warning about scalar return types.\n    + Render constraints only if all principal keys are used in association.\n  + OData V4: Don't remove `@Capabilities` annotations from containee.\n  + Allow `@Core.MediaType` on all types and raise a warning for those (scalar) types that can't be mapped to `Edm.String` or `Edm.Binary`.\n- to.cdl: Also handle subelement-annotations by rendering a `annotate X with Y`.\n- to.hdi/sql/hdbcds: Fixed the DB name (with naming mode `quoted`/`hdbcds`) and the `to.hdi` file name of scoped definitions (like `texts` entities)  in services.\n- Empty enums no longer result in a syntax error.\n\n## Version 2.2.0 - 2021-04-28\n\n### Added\n\n- The compiler now takes the “definition scope” of associations and compositions into account\n  when implicitly redirecting the target and auto-exposing entities.\n- odata: The warning `enum-value-ref` is no longer reclassified to an error.\n  However, references to other enum values are still not supported.\n\n### Changed\n\n- Remove special handling for implicit redirection to auto-exposed entity; consistently\n  do not overwrite user-specified target in a service anymore, also in this special case.\n- Structured/Arrayed types for enums are now an error and not just a warning.\n- to.cdl: Keywords in annotation paths are no longer escaped\n\n### Removed\n\n- Consistently reject references to auto-exposed entities except for `annotate`\n  (it might have worked before, depending on the sequence of definitions);\n  expose an entity manually if you want to refer to it.\n\n### Fixed\n\n- Do not omit indirectly annotated or redirected sub elements\n  during propagation of expanded sub elements.\n- Also auto-expose composition targets of projected compositions,\n  not just those target which were used at the original definition of the composition.\n- Improve checks for keys which are `array of` or of SAP HANA spatial type (`ST_POINT` & `ST_GEOMETRY`)\n  with checking also inside of used user-defined structured type.\n- to.edm(x):\n  + V2: `OnDelete=Cascade` was set on dependent instead on principal role.\n  + V4: ReferentialConstraints Property and ReferencedProperty for managed composition to one were swapped.\n\n### 2.2.6 Addendum to Changed\n\n- to.edm(x): Revert 2.1.0 change: \"`array of` elements are now allowed for OData V2, too.\"\n  OData V2 does not allow elements to be typed with `Collection()`. Any `many`\n  predicate in element definitions is rejected. The only two positions where the `many` predicate\n  is allowed are `association to many` and `returns many`.\n\n## Version 2.1.6 - 2021-04-14\n\n### Fixed\n\n- Do not unjustified complain about `$self` comparisons.\n- Auto-exposed entities are represented as projections in the CSN.\n- to.sql/to.hdi:\n  + Revert change \"Default values are no longer propagated from the principal to the generated foreign key element.\" from version 2.1.0\n  + Fix regression where localized convenience views for temporal entities used keys in the from clause that did not exist on the texts-entity\n  + Mixin associations are properly removed and are not rendered into views anymore\n- to.hdi(.migration): Ensure filenames for `.hdbindex` files stay compatible to V1\n- for.odata: An association as a type of action's parameter or return type now signals an error\n- to.edm(x):\n  + `@Capabilities` annotations remain on the containees entity type\n  + In containment mode don't render foreign keys of the containment constituting 'up' association in the containee\n    as primary key refs.\n  + Revert change \"Default values are no longer propagated from the principal to the generated foreign key element.\" from version 2.1.0\n  + Allow `--odata-proxies` and/or `--odata-x-service-refs` in combination with `--odata-format=flat` and `--version=v4`\n\n## Version 2.1.4 - 2021-03-31\n\n### Fixed\n\n- The postinstall step now never fails with an exit code != 0. As the postinstall step is optional, it should not break any `npm install` steps.\n\n## Version 2.1.2 - 2021-03-29\n\n### Fixed\n\n- ensure `postinstall` script is part of the shipped `package.json`\n\n## Version 2.1.0 - 2021-03-26\n\n### Added\n\n- Inferred sub elements of a referred structure type can be individually annotated.\n- All primitive types except for binary are now allowed as enum value types.\n- Allow users to define `A.B` even if there is a definition `A` which is not a context or service.\n- You can now provide almost all annotation assignments without delimited identifiers:\n  the use of `.`, `@` and `#` is fine for annotation names,\n  property names of structures, and in references used as annotation values.\n- for.odata:\n  + All the artifacts that have localized fields get a `$localized: true` property.\n  + Allow the user to define draft actions for annotation purposes\n    + `draftPrepare(SideEffectsQualifier: String) returns <ET>`,\n    + `draftActivate() returns <ET>`,\n    + `draftEdit(PreserveChanges: Boolean) returns <ET>`\n- to.edm(x):\n  + Warn about non-applicable annotations.\n  + Render property default values (only OData V4).\n  + Option `odataProxies` exposes association targets outside of the current service.\n    These `EntityType`s do only expose their primary keys have no accompanying `EntitySet`.\n    The added navigation targets are exposed under their namespace or if not available under namespace `root`.\n    `odataProxies` is only available with `--format=structured`.\n  + Option `odataXServiceRefs` renders an `edm:Reference` to the service for those navigation targets\n    that are defined in another service. `odataXServiceRefs` is only available with `--format=structured`.\n  + Duplicate EntityContainer entries with same name will raise an error.\n  + `array of` elements are now allowed for OData V2, too.\n- to.sql/hdi/hdbcds: Explicitly render the implicit alias for functions without arguments, e.g. `current_date`.\n- to.sql:\n  + Sort the SQL statements according to the deployment order.\n  + New sql dialect `plain`, which now is the default.\nsynchronously.\n- API:\n  + `compileSync()` is now compatible to `compile()`:\n    the function can also receive a file cache and will resolve all `using`s\n  + New API functions `parse.cql` (prefer it to deprecated `parseToCqn`) and\n    `parse.expr` (prefer it to deprecated `parseToExpr`)\n  + function `getArtifactCdsPersistenceName` now accepts a CSN as a third parameter (used to be a namespace). With a CSN provided,\n    the name can be correctly constructed for naming modes `quoted` and `hdbcds`. Without a CSN, the name is possibly wrong\n    if it contains dots. If the CSN is not provided or the third parameter is not a CSN, the old, deprecated, implementation is used.\n- `cdsc` and other client tools:\n  + Added `--with-localized` to the command `toCsn` which adds convenience views for localized entities to the output.\n  + A script `bin/cds_update_identifiers.js` was added. You can use it to update the delimited identifier style in your CDS sources.\n  + A script `bin/cdscv2m.js` was added.\n    It's command `ria` adds `@cds.redirection.target: false` annotate statements\n    for all ambiguous redirection errors.\n- Added `deprecated` options; setting any of them disables all `beta` options.\n\n### Changed\n\n- CSN representation:\n  + CSN Version is set to `2.0`\n  + CSN `definitions` are not sorted anymore\n  + `$syntax` is non-enumerable\n  + increase the use of JS numbers in the CSN for numbers in CDL, especially noticable in annotation values\n  + Annotation definitions are to be found in the top-level property `vocabularies`.\n  + Introduce `kind: 'aspect'` to replace `kind: 'type', $syntax: 'aspect'` and\n    `kind: 'entity', abstract: true` (the deprecated variants are still accepted as input).\n  + Projections are rendered via `projection` instead of `query.SELECT`.\n  + Parentheses are represented structurally and unnecessary parentheses are omitted.\n  + Use `.` instead of `_` for the name suffix of generated texts entities and the calculated entity for managed compositions.\n  + The CSN returned by `compile()` does not include localized convenience views anymore.\n- Core engine (function `compile`):\n  + An assignment `@Foo.Bar` is always `@Foo.Bar`, we do not try to search anymore\n    for a local definition of `Foo` probably having a different full name.\n  + Localized convenience views are no longer generated by the core compiler but added by the `for.odata`\n    and `to.sql/hdi/hdbcds` processing on demand.\n  + Minimize name clashes when calculating names for autoexposed entities,\n    extends the v1 option `dependentAutoexposed` to sub artifacts of entites (see “Added”).\n  + Ambiguities when redirecting associations now always lead to compile errors;\n    you might want to use the new annotation `@cds.redirection.target` to solve them.\n  + The association `up_` in the calculated entity for managed compositions is now managed.  \n    _Limitation_: Nested managed compositions are not activatable via `to.hdbcds --names=hdbcds`.\n  + Bound actions and functions are no longer propagated from the main query source to the resulting view or projection.\n  + Remove annotation `@cds.autoexpose` from generated `.texts` entity\n  + Require `order by` references to start with a table alias when referring to source elements.\n  + Infer the type of a `select` item from the type of a top-level `cast`.\n- Localized convenience views now also contain `masked` elements of the original artifact.\n- for.odata:\n  + Even with `--format: structured`, (flat) foreign keys for managed associations are generated.\n  + An `entity` or an `aspect` defined outside the current service cannot be used as action parameter or return types.\n  + Structured elements are expanded in-place.\n  + Foreign keys for managed associations are created in-place.\n- to.edm(x):\n  + An `Edm.TypeDefinition` is rendered for a derived scalar type and used as type reference instead of\n    rendering the final scalar type, including the `array of`/`many` predicates.\n  + `enum` type definition as service member is rendered as `edm:TypeDefinition` instead of `edm:EnumType`.\n  + Set default source cardinality of compositions to exact one. This is observable in V2 EDM only.\n  + Key must not be `nullable=true`, this includes all sub elements of used structured types.\n  + Default values are no longer propagated from the principal to the generated foreign key element.\n  + `array of array` is rejected, nested Collections `Collection(Collection(...))` are illegal.\n  + Temporal rendering:\n    + `@cds.valid.from` is not `Edm.KeyRef` anymore.\n    + `@cds.valid.key` is rendered as `@Core.AlternateKeys`.\n  + Downgrade message \"`<Term>` is not applied\" from warning to info.\n  + Update Vocabularies 'Aggregation', 'Capabilities', 'Core', 'Validation'.\n- to.sql/to.hdi/to.hdbcds:\n  + Reject using associations or compositions in query elements starting with `$self` or `$projection`.\n  + Virtual elements are not rendered.\n  + Structured elements are expanded in-place.\n  + Foreign keys for managed associations are created in-place.\n  + Implicit/CDL-style casts are not rendered as SQL CASTs.\n  + All association usages in queries are always translated into JOIN expressions\n    (except for to.hdbcds `--names=hdbcds`).\n- to.sql/to.hdi:\n  + Downgrade message `to-many-no-on` from error to warning.\n  + Default values are no longer propagated from the principal to the generated foreign key element.\n- to.sql:\n  + Changed type mappings for `--dialect=sqlite`:\n    + `cds.Date` -> `DATE_TEXT`\n    + `cds.Time` -> `TIME_TEXT`\n    + `cds.Timestamp` -> `TIMESTAMP_TEXT`\n    + `cds.DateTime` -> `TIMESTAMP_TEXT`\n    + `cds.Binary` -> `BINARY_BLOB`\n    + `cds.hana.Binary` -> `BINARY_BLOB`\n  + Don't check missing type facets.\n- to.hdbcds:\n  + References to derived, primitive types are replaced by their final type.\n    The derived type definitions are not rendered anymore for hdbcds naming mode.\n  + Don't check missing type facets in views.\n- to.cdl:\n  + Render maximum cardinality as 'to one' or 'to many'.\n  + Return at most two files. The first one (named `model.cds`) contains all definitions, simply rendered in order,\n    without namespaces or usings. Contexts and services are NOT nested. The second file (named `<namespace>.cds`)\n    represents the CSN `namespace` property, simply defining such a namespace and requiring the first file.\n- API changes:\n  + The API functions `compile()` and `compileSync()` return a CSN and not an XSN,\n    `compactModel()` returns the first argument.\n  + If `options` does not provide a `messages` property, all messages are printed to standard error.\n  + The `options.messages` is kept throughout the compiler and contains all messages from the compiler and all backends.\n  + Messages are not sorted anymore; use the API function `sortMessages` to have it sorted.\n\n### Removed\n\n- Core engine (function `compile`):\n  + Referential integrity issues now always lead to compile errors.\n  + The `type of` operator (without `:` in the reference) cannot be used\n    for parameters and inside queries anymore.\n  + Using `\"…\"` for delimited identifiers leads to a compile error.\n  + Issue an error for “smart artifact references”, i.e.\n    when using `Definition.elem` instead of `Definition:elem`\n  + The definition of annotations is no longer allowed in `context`s and `service`s.\n  + Providing an alias name without `as` leads to a compile error or warning.\n  + Providing unexpected kind of definitions for `type` or other references leads to a compile error.\n  + The ancient CSN 0.1.0 format generation has been removed.\n  + The compiler does no longer look for modules whose file extension is `.csn.json`,\n    both `.csn` and `.json` is still checked.\n- for.odata:\n  + With `--format: structured`, the property `$generatedFieldName` in keys of\n    managed associations has been removed.\n  + Artificially exposed types that are required to make a service self contained are\n    removed from the OData processed CSN.\n  + Localized convenience views are no longer part of the OData CSN.\n- API changes:\n  + The deprecated XSN based transformers `forHana`, `forOdata`, `toSwagger`, `toSql`, `toCsn`, `toCdl`\n    have now been removed from the code base.\n  + Remove `collectSources()` as well as `options.collectSources`.\n  + A `CompilationError` usually does not have the property `model` anymore,\n    to avoid potential memory issues.\n  + CSN compiler messages no longer have a `location` property. Use `$location` instead.\n- The following `cdsc` options have been removed:\n  + `--old-transformers`.\n  + `--hana-flavor` with all corresponding rudimentarily implemented language constructs.\n  + `--new-resolve` (the new resolver is now the default).\n\n### Fixed\n\n- Core engine (function `compile`):\n  + Managed composition in sub elements are now properly redirected,\n    even if the sub structure comes from a referred type.\n  + Do not dump with sub queries in the `on` condition of `join`s.\n  + Properly report that managed aspect composition inside types and as sub elements\n    are not supported yet.\n  + Make sure that including elements with managed aspect compositions only\n    use the provided target aspect, but not the generated target entity.\n  + Properly handle the extra keywords in the third argument of the HANA SQL function `round`.\n- to.edm(x):\n  + Return all warnings to the user.\n  + Don't render references and annotations for unexposed associations.\n  + Rendering of `@Validation.AllowedValue` for elements of type enum annotated with `@assert.range`:\n    + Add `@Core.Description`, if the enum symbol has a `@Core.Description`, `@description` or document comments.\n  + Primary key aliases are now the path basenames, colliding aliases are numbered.\n  + Fix a bug in constraint calculation if principal has no primary keys.\n  + Illegal OData identifiers which are not exposed in the generated edmx schema are not causing errors anymore.\n  + Improve non-enum value handling on term definitions based on an enum type by raising a warning and rendering\n    the value with appropriate scalar EDM type.\n  + Render annotion qualifier in JSON format.\n- to.sql/hdi/hdbcds:\n  + Reject structured view parameters for HANA.\n  + Types are not rendered anymore for HANA in quoted mode.\n  + Structured elements in subqueries are now properly expanded.\n  + Actions, functions, annotations and events do not have DB specific checks run on them, as\n    they will not be part of the resulting artifacts anyways\n  + With `--names=quoted` or `hdbcds`, some `.` in artifact names are turned into `_`.\n    In general, this happens when part of the name prefix is \"shadowed\" by a non-context/service;\n    any `.` after that point is turned into `_`. This change also affects the filenames and the\n    `@cds.persistence.name` annotation in the CSN returned by `to.hdi.migration` and `for.odata`.\n- to.sql/hdi:\n  + Fixed a bug which led to an exception if elements were referenced as types.\n  + For the SQLite dialect, date, time and timestamp are rendered as simple string literals instead of function calls.\n  + For naming mode \"plain\", date, time and timestamps are rendered as SQL-compliant literals.\n- to.sql/hdbcds: Fix issue which led to wrong ON conditions for naming mode `hdbcds`.\n- to.sql:\n  + SRID of SAP HANA spatial type (`ST_POINT` & `ST_GEOMETRY`) is not rendered as the length of `CHAR`\n    for SQL-dialects other than `hana`. The resulting `CHAR` has a default length of 2000.\n- to.hdbcds:\n  + Nullability constraints on view parameters are not rendered anymore.\n  + CDS and HANA CDS types inside cast expressions are mapped to their SQL-counterparts, as the CDS types can't be used in a cast.\n- to.cdl: Correctly render `event` typed as `projection`.\n- to.hdi.migration: Don't generate `ALTER` for type change from association to composition or vice versa (if the rest stays the same),\n  as the resulting SQL is  identical.\n\n## Version 1.50.10 - 2021-07-30\n\n### Fixed\n\n- to.hdi.migration: Check for incompatible CSN versions to avoid wrongly generated ALTER|DROP|ADD statements.\n\n## Version 1.50.8 - 2021-07-01\n\n### Fixed\n\n- to.hdi.migration: Don't generate `ALTER` for type change from association to composition or vice versa (if the rest stays the same), as the resulting SQL is identical.\n\n## Version 1.50.6 - 2021-05-05\n\n### Fixed\n\n- to.edm(x):\n  + OData V2: Render constraints only if all principal keys are used in association.\n  + OData V4: Don't remove `@Capabilities` annotations from containee.\n  + Allow `@Core.MediaType` on all types and raise a warning for those (scalar) types that can't be mapped to `Edm.String` or `Edm.Binary`.\n\n## Version 1.50.4 - 2021-04-06\n\n### Fixed\n\n- to.hdbcds: CDS and HANA CDS types inside cast expressions are mapped to their SQL-counterparts, as the CDS types can't be used in a cast.\n\n## Version 1.50.2 - 2021-03-19\n\n### Fixed\n\n- Correct calculation of dependent autoexposed entity name\n  (fixing a potential regression with v1.50.0)\n- to.hdi.migration: Correctly handle \"temporal\" and other cases when rendering expressions\n- to.edm(x):\n  + Improve non-enum value handling on Oasis enum term definitions by raising a warning and rendering\n    the value with appropriate scalar EDM type.\n  + Render annotion qualifier in JSON format.\n- Update OData vocabularies\n  'Aggregation', 'Analytics', 'Capabilities', 'CodeList', 'Common', 'Communication',\n  'Core', 'Graph', 'HTML5', 'ODM', 'PersonalData', 'Session', 'UI'\n\n## Version 1.50.0 - 2021-02-25\n\n### Added\n\n- Introduce annotation `@cds.redirection.target`.\n  With value `false`, the projection is not considered an implicit redirection target;\n  with value `true`, is is considered a “preferred” redirection target.\n\n## Version 1.49.2 - 2021-02-16\n\n### Fixed\n\n- to.edm(x): Illegal OData identifiers which are not exposed in the generated edmx schema are not causing errors anymore.\n- to.cdl: Annotations are now rendered with the new delimited Identifier syntax\n- to.sql/hdi:\n  + Fixed a bug which led to an exception if elements were referenced as types.\n  + For the SQLite dialect, date, time and timestamp are rendered as simple string literals instead of function calls.\n  + For naming mode \"plain\", date, time and timestamps are rendered as SQL-compliant literals.\n\n## Version 1.49.0 - 2021-01-29\n\n### Added\n\n- to.hdi/sql:\n  + Updated the list of reserved keywords for HANA and SQLite\n  + Use \"smart quoting\" for naming mode \"plain\" - automatically quote reserved keywords\n- to.hdi.migration:\n  + Supports various kinds of entity changes: entity addition/deletion/change (the latter including element additions/deletions/type changes).\n  + Provides option to render any element type change as `ALTER TABLE DROP` to prevent deployment issues due to incompatible data\n    (default for length reductions or association/composition changes).\n- to.cdl: Smart artifact references are now rendered explicitly via `:` notation\n\n### Changed\n\n- OData/EDMX:\n  Change the `EntityType` precedence of the OData term definition `AppliesTo=` attribute. If `AppliesTo` contains\n  both `EntityType` and `EntitySet`, the annotation was assigned to the entity type. Extending an\n  `AppliesTo=[EntitySet]` with `EntityType` would be OData compliant but incompatible for clients\n  which still expect the annotation at the set and do not perform the full lookup.\n  With this change, `EntitySet` and `EntityType` are treated individually, effectively annotating the type and\n  (if available) the set. This fixes both extendability and client behavior.\n\n### Fixed\n\n- Structured foreign key and forward association reference paths used in ON condition definitions\n  are now translatable into the correct short form ON condition paths in Association to Join translation.\n- to.hdbcds: Aliased mixin-associations are now handled correctly\n\n## Version 1.48.0 - 2021-01-15\n\n### Changed\n\n- to.hdbcds/hdi/sql: Reject using associations or compositions in query elements starting with `$self` or `$projection`.\n- OData: Update vocabularies 'Common', 'PersonalData', 'UI'.\n\n### Fixed\n\n- Using a hex literal like `x'D028'` (in a CSN input) could lead to an error.\n- for.odata:\n  + Fix a bug in constraint calculation if principal has no primary keys.\n  + Don't overwrite user defined `@Core.Computed` annotation.\n- to.hdi/sql/hdbcds: Fixed a bug during processing of skipped/otherwise not db-relevant artifacts.\n\n## Version 1.47.0 - 2020-12-11\n\n### Changed\n\n- Update vocabularies 'Aggregation', 'Common'\n\n### Fixed\n\n- to.hdbcds/hdi/sql:\n  + Types are not rendered anymore for SAP HANA in quoted mode.\n  + Aliases are now respected when resolving $self\n  + Association clones are now pre-pended with three underscores (`_`) instead of two\n    to prevent shadowing of context names or usings\n\n## Version 1.46.6 - 2020-12-01\n\n### Fixed\n\n- OData identifiers can now include all unicode characters which are described in the OData specification.\n\n## Version 1.46.4 - 2020-11-28\n\n### Fixed\n\n- Association to Join translation: Fix using forward association target as table alias in ON condition.\n\n## Version 1.46.2 - 2020-11-20\n\n### Fixed\n\n- to.edm(x) Fix a bug in the alias calculation for key references in structured OData.\n\n## Version 1.46.0 - 2020-11-20\n\n### Changed\n\n- to.edm(x):\n  + V4 structured key ref path aliases are now the basenames, colliding aliases are numbered.\n  + Lower level to `info` for \"‹Term› is not applied\" message if an annotation cannot be applied.\n- OData:\n  + Update vocabulary 'UI'\n  + Correctly handle `not null` during flattening. Only if the parent and all subelements in the chain\n  are `not null`, make the corresponding flat leaf element `not null`.\n\n### Fixed\n\n- Do not consider events to be potential targets for implicit redirections:\n  strange warnings for multiple projections or other strange errors disappear.\n- to.hdbcds/hdi/sql:\n  + Reject structured view parameters for HANA.\n  + Correctly handle `not null` during flattening.\n  Only if the parent and all subelements in the chain are `not null`, make the corresponding flat leaf element `not null`.\n- to.edm(x): Render @assert.range enum annotations correctly (enum symbol as value and don't omit zero value).\n- Fixed CDS module resolution with option `newResolve` on Windows where a superfluous `\\` was prepended to absolute paths.\n\n## Version 1.45.0 - 2020-10-30\n\n### Added\n\n- OData: Warn about non-applicable annotations.\n\n### Changed\n\n- A warning is emitted for annotation definitions inside services/contexts as this won't be\n  allowed in the next major cds-compiler release.\n- OData: Update vocabularies 'Analytics' and 'Common'.\n\n### Fixed\n\n- Association to Join translation: Fill empty select blocks with aliased columns.\n- to.edm(x):\n  + Some EDM(x) warnings were not properly passed to the user.\n  + Don't render references and annotations for unexposed associations.\n- to.hdbcds: Warnings during rendering of the hdbcds were not raised to the user.\n- Issue which led to wrong on-conditions for `hdbcds` naming mode.\n\n## Version 1.44.4 - 2020-10-16\n\n### Fixed\n\n- to.hdbcds/hdi/sql: The processing of managed associations as foreign keys now works regardless of the order in which the possible chains are resolved.\n- OData: Namespaces are brought back into the exposed types. Dots are replaced with underscores in the name.\n\n## Version 1.44.2 - 2020-10-09\n\n### Added\n\n- OData: The annotations `@assert.format` and `@assert.range` now result in adding the\n  `@Validation.Pattern` and `@Validation.AllowedValues` in the resulting EDMX.\n- A new compiler option `newResolve` is added (`--new-resolve` for `cdsc`).  When set to `true` a new\n  module resolver is used which needs fewer file lookups. It will become the default in the future.\n- Event definitions can be typed with a reference to an event.\n- When the new option `withLocation` is set,\n  the property `$location` in the CSN is enumerable instead of non-enumerable;\n  the value of `$location` is an object with sub properties `file`, `line` and `col`\n  which describes the source position of all definitions, elements and other members.\n\n### Changed\n\n- OData:\n  + The `namespace` is now not part of the exposed type's name.\n  + Update vocabularies 'Aggregation', 'UI' and 'Validation'.\n\n## Version 1.43.0 - 2020-10-02\n\n### Added\n\n- The magic variable `$session` is now supported. All element accesses are unchecked.\n- Reference paths as annotation values can now contain identifiers starting with `@`.\n\n### Changed\n\n- OData:\n  + Raise message level for illegal OData identifiers from warning to error.\n  + Update vocabularies 'Aggregation' and 'Common'.\n  \n### Fixed\n\n- to.hdi/hdbcds/sql: Correctly process the elements of subqueries in localized view variants\n\n### Removed\n\n### Fixed\n\n- OData: put default value validation under `beta:odataDefaultValues`\n\n## Version 1.42.2 - 2020-09-29\n\n### Fixed\n\n- CDL: Action blocks can now be empty, e.g. `entity E {…} actions { }`.\n- An info message is emitted if builtin types are annotated.  Use a custom type instead.\n  Annotating builtins in CDL is possible but when transformed into CSN the annotation was silently lost.\n  It is now put into the \"extensions\" property of the CSN.\n- Fixed `cast()` for simple values like numbers and strings.\n\n- to.sql:\n  + Remove simple default value checks and allow the database to reject default values upon activation.\n  + Render empty actual parameter list when selecting from a view with parameters which are fully covered with\n  default values and no actual parameters are provided in the query itself.\n\n- OData:  \n  + Correctly render unary operator of default values in EDM.\n\n## Version 1.42.0 - 2020-09-25\n\n### Added\n\n- The compiler now supports the `cast(element as Type)` function in queries.\n  Using this function will also result in a `CAST` SQL function call.\n- A top-level property `i18n` is now supported. The property can contain translated texts.\n  The compiler expects its entries to be objects where each text value is a string.\n- CDL: Empty selection lists in views/projections are now allowed and make it possible to extend\n  empty projections. Note that views/projections without any elements are not deployable.\n- For CSNs as input, the compiler returns properties as they are (without checks)\n  if their name does not match the regexp `/[_$]?[a-zA-Z]+[0-9]*/` and does not start with `@`.\n  With more than one CSN input,\n  the compiler only returns the top-level CSN properties of the first source.\n\n### Changed\n\n- to.cdl: Smart type references are now explicitly rendered via \":\"-syntax\n\n### Removed\n\n### Fixed\n\n- Annotating an _unknown_ element _twice_ now results in a duplicate annotation error instead\n  of silently loosing the annotation.\n- Service/context extensions that reference a non-service/non-context now result in a compiler error\n  instead of silently loosing the context/service extension.\n- to.hdbcds/sql/hdi:\n  + fix a bug, which resulted in a malformed on-condition, if an association key\n  was another association pointing to an entitiy with a structured key.\n  + in conjunction with assoc-to-joins, the internal CSN reference broke\n  causing missing locations and even internal errors when logging messages\n  + managed associations in UNION are now correctly processed\n- The parseCdl mode now correctly resolves type arguments of \"many\" types.\n- OData: The annotation `@Capabilities.Readable` is now correctly\n  translated to `@Capabilities.ReadRestrictions.Readable`.\n\n## Version 1.41.4 - 2020-09-18\n\n### Removed\n\n- The length of HANA identifiers are not checked anymore: no more warnings are issued for long identifiers.\n\n### Fixed\n\n- The check for ignored \"localized\" keywords in sub-elements has been extended to also\n  include references to structured types.  \n- A warning was added if views/projections are used as element types.\n- An info message is emitted if a namespace is annotated.  \n  Annotating namespaces is not possible. Previously the annotation was silently lost.\n  It is now put into the \"extensions\" property of the CSN.\n\n## Version 1.41.2 - 2020-09-15\n\n### Fixed\n\n- OData: correctly render primary key associations targeting a composition parent but are not\n  the composition enabling association.\n- to.hdbcds/sql/hdi: Do not dump if artifact doesn't exist anymore after association to join translation\n- Only check for unmanaged associations inside of \"many\"/\"array of\" in the elements of views and entities,\n  not inside of actions and other members.\n\n## Version 1.41.0 - 2020-09-11\n\n### Added\n\n- OData: Allow the relational comparison of structures or managed associations in an ON condition as described in\n  version 1.32.0 - 2020-07-10 (forHana).\n- Allow `Struct:elem` with and without preceeding `type of` as type reference.\n\n### Fixed\n\n- to.cdl: Only render enums if they were directly defined there\n- The parseCdl mode now checks for redefinitions to avoid generating invalid CSN.\n- OData: An error is thrown if a redirected target has fewer keys than the original one.\n- OData: Empty structured elements are now handled correctly in `flat` format.\n\n## Version 1.40.0 - 2020-09-04\n\n### Added\n\n- to.hdi/sql: Support default values for view parameters.\n- OData: lower message severity from Error to Warning for\n  `<entity type> has no primary key` and `<type> has no properties`.\n\n### Changed\n\n- OData: The foreign key references in associations are not flattened any more with format `structured`.\n\n### Fixed\n\n- parse.cdl: Properly handle type arguments, most likely relevant for HANA types.\n- OData: Multilevel anonymously defined `composition of <aspect>` is now processed successfully with the OData backend.\n- OData: Fix a bug in EDM generation that caused a dump.\n- Update ANTLR dependency to version 4.8.\n\n## Version 1.39.0 - 2020-08-26\n\n### Added\n\n- If the first CDS source (CDL or CSN) provided to the compiler\n  has a `namespace` declaration/property, then\n  that namespace name is put into the property `namespace` of the returned CSN.\n- An event payload type can now be defined with a type/entity reference or\n  or projection (instead of providing the elements directly).\n- Aspects can now be included when specifying the elements of an event payload type,\n  as it is known for type, entity and aspect definitions.\n\n### Fixed\n\n- Fix a bug in explicit JOIN cardinality CDL parsing\n- to.hdbcds/hdi/sql: Identifiers are checked and warnings are raised if the identifier exceeds a length limitation which would result in a deployment error.\n- OData: Service, entity and element identifiers are checked and warnings are raised if an identifier is not compliant with the OData specification.\n\n## Version 1.38.0 - 2020-08-25\n\n### Changed\n\n- CSN: The property `payload` of an `event` has been renamed to `elements`.\n\n### Fixed\n\n- to.hdbcds/hdi/sql: Correctly handle local-scope refs in on-conditions when flattening structures.\n- Run checks for associations inside of `many` or `array of` only on entities and views.\n\n\n## Version 1.37.0 - 2020-08-21\n\n### Added\n\n- Projections columns can now use expressions like select items,\n  both for `entity … as projection on` and `extend projection … with`.\n- OData: `array of <structure>` or `many <structure>` is now allowed in OData V4, flat format.\n\n### Changed\n\n- to.hdbcds/hdi/sql:\n  + Messages of id \"query-no-undefined\" are now raised as errors.\n  + Aspects/types/abstract entities containing anonymous aspect compositions\n    must not be used as types and are removed during transformation.\n\n### Fixed\n\n- to.cdl: Events are rendered.\n- to.cds: Anonymous aspect composition are now rendered correctly.\n- to.hdbcds/hdi/sql:\n  + Events are ignored.\n  + local-scope references in on-conditions are now handled correctly during flattening.\n  + Removed duplicate messages.\n- A model with multilevel `composition of <aspect>` (spread across several aspect declarations,\n  composing one another) is now processed successfully with the OData backend.\n- The CSN parser supports explicit join cardinalities.\n- Prefix a `@assert.unique` table constraint with the table name to avoid name clashes.\n\n\n## Version 1.36.0 - 2020-08-07\n\n### Added\n\n- Query select items can now be declared to be virtual.\n\n- CQL now allows to specify a join cardinality. Allowed are any combinations of  \n  `{ [ EXACT ] ONE | MANY } TO { [ EXACT ] ONE | MANY }` for  \n  `{ INNER | { LEFT | RIGHT | FULL } [ OUTER ] }` joins.  \n  The cardinality is added in the for HANA generated `CREATE VIEW` statements.\n\n- Support the creation of unique constraints by assigning `@assert.unique.<constraintName>` to\n  non-query entities or query entities annotated with `@cds.persistence.table`. The value of the\n  annotation is an array of paths referring to elements in the entity. The path leaf may\n  be an element of a scalar, structured or managed association type. Individual foreign keys or\n  unmanaged associations can not be accessed. In case the path points to a structured element,\n  the unique constraint will contain all columns stemming from the structured type. In case\n  the path points to a managed association, the unique constraint will contain all foreign key\n  columns stemming from this managed association.\n  For HANA a `UNIQUE INVERTED INDEX` and for SQLite a `named unique table constraint` is generated.\n\n### Changed\n\n- OData: Update vocabularies 'Common', 'UI'\n- The association to join transformation treats foreign key accesses with priority. If a foreign key\n  of a managed association can be accessed without joins, no joins are generated.\n  The priority handling can be turned of with option `joinfk`.\n\n### Fixed\n\n- Semantic location in messages is now more precise.\n\n## Version 1.35.0 - 2020-07-31\n\n### Added\n\n- Introduce option `localizedLanguageFallback`; if set to value `\"none\"`, the localized\n  convenience views do not use function `coalesce` to select from a default text as fallback.\n\n### Fixed\n\n- Properly consider targets of compositions in `mixin`s to be autoexposed.\n- Uniformly limit propagation of `@cds.autoexposed`, i.e.\n  there is not inheritance from a query source navigating along an association.\n  Previously, compiling a compiled model could lead to new autoexposed entities.\n- OData:\n  + V2: Distribute various `@sap` specific annotations to the entity container.\n  + Always set attribute `Nullable` on properties of type `Collection()`.\n\n## Version 1.34.0 - 2020-07-27\n\n### Fixed\n\n- Do not dump with illegal references in explicit `on` conditions of redirections;\n  properly report them via error messages.\n\n## Version 1.33.0 - 2020-07-24\n\n### Added\n\n- Allow to declare `many/array of` elements, parameters and return types to be `(not) null`.\n  The nullability applies to the array items of the element, not the element itself.\n- New boolean option `dependentAutoexposed` to avoid name clashes in dependent\n  autoexposed entities (text entities, components of managed compositions).\n- cdsc: Add toOdata version 'v4x' to combine `{ version: 'v4', odataFormat: 'structured', odataContainment: true }`.\n\n### Changed\n\n- OData:\n  + Update vocabularies 'Common', 'Core', 'ODM'.\n  + The default nullability for collection value properties is `false`, indicating that the returned collection must\n    not contain null value entries.\n- toCdl: Identifiers are now quoted with `![` and `]`. Inner `]` characters are escaped with `]]`.\n- toCdl/toSql: Function names containing non standard HANA identifier characters are rendered case preserving and quoted\n  if an appropriate naming mode has been set in the options.\n\n### Fixed\n\n- forHana: Correctly flatten managed associations as foreign keys used in the definition.\n  of another managed association.\n- OData: Don't render aspects as `edm.ComplexType`.\n\n## Version 1.32.0 - 2020-07-10\n\n### Added\n\n- Provide semantic code completion for elements, enums, actions and parameters\n  in `annotate` and `extend`.\n- forHana: Allow the relational comparison of structures or managed associations in an ON condition.  \n  Both operands must be structurally compatible, that is both structures must be expandable\n  to an identical set of leaf paths. Each leaf path must terminate on a builtin CDS scalar type.\n  The original relational term of the form `s1 op s2` is replaced by the resulting expression\n  `s1.leafpath_0 op s2.leafpath_0 (AND s1.leafpath_i op s2.leafpath_i)*` with `i < n leaf paths`.\n\n### Changed\n\n- toCdl: String enums without a value are no longer rendered with their name's string representation as their value.\n\n### Fixed\n\n- parseCdl: Fix missing extensions in files that extend unknown services/contexts.\n- OData: Do not render an EDM document in case of raised errors\n- to.cdl: Aspects are now correctly rendered as aspects and not as types\n\n## Version 1.31.2 - 2020-07-03\n\n### Fixed\n\n- HANA/SQLite: Correctly handle already resolved types when a cds.linked CSN is passed in\n- HANA/SQLite: Ensure that all elements in a Draft are non-virtual\n\n## Version 1.31.0 - 2020-06-26\n\n### Added\n\n- forHana/toSql: A (proxy) entity representing a HANA User Defined Function or a HANA Calculation View\n  can now be annotated with `@cds.persistence { udf, calcview }` so that queries to these artifacts are\n  rendered with the appropriate parameter lists. Parameters for HANA Calculation Views are decorated with\n  `PLACEHOLDER.\"$$<id>$$\"`. HANA User Defined Functions without arguments require an empty argument\n  list `()` as part of the query source.  \n  Entities that are assigned with `@cds.persistence { udf, calcview }` cannot contain associations or act as\n  association targets, even if they have no defined parameter list.  \n  Multiple assignments of `@cds.persistence { table, udf, calcview }` to the same entity are rejected.\n- OData V4: Elements with type `array of <scalar type>` are now supported in flat mode\n\n### Changed\n\n- Option `beta` now only works with selective feature flags. Instead of `beta: true`, a dictionary of `<feature>: true` is expected. Available feature flags are:\n  1. subElemRedirections\n  2. keyRefError\n  3. aspectCompositions\n  4. odataProxies\n  5. uniqueconstraints\n- OData V4: Unmanaged associations/compositions with a target cardinality of exactly one (that is `[1..1]`)\n  are rendered as `edmx:NavigationProperty` with attribute `Nullable=\"false\"`\n- OData: On-condition checks are now performed when generating OData as well.\n- SQLite: The property length for string parameters is not longer restricted to 5000 characters.\n- HANA/SQLite: Improved the error message when an entity without elements is found to make it clearer what is expected.\n\n### Fixed\n\n- An error is emitted if parameters in functions/actions have a default value as it is not yet supported.\n  For example by using `type of E:element` where `element` has a default value.\n- OData V2: Derived scalar types are not rendered as `<edmx:TypeDefinition>`, so no annotation assignments to\n  such carriers must be rendered.\n- HANA/SQLite: Fixed a bug when flattening structured elements - instead of a human-readable error, an exception was thrown.\n\n## Version 1.30.0 - 2020-06-12\n\n### Added\n\n- Projections can now have `where` and `group by`/`having` clauses.\n\n### Changed\n\n### Fixed\n\n- `doc` comments in CDL now support Windows-style line breaks (CRLF). They are replaced with `\\n` in CSN.\n- `toCdl` no longer renders a `*` column if no columns are used in the original source.\n- Types that have both `type` and `items`/`elements` properties in CSN are now checked to avoid\n  mismatches if a unstructured / non-arrayed type is referenced but `items`/`elements` exists.\n- OData:\n  + Correctly render CRLF and LF to __&#xa;__ in EDMX\n\n## Version 1.29.0 - 2020-06-08\n\n### Added\n\n- Projections can now have `limit` and `order by` clauses.\n\n### Changed\n\n- OData: Update vocabularies 'CodeList', 'Common', 'Graph', 'UI'\n\n### Fixed\n\n- Memory usage improvement - compile messages with id `ref-undefined-excluding` uses much less memory.\n\n- HANA/SQL: Validate ON conditions of mixin association definitions in all subqueries\n\n- OData V2: Assign various `@sap` annotations to the `<edmx:EnitySet>` and `<edmx:AssociationSet>`\n  if such annotations are assigned to CDS entities or associations.\n\n- OData V4 Structured: Omit foreign keys of managed associations that establish the containment relationship to\n  a container, if this association was declared to be primary key.\n\n- OData: Warn about non-integer enums as they are not supported by OData, yet.\n\n- Warn about string values in integer enums and vice versa.\n\n## Version 1.28.0 - 2020-05-27\n\n### Added\n\n- API: add `getArtifactCdsPersistenceName()` and `getElementCdsPersistenceName()` which return\n  the value of annotation `@cds.persistence.name` for the corresponding artifact/element.\n\n### Changed\n\n- Issue error if old backends are used with beta mode.\n- Raise severity of message `Unmanaged associations cannot be used as primary key` with id `unmanaged-as-key` to error.\n\n### Fixed\n\n- OData:\n  + Render vocabulary `<edmx:Reference>` and `<edmx:Include>` if vocabulary namespace was used.\n  + Reduce memory consumption in EDM Renderer.\n  + Render annotations for navigation properties if association is annotated with `@cds.api.ignore: true`.\n\n## Version 1.27.0 - 2020-05-15\n\n### Added\n\n### Changed\n\n- Improve warning messages for integer enum missing a value and chained array of.\n- HANA/SQL\n  + Empty structures are not allowed as foreign keys.\n- Report a warning for integer enum elements that do not have values.\n- Report a warning for enums that are not integer- or string-like.\n- OData\n  + Update vocabularies 'Common', 'Core', 'Validation'\n  + Pass through structures without elements\n  + `cds.Decimal` and `cds.DecimalFloat` (deprecated) without precision/scale are rendered\n    as `Edm.Decimal` with `Scale=variable` (V4) and `sap:variable-scale=\"true\"` (V2)\n\n### Fixed\n\n- Memory usage improvement - compile messages do not inherit from Error any more.\n- HANA types in annotation assignments work again.\n- HANA/SQL: Correctly handle temporal in conjunction with namespaces.\n- Fix a bug in Association to Join translation that prevents exposing managed associations via subqueries.\n\n### Removed\n\n## Version 1.26.4 - 2020-05-08\n\n### Added\n\n- Add new OData vocabulary `com.sap.vocabularies.HTML5.v1`\n\n### Changed\n\n- Report a warning when a deprecated non-snapi backend (OData, HANA/SQL) is called.\n\n- OData:\n  + Update vocabulary 'UI'\n  + Add annotation `@Common.Label: '{i18n>Draft_DraftAdministrativeData}'` to entity `DraftAdministrativeData`\n  + Improve info message for target mismatch on associations that are compared with $self\n\n### Fixed\n\n- The CSN `val` property is now allowed in enum element extensions. Such CSN can be\n  generated using the `parseCdl` mode and it is now compilable.\n\n- Again allow negative values as enum values, fixing a regression introduced with v1.24.6.\n\n- OData: Correctly handle associations in arrayed elements (keyword `many`).\n\n- Annotation assignment checks now recognize HANA types.\n\n## Version 1.26.2 - 2020-04-24\n\n### Added\n\n- The client tool `cdsc` has got a new option `--beta <list>` which may be used to\n  specify a comma separated list of experimental features to be enabled.\n  \n- CSN in parse-cdl mode now has a `requires` property that represents `using`s from CDL.\n\n### Fixed\n\n- OData:\n  + Change foreign key creation order for associations to respect their dependencies.\n  + Use correct path during on-condition flattening.\n  + Report error when using elements without types for **array of type of (element)** and similar definitions.\n\n- HANA/SQL:\n  + Fix references to `null` enum values in default clauses.\n  \n- Type arguments are now properly set in CSN when using parse-cdl mode.\n\n- Avoid unjust warning if the `extensions` property of an input CSN contain `extend` statements.\n\n## Version 1.26.0 - 2020-04-17\n\n### Added\n\n- The client tool `cdsc` has got a new command `parseCdl` which returns a CSN\n  that is close to the original CDL file. It does not resolve imports and does\n  not apply extensions.\n\n- Unmanaged associations as primary keys are now warned about.\n\n- `localized` in combination with `key` is now warned about.\n\n- Enum values are now checked to only be either numbers or a strings - a warning is raised.\n\n- Elements in mixin clauses that are _not_ unmanaged associations now produce an error.\n\n### Changed\n\n- HANA/SQL:\n  + Raise warnings `rewrite-not-supported` and `rewrite-undefined-key` to errors.\n\n- Compiler: Empty elements are now kept along for the propagation.\n\n- OData: Annotate all elements of `DraftAdministrativeData` with `@Common.Label: '{i18n>\"Draft_<elementName>\"}'`\n  and elements  'DraftUUID', 'DraftIsCreatedByMe' and 'DraftIsProcessedByMe' with `@UI.Hidden`.\n\n### Fixed\n\n- Compiler: `type of <unmanaged assocation>` is now handled correctly by raising an error.\n\n## Version 1.25.0 - 2020-04-09\n\n### Changed\n\n- Downgrade `chained array of`-error to a warning\n- SQLite: Don't render implicit casts\n\n## Version 1.24.6 - 2020-04-08\n\n### Changed\n\n- OData:\n  + Improve messages for misaligned forward/backlink associations in EDM generator\n  + For V2 add annotations `@sap.creatable: false`, `@sap.updatable: false`, `@sap.deletable: false`,\n  `@sap.pageable: false` to the Parameter EntityType and `@sap.creatable: false`, `@sap.updatable: false`,\n  `@sap.deletable: false`, `@sap.addressable: false` to the Result EntityType.\n  + Update vocabularies 'Common' and 'Graph' and 'ODM'.\n\n\n### Fixed\n\n- Various messages mention more appropriate source locations.\n\n- Improve messages for `array of`\n\n- OData:\n  + Render 'array of' for ReturnType correctly\n  + Report error for view fields with no type information early\n  + Handle associations in structures with an association as explicit key\n\n### Removed\n\n- The client tool `cdsc` does not offer the option `--std-json-parser` anymore,\n  as it had no effect.\n\n## Version 1.24.4 - 2020-03-25\n\n### Added\n\n### Changed\n\n- `doc` comment propagation can now also be stopped by comments that only contain whitespace\n  (including newlines) like `/**  */`.\n\n- OData:\n  + Remove redundant service name and `__` prefix out of dynamically exposed substructures.\n  + Update vocabularies 'Capabilities' and 'Graph'.\n\n### Fixed\n\n- OData:\n  + Process correctly \"type of\".\n  + Process correctly elements with underscore as prefix.\n\n- Preserve parameter list in localized convenience views.\n\n## Version 1.24.3 - 2020-03-16\n\n### Added\n\n### Changed\n\n### Fixed\n\n- Force usage of resolve@1.8.1 instead of semver to avoid issues with file cache\n\n## Version 1.24.2 - 2020-03-13\n\n### Added\n\n- Support function calls like `count( distinct ... )` and `count( all ... )`.\n\n- With option `--doc-comment` comments of the form `/**...*/` are preserved, if these comments\n  appear at positions where annotation assignments are allowed. `doc` comments are propagated\n  like annotations until an empty comment `/***/` disrupts the propagation.\n  \n- OData:\n  + Add new OData vocabularies `com.sap.vocabularies.Graph.v1` and `com.sap.vocabularies.ODM.v1`\n  + With option `--odata-containment`, `parent` association and inferred key elements for\n  `composition of <aspect>` as well as inferred keys of `_texts` entities are not rendered.\n  + OData V4: Produce primary key paths with length limited alias names.\n\n### Changed\n\n### Fixed\n\n- When not disabled by `@cds.autoexpose:false`, an entity used as composition target\n  is auto-exposed in the current service;\n  this did not work always if the target was a _query_ entity.\n\n- Foreign key creation in odata flat-mode when following associations.\n\n- Rename `@description` to `@Core.Description` in all cases as part of the OData transformation of a CSN.\n\n- When generating extensions from EDMX annotations, handle correctly targets from an EntityContainer.\n\n- Apply service annotations in EDMX generation.\n\n\n### Removed\n\n- Warning 'Service should not have more then one draft root artifact'\n\n- Experimental annotation '@cds.odata.{v2|v4}.ignore`\n\n- OData vocabulary `com.sap.vocabularies.odm.v1` (lowercase 'odm')\n\n- `--beta-mode` from option `--odata-containment`.\n\n## Version 1.24.1 - 2020-03-06\n\n### Added\n\n- Add new OData vocabulary `com.sap.vocabularies.odm.v1`\n\n### Changed\n\n- Expressions in mixin-definitions are now validated.\n- OData:\n  + Redirect inbound associations to entities with parameters to corresponding Parameter EntityType.\n  + Update vocabulary `UI`\n- Use semver for dependencies\n\n### Fixed\n\n- Resolve backlink mixin association usages uniformly in association to join translation.\n\n\n## Version 1.24.0 - 2020-02-28\n\n### Added\n\n- If an entity `E` with localized elements has the annotation `@fiori.draft.enabled`,\n  a new element `ID_texts` of type `cds.UUID` is added to `E_texts` as the _only key_ and\n  the annotation `@odata.draft.enabled` will not be set to false for `E.texts`.\n- A comment of the form `/**…*/` at \"annotation positions\" is now considered a doc comment;\n  its \"cleaned-up\" text is put into the CSN as value of the property `doc`.\n  In the OData/EDMX, it appears as value for the annotation `@Core.Description`.\n\n### Fixed\n\n- HANA CDS: When casting a column to an enum type, don't render it as an enum\n- Ignore top-level CSN \"annotations\" like `@sql_mapping` in the CSN frontend.\n- OData: Key constraint checks for Draft enabled entities consider EDM exposed keys only.\n- Message level for draft key checks is raised to 'warning' again.\n- Action and function calls are checked for missing arguments.\n- All references are correctly transformed in flatten mode.\n\n\n## Older Versions\n\nThe change log for older entries can be found at\n[`doc/CHANGELOG_ARCHIVE.md`](doc/CHANGELOG_ARCHIVE.md).\n",
      "downloadsCurrentMonth": 397612,
      "downloadsCurrentFortnight": 190288,
      "downloads365": 4029826,
      "downloadsFortnightGrowth": -8.22,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 318300 },
        { "yearMonth": "2021-08", "downloads": 324002 },
        { "yearMonth": "2021-09", "downloads": 329271 },
        { "yearMonth": "2021-10", "downloads": 331041 },
        { "yearMonth": "2021-11", "downloads": 326724 },
        { "yearMonth": "2021-12", "downloads": 302057 },
        { "yearMonth": "2022-01", "downloads": 327271 },
        { "yearMonth": "2022-02", "downloads": 330267 },
        { "yearMonth": "2022-03", "downloads": 372562 },
        { "yearMonth": "2022-04", "downloads": 375949 },
        { "yearMonth": "2022-05", "downloads": 399987 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-12T00:07:27.422Z" },
        { "version": "1.8.1", "date": "2020-06-12T00:07:27.811Z" },
        { "version": "modified", "date": "2022-05-16T15:33:44.939Z" },
        { "version": "1.1.1", "date": "2020-06-12T00:07:35.368Z" },
        { "version": "1.17.1", "date": "2020-06-12T00:07:42.631Z" },
        { "version": "1.0.30", "date": "2020-06-12T00:07:49.945Z" },
        { "version": "1.19.2", "date": "2020-06-12T00:07:57.092Z" },
        { "version": "1.5.0", "date": "2020-06-12T00:08:04.298Z" },
        { "version": "1.18.2", "date": "2020-06-12T00:08:11.522Z" },
        { "version": "1.24.4", "date": "2020-06-12T00:08:18.864Z" },
        { "version": "1.23.2", "date": "2020-06-12T00:08:26.134Z" },
        { "version": "1.8.0", "date": "2020-06-12T00:08:33.647Z" },
        { "version": "1.26.2", "date": "2020-06-12T00:08:40.816Z" },
        { "version": "1.13.4", "date": "2020-06-12T00:08:48.341Z" },
        { "version": "1.20.3", "date": "2020-06-12T00:08:55.626Z" },
        { "version": "1.15.0", "date": "2020-06-12T00:09:03.148Z" },
        { "version": "1.0.27", "date": "2020-06-12T00:09:09.957Z" },
        { "version": "1.1.3", "date": "2020-06-12T00:09:16.825Z" },
        { "version": "1.10.0", "date": "2020-06-12T00:09:23.644Z" },
        { "version": "1.1.2", "date": "2020-06-12T00:09:30.565Z" },
        { "version": "1.17.0", "date": "2020-06-12T00:09:37.712Z" },
        { "version": "1.17.2", "date": "2020-06-12T00:09:44.942Z" },
        { "version": "1.21.1", "date": "2020-06-12T00:09:51.957Z" },
        { "version": "1.35.0", "date": "2020-08-05T10:09:02.192Z" },
        { "version": "1.39.0", "date": "2020-09-02T16:44:57.908Z" },
        { "version": "1.42.2", "date": "2020-10-13T16:08:37.710Z" },
        { "version": "1.43.0", "date": "2020-10-14T07:04:25.088Z" },
        { "version": "1.45.0", "date": "2020-11-04T13:44:02.406Z" },
        { "version": "1.46.4", "date": "2020-12-04T14:10:18.974Z" },
        { "version": "1.46.6", "date": "2020-12-04T14:43:35.229Z" },
        { "version": "1.49.0", "date": "2021-02-02T09:40:04.817Z" },
        { "version": "1.49.2", "date": "2021-02-17T10:06:36.000Z" },
        { "version": "1.50.0", "date": "2021-03-02T13:43:26.404Z" },
        { "version": "1.50.2", "date": "2021-03-22T15:14:52.766Z" },
        { "version": "2.1.4", "date": "2021-04-07T06:43:42.451Z" },
        { "version": "1.50.4", "date": "2021-04-16T07:55:39.417Z" },
        { "version": "2.1.6", "date": "2021-04-16T08:05:06.702Z" },
        { "version": "1.50.6", "date": "2021-05-07T14:40:27.816Z" },
        { "version": "2.2.4", "date": "2021-05-10T07:27:37.387Z" },
        { "version": "2.2.6", "date": "2021-05-12T15:30:15.756Z" },
        { "version": "2.2.8", "date": "2021-05-20T14:36:23.743Z" },
        { "version": "1.50.8", "date": "2021-07-09T07:09:33.839Z" },
        { "version": "2.4.4", "date": "2021-07-09T07:45:44.744Z" },
        { "version": "1.50.10", "date": "2021-08-02T14:33:32.150Z" },
        { "version": "2.5.0", "date": "2021-08-02T15:21:45.339Z" },
        { "version": "2.5.2", "date": "2021-08-11T14:35:24.066Z" },
        { "version": "2.7.0", "date": "2021-09-27T12:11:35.786Z" },
        { "version": "2.10.2", "date": "2021-11-02T12:06:30.874Z" },
        { "version": "2.10.4", "date": "2021-11-05T11:25:05.839Z" },
        { "version": "2.11.0", "date": "2021-12-06T09:57:28.194Z" },
        { "version": "2.11.2", "date": "2021-12-07T11:38:24.324Z" },
        { "version": "2.11.4", "date": "2021-12-21T17:03:31.201Z" },
        { "version": "2.12.0", "date": "2022-01-31T08:44:58.003Z" },
        { "version": "2.13.6", "date": "2022-03-28T06:38:33.260Z" },
        { "version": "2.13.8", "date": "2022-03-30T12:21:24.812Z" },
        { "version": "2.15.2", "date": "2022-05-16T15:33:44.845Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-compiler"
    },
    {
      "name": "cds-dk-foss",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-10-13T13:41:50.159Z",
      "updatedAt": "2022-04-06T21:36:25.211Z",
      "readme": "# @sap/cds-dk-foss\n\nThis package is no longer maintained.\nIts dependencies are included in [`@sap/cds-dk`](https://www.npmjs.com/package/@sap/cds-dk) module instead.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.0.2 - 2021-02-19\n\n### Changed\n\n- Package is no longer in use\n\n### Fixed\n\n- Proper license link in `package.json`\n\n### Added\n\n- Initial version of package\n\n## Version 1.0.1 - 2020-09-23\n\n### Added\n- Initial version of package\n",
      "downloadsCurrentMonth": 45,
      "downloadsCurrentFortnight": 20,
      "downloads365": 1056,
      "downloadsFortnightGrowth": -20,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 30 },
        { "yearMonth": "2021-08", "downloads": 63 },
        { "yearMonth": "2021-09", "downloads": 150 },
        { "yearMonth": "2021-10", "downloads": 487 },
        { "yearMonth": "2021-11", "downloads": 77 },
        { "yearMonth": "2021-12", "downloads": 42 },
        { "yearMonth": "2022-01", "downloads": 24 },
        { "yearMonth": "2022-02", "downloads": 19 },
        { "yearMonth": "2022-03", "downloads": 43 },
        { "yearMonth": "2022-04", "downloads": 30 },
        { "yearMonth": "2022-05", "downloads": 40 }
      ],
      "versions": [
        { "version": "created", "date": "2020-10-13T13:41:50.159Z" },
        { "version": "1.0.1", "date": "2020-10-13T13:41:50.735Z" },
        { "version": "modified", "date": "2022-04-06T21:36:25.211Z" },
        { "version": "1.0.2", "date": "2021-02-22T15:14:31.535Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-dk-foss"
    },
    {
      "name": "cds-dk",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T17:49:25.384Z",
      "updatedAt": "2022-06-08T09:35:35.640Z",
      "changelog": "# Change Log\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 4.9.5 - 2022-05-17\n\n### Changed\n\n- Include `@sap/cds` 5.9.5\n- Include `@sap/cds-compiler` 2.15.2\n\n### Fixed\n\n- `cds init` uses latest Maven Java archetype version 1.24.0 for creating Java projects.\n\n## Version 4.9.4 - 2022-05-09\n\n### Changed\n\n- Include `@sap/cds` 5.9.4\n- Bump `axios` to latest (CVE-2022-1214)\n\n## Version 4.9.3 - 2022-04-27\n\n### Changed\n\n- `cds init` uses latest Maven Java archetype version 1.23.1 for creating Java projects.\n- Include `@sap/cds` 5.9.3\n\n### Fixed\n\n- `cds add cf-manifest` now uses the correct `application` plan for the `xsuaa` service\n- `cds login`, `cds activate`: correctly include response in auth errors\n- The SAP HANA and MTA options in the project wizard in BAS now work again\n\n## Version 4.9.2 - 2022-04-11\n\n### Changed\n\n- Include `moment` 2.29.2, fixing CVE-2022-24785\n- Include `@sap/cds` 5.9.2\n- Include `@sap/eslint-plugin` 2.3.5\n\n## Version 4.9.1 - 2022-04-01\n\n### Changed\n\n- `cds init` uses latest Maven Java archetype version 1.23.0 for creating Java projects.\n- Include `@sap/cds` 5.9.1\n- Include `@sap/cds-compiler` 2.13.8\n- Include `@sap/eslint-plugin` 2.3.4\n\n## Version 4.9.0 - 2022-03-28\n\n### Added\n\n- `cds parse` as convenient shortcut to `cds compile --flavor parsed`.\n- `cds compile --to openapi` uses value of annotation `@Common.Label` on entities, actions, and functions for operation tags, diagram includes non-primitive action and function import parameters.\n- `cds add` now accepts `--for <profile>` argument to create Node,js project configuration for a given profile\n- `cds add approuter` allows for serving your application’s UI using SAP approuter.\n- `cds add kibana-logging` adds Kibana-friendly logging in a more convenient way than having to manually alter the package.json.\n\n### Changed\n\n- `cds init` does not create `VS Code` file exclusions anymore, so that `.vscode/` and `.gitignore` are visible by default, allowing easier editing of these files.\n- `cds init` reports Maven archetype version in console if called with `--add java`.\n- `cds init` uses latest Maven Java archetype version 1.22.2 for creating Java projects.\n- `cds import` modified documentation for namespace option.\n- `cds import` does not create bound function imports key parameters in CSN for OData V2.\n- `cds import` now when `--keep-namespace` option is not given validates the file name and then converts it to complier supported format as service name .\n- add new methods from `FsUtil` to typescript interface.\n\n### Fixed\n- `cds compile --to openapi` now correctly treats `null` and the empty string as function parameters.\n- `cds bind --exec` no command output (STDOUT) displayed on Windows.\n- `cds watch` now gracefully shuts down the live reload server before exiting\n- `cds import` now generates correct csn for both OData V2 and V4 EDMX files where the EntityType has a BaseType entry.\n- `cds import` now throws an error in case of missing Association Sets.\n- `cds import` bug fixed for `--force` flag. Now overwrites the correct file content.\n- `cds import` fix will no longer capture unwanted annotations in the CSN for OData V4.\n- `cds import` now support annotations for properties of type `Type Definition`\n- `cds import` fix for supporting valid datatypes in unbounded function imports for OData V4.\n- `cds import` bug fixed for missing data imports for parameters with entity type not mapped to an entity set.\n- `cds import` now supports properties with complex type for OData V4.\n- `cds import` fix will now throw error if the key property of an entity is of type `Collection` for both OData V2 and V4 edmx.\n- `cds bind --to hana` provides more comprehensive error message in case Cloud Foundry `org` or `space` are not set.\n\n## Version 4.8.2 - 2022-03-07\n\n### Fixed\n\n- `cds import` can now capture the data for any given `EntityContainer Name` for OData V4. Earlier it only worked when the name was `EntityContainer`.\n\n### Changed\n\n- `cds init` uses latest Maven Java archetype version 1.22.1 for creating Java projects.\n\n## Version 4.8.1 - 2022-02-15\n\n### Changed\n\n- `cds init` uses latest Maven Java archetype version `1.22.0` for creating Java projects.\n\n### Fixed\n\n- Bump `follow-redirects` package to 1.14.8 (CVE-2022-0536)\n- `cds bind --exec` no command output (STDOUT) displayed on Windows.\n\n## Version 4.8.0 - 2022-01-28\n\n### Added\n\n- `cds import` now reflects the entity set and entity container level annotations in the csn.\n- `cds activate --sync` allows to use the synchronous server API for extension upload.\n\n### Changed\n\n- The forked package `@mendix/sqlite3` is now used instead of `sqlite3` to overcome CVE-2021-32804.  No code changes in applications are needed, as the new package installed by `npm` with the same name `sqlite3`.\n- [beta] The templating for `cds init` and `cds add` has been rewritten from scratch. This will allow for some new, more complex commands, such as `cds add mtx` or `cds add xsuaa`.\n- Use `cds bind` during `cds deploy` to store connection information in file `.cdsrc-private.json`.\n\n### Fixed\n\n- `cds import` now omits function imports with `put/delete` kind.\n- `cds import` has fixed the entity type to entity set mapping in OData V2.\n- `cds import` now supports collection type.\n- `cds watch` now picks a free livereload port if the standard port 35729 is already bound\n- `cds extend`, `cds activate`, `cds login`, and `cds logout` now prioritize command-line options over saved settings\n- MTX client now logs fewer characters of secrets in debug output\n- MTX client now handles incomplete error responses better\n\n## Version 4.7.3 - 2022-01-14\n\n### Changed\n\n- Bump `follow-redirects` package to 1.14.7 (CVE-2022-0155)\n\n## Version 4.7.2 - 2021-12-15\n\n### Fixed\n\n- `cds add lint` uses JSONC parser to read ESLint config files of type `.eslintrc[.js,.cjs,.json]`.\n\n### Changed\n\n- `cds init` uses latest Maven Java archetype version `1.21.0` for creating Java projects.\n\n## Version 4.7.1 - 2021-12-06\n\n### Fixed\n\n- `cds activate` authentication no longer fails\n- `cds.compile.to.openapi` does no longer crash if `cds.compile` was already initialized\n\n## Version 4.7.0 - 2021-12-06\n\n### Added\n\n- `cds add data --for` can be passed a regular expression, allowing more flexible name filters.  For example `--for '^Supplier$'` would only match entity `Supplier`, but not `SupplierAddress`.  Note that as before, `--for Supplier` is interpreted as `--for '^Supplier.*'`, i.e. matches both entities.\n- `cds init --add hana` and `cds add hana` now add a `undeploy.json` file containing wildcards. This ensures that SAP HANA artefacts are automatically cleaned-up in case views, unique keys or constraint definitions of associations have been changed in CDS model.\n\n### Changed\n\n- `cds import` now adds annotations for missing ON conditions in associations instead of appending it in `doc`.\n- `cds import` has updated mapping for OData V2 and V4\n- `cds add lint` now configures `csv` files in `.vscode/settings.json`\n- `cds add hana` for Java projects now adds an `engines.node` version of `^16` to the generated `db/package.json`, to pin the Node.js version.  This will help in the future when runtime environments change their default to some version higher than the one supported by `@sap/hdi-deploy`.\n- `cds add mta` for Node.js projects now adds `npm ci` commands instead of `npm install`.  This makes use of `package-lock.json` to enforce reproducible builds.\n- `cds watch` now ignores folders named `target`, to avoid restarts when Maven's build output changes\n\n### Fixed\n\n- `cds import` throws warning messages for unsupported data types.\n- `cds watch` allows the explicit `--with-mocks` option, although this is anyways included by default\n- `cds watch` no longer runs into multiple restarts if many files are changed at once, like in git branch changes\n\n## Version 4.6.4 - 2021-11-24\n\n### Fixed\n\n- `cds import` fix for TypeError issue during OData V2 EDMX conversion to CSN.\n- `cds import <file_name>` fix now updates the service name in the `package.json` with only the file name. Earlier, the service name sometimes used to be of the form `A.B`, with `A` being file name and `B` being a part of the schema namespace value in the EDMX file\n\n### Changed\n\n- `cds init` uses latest Maven Java archetype version `1.20.3` for creating Java projects.\n\n## Version 4.6.3 - 2021-11-16\n\n### Fixed\n\n- `cds watch` recovers again from compilation errors and properly prints these\n- `cds import` fix for omitting empty `doc` components.\n- `cds add lint` no longer duplicates initial contents in `package.json`\n- `cds add data` no longer ignores imported services for which credentials are stored in the project\n\n## Version 4.6.2 - 2021-11-09\n\n### Fixed\n\n- `cds add lint` now correctly detects missing local `eslint`\n- `cds add lint` no longer removes parts of `package.json`\n- `cds add lint` no longer creates duplicate configuration entries\n\n## Version 4.6.1 - 2021-11-08\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.20.0` for creating Java projects.\n- `cds watch` now resolves local node modules like `hdb` even though `@sap/cds` is not installed locally.  This is useful during development where `@sap/cds` shall only be installed in a 'central' location, while extra modules shall still be found in the app's dir.\n\n### Fixed\n\n- `cds repl` now finds modules like `hdb` that are installed locally in the app folder\n- `cds repl` now enables the `await` statement also on Windows\n- `cds lint` now limits all file extensions to those allowed by the @sap/eslint-plugin-cds ESLint configuration\n\n## Version 4.6.0 - 2021-11-02\n### Added\n\n- `cds bind` binds the given service to a hana instance by storing the credentials in `.cdsrc.json` in your user home directory [beta].\n- `cds import` introduced option `--include-namespaces` which imports the custom defined namespaces.\n- `cds import` preserve documentation in CSN file for actions and functions from OData V4 EDMX file.\n- `cds import` now supports reading values of the `as` option from cds.env\n\n### Fixed\n\n- `cds import` fix for reflecting only supported datatypes in csn for actions and functions for OData V4.\n- `cds import` fix for TypeError issue (#9868) during OData V4 EDMX conversion to CSN.\n- `cds watch` no longer omits starting some services every other time it is restarting the process\n- `cds-ts watch` now honors a local `tsconfig.json` file\n- `cds import` fix for TypeError issue (#9950) during OData V2 EDMX conversion to CSN.\n- `cds import` fix to generate the csn (#9950) during OData V2 EDMX conversion to CSN.\n- `cds import` fix to replace the aliases with original schema namespace value.\n- `cds import` adds `@cds.persistence.skip` back to imported models.  Its accidental removal in 4.5.0 caused wrong DB deployments of imported entities.\n\n## Version 4.5.4 - 2021-10-07\n\n### Fixed\n\n- `cds watch` no longer fails if started with `--ext`, `--livereload`, or `--open` arguments\n\n## Version 4.5.3 - 2021-10-05\n\n### Fixed\n\n- `cds import` fix for `--dry` shortcut `-`\n- `cds import` fix for missing type properties in csn for unbounded action and function in OData V4.\n- A  bug with `cds init` when called in BAS project wizard\n\n## Version 4.5.2 - 2021-09-30\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.19.0` for creating Java projects.\n\n### Fixed\n\n- `cds deploy --to sqlite` now writes `credentials.database` again to `package.json`\n\n## Version 4.5.1 - 2021-09-29\n\n### Added\n\n- `cds import` introduced option `--as` which converts EDMX file to different file formats such as cds, csn and json.\n- `cds import` introduced flag `--f` which forcefully overwrite the content of existing cds file when specified with `--as` option.\n\n### Changed\n\n- Marked `cds lint` as beta again to further investigate issues from 'extends' via prettier plugin.\n\n## Version 4.5.0 - 2021-09-23\n\n### Added\n\n- `cds import` supports import of functions, action, functionimport and actionimport from both OData V2 and V4 EDMX files.\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.18.1` for creating Java projects.\n\n### Fixed\n\n- `cds watch` additional CLI args were not passed to launched process, for example, `--odata x4`.\n- `cds import` fix for TypeError issue during OData V4 EDMX conversion to CSN.\n- `cds import` fix for multi-line documentation text in OData V2 EDMX file.\n- `cds import` fix for V4 CSN generation when non standard OData vocabularies are referred.\n- `cds add data`\n    + no longer fails for entities without keys\n    + no longer creates csv files for synthetic draft entities\n    + no longer creates entries for virtual fields\n    + no longer skips over entities marked with `@cds.persistence.skip`, which is true for 'external' entities created by `cds import`.\n- `cds init --add` handles comma list correctly.\n- `cds import` fix for multi-line documentation text in OData V4 EDMX file.\n- `cds import` fix preserves the missing entities in csn for OData V2 EDMX file.\n\n\n## Version 4.4.2 - 2021-09-03\n\n### Fixed\n\n- Use latest `cds-sidecar-client` to fix file upload in `cds activate`\n\n## Version 3.5.3 - 2021-08-31\n\n### Fixed\n\n- Use latest `cds-sidecar-client` to fix file upload in `cds activate`\n\n## Version 4.4.1 - 2021-08-03\n\n### Fixed\n\n- Use `@sap/eslint-plugin-cds@2.0.4`\n\n## Version 4.4.0 - 2021-08-02\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.17.0` for creating Java projects.\n\n### Fixed\n\n- Fixed bug when logging in Business Application Studio during `New Project from Template` wizard.\n- `cds import` fix for <documentation> tag in Odata V2 for EntityType and ComplexType.\n- `cds help` does not crash with `this.load is not a function` in exotic installations\n\n## Version 4.3.3 - 2021-07-26\n\n### Fixed\n\n- Removed internal links in `npm-shrinkwrap.json`\n\n## Version 4.3.2 - 2021-07-26\n\n### Changed\n\n- Bumped version of `@sap/cds` to 5.3.2\n\n## Version 3.5.2 - 2021-07-21\n\n### Changed\n\n- Bump to latest versions\n- Use latest `cds-sidecar-client` to fix CVE-2021-33502\n\n## Version 4.3.1 - 2021-07-12\n\n### Changed\n\n- New version of `@sap/eslint-plugin-cds`\n\n## Version 4.3.0 - 2021-07-08\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.16.3` for creating Java projects.\n- `cds init` generates dependency entry for `hdb` instead of `@sap/hana-client`.\n- Reworked templates for cds linter.\n\n### Added\n\n- `cds import` now supports OData V4 edmx files.\n- `cds-ts` executable starts `cds` CLI with [`ts-node`](https://www.npmjs.com/package/ts-node) to allow JIT compilation of Typescript\n- `cds` CLI will give you a best guess if a command cannot be found, e.g. in case of a typing mistake.\n- `cds.import` as API alternative to `cds import` command to convert edmx files to csn [beta]\n- `cds.compile.to.openapi` as API alternative to `cds compile --to openapi` to convert CDS models to OpenAPI definitions\n\n### Fixed\n\n- `cds import` fix for <documentation> tag in Odata V2 and <Annotation> tag in Odata v4\n- `cds import` now sets the `kind` attribute in package.json to the correct `odata-v2` value for OData v2 services.\n- `cds import` now maps edm.DateTime to cds.DateTime for Odata V2.\n- `cds compile --to edmx-v2/edmx-v4` now uses correct file naming when compiling a single CDS service.\n\n## Version 4.2.1 - 2021-06-09\n\n### Fixed\n\n- `cds deploy` w/o any file arguments now works again and no longer fails with `No cds models found at/in ''`.\n\n\n## Version 4.2.0 - 2021-06-07\n\n### Added\n\n- `cds add data` creates csv files with basic header lines for the entities in the project.  `--for` option allows for selecting individual entities or namespaces.\n\n### Fixed\n\n- `cds deploy` called with multiple sources ignored all but the first one\n- `cdd add mta` now sets a buildpack for the server modules (Node.js or Java).  This improves deploy performance and avoids issues with buildpack priorities, leading to potentially wrong buildpacks selected.\n- On drag and drop of an edmx file, `cds watch` now imports it in the proper working dir\n- `cds import` now moves the edmx file again to `srv/external` instead of copying it.\n\n## Version 4.1.5 - 2021-05-21\n\n### Fixed\n\n- An issue with opening URLs on Windows\n- `cds` CLI no longer adds `cds.compile.to.openapi` generically into all commands.  This turned out to load cds configuration from wrong folders, introducing subtle side effects.  Now, only the `cds compile` command adds `cds.compile.to.openapi`.  If you use `cds.compile.to.openapi` in other flows, like at runtime, please use `cds compile --to openapi` instead.\n- Include `@sap/cds` 5.1.5\n- Include `@sap/cds-runtime` 3.1.1\n- Include `@sap/cds-compiler` 2.2.8\n- Include `@sap/eslint-plugin-cds` 1.1.4\n\n## Version 4.1.4 - 2021-05-12\n\n### Fixed\n\n- Include `@sap/cds` 5.1.4\n- Include `@sap/cds-compiler` 2.2.6\n- Include `@sap/eslint-plugin-cds` 1.1.3\n\n## Version 4.1.3 - 2021-05-12\n\n### Fixed\n\n- Include `@sap/cds` 5.1.3\n\n## Version 4.1.2 - 2021-05-12\n\n### Fixed\n\n- Include `@sap/cds` 5.1.2\n\n## Version 4.1.1 - 2021-05-07\n\n### Fixed\n\n- Include `@sap/cds` 5.1.1\n\n## Version 4.1.0 - 2021-05-06\n\n### Added\n\n- `cds watch --open` opens the app in the browser with a given URL (part)\n\n### Changed\n\n- If `cds watch` encounters a port that is already in use, it now just runs on an arbitrary port instead of a trying to search the next port available.\n- `cds init` uses latest `Maven Java archetype` version `1.15.3` for creating Java projects.\n\n### Fixed\n\n- `cds compile --to hdbtable, hdbcds` no longer creates duplicate file extensions.\n\n## Version 4.0.7 - 2021-04-16\n\n### Changed\n\n- Bumped versions of `@sap/cds`, `@sap/cds-compiler`\n\n### Fixed\n\n- Lookup for `eslint` during `cds add lint`\n\n## Version 4.0.6 - 2021-04-15\n\n### Changed\n\n- Bumped versions of `@sap/cds`, `@sap/cds-runtime`, `@sap/cds-compiler`\n\n\n## Version 4.0.5 - 2021-04-12\n\n### Changed\n\n- Bumped version of `@sap/eslint-plugin-cds`\n\n## Version 4.0.4 - 2021-04-12\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.15.0` for creating Java projects.\n\n\n## Version 4.0.3 - 2021-04-07\n\n### Changed\n\n- `cds compile --to xsuaa`, `edmx-v2`, and `edmx-v4` have moved from `@sap/cds` to `@sap/cds-dk`.\n\n### Fixed\n\n- `cds init` now works if started in file paths with spaces\n\n## Version 4.0.2 - 2021-04-01\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.14.3` for creating Java projects.\n- `npm-shrinkwrap.json` format version 2 is now used, produced by `npm` 7\n- `npm-shrinkwrap.json` now contains integrity hashes\n\n### Fixed\n\n- Allow blanks in cds-dk installation path when running `cds init`.\n\n## Version 4.0.1 - 2021-03-24\n\n### Fixed\n\n- Many things in linter\n\n## Version 4.0.0 - 2021-03-19\n\n### Added\n\n- `cds watch` is now a [live reload](https://www.npmjs.com/package/livereload-js) server, allowing for automatic page refreshes in browsers whenever a file has changed.\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.14.0` for creating Java projects.\n- `cds watch` has dropped its fallback support for `nodemon` through the `CDS_USE_NODEMON` configuration.\n- `cds add hana` now sets `hdbtable` as deployment format for SAP HANA\n\n### Fixed\n\n- `cds watch` no longer runs in an endless restart loop if started in the user's home dir.\n\n## Version 3.5.1 - 2021-03-12\n\n### Changed\n\n- Bump version of `@sap/cds` to 4.6.5\n\n## Version 3.5.0 - 2021-03-01\n\n### Changed\n- `cds init` creates projects with latest version of `sqlite3` again.\n- `cds add mta` now creates a mta.yaml file that correctly handles spring boot .jar and .war archives.\n\n### Fixed\n\n- `cds env` does not longer fail with an exception for unknown commands\n\n## Version 3.4.2 - 2021-02-19\n\n### Fixes\n\n- `cds init` now refers to the latest HDI deployer which supports Node.js 14\n\n### Changed\n\n- `cds init` uses latest `Maven Java archetype` version `1.13.1` for creating Java projects.\n- Bump version of `@sap/cds` to 4.5.3\n\n## Version 3.4.1 - 2021-02-17\n\n### Changed\n\n- Bump version of `@sap/cds` to 4.5.2\n- Bump version of `@sap/cds-runtime` to 2.8.6\n- Bump version of `@sap/cds-compiler` to 1.49.2\n\n### Fixed\n\n- `cds watch` now shuts down its child process properly, so that `EADDRINUSE` errors in Business Application Studio are gone\n\n## Version 3.4.0 - 2021-02-02\n### Changed\n- `cds init` uses latest `Maven Java archetype` version `1.12.1` for creating Java projects.\n- `cds init` allows `_` in project name and leaves conversion to `Maven Java archetype`.\n- `cds init --add notebook` and `cds add notebook` now use a Python venv and offer a default Jupyter Notebook viewer.\n- [beta] Multi-target Node.js applications can now be initialized with multitenancy support by running `cds init --add mta,mtx`.\n\n## Version 3.3.5 - 2021-01-20\n\n### Changed\n\n- Bump versions of `@sap/cds`\n\n## Version 3.3.4 - 2021-01-12\n\n### Changed\n\n- Bump versions of `@sap/cds` and `axios`\n\n## Version 3.3.3 - 2020-12-18\n\n### Changed\n\n- Bump versions of `@sap/cds`, `@sap/cds-runtime`, and `@sap/cds-sidecar-client`\n\n## Version 3.3.2 - 2020-12-07\n\n### Changed\n\n- Bump version of `@sap/cds` to 4.4.5\n\n## Version 3.3.1 - 2020-12-04\n\n### Changed\n\n- Bump version of `@sap/cds` to 4.4.4 and `@sap/cds-runtime` to `2.7.5`\n\n## Version 3.3.0 - 2020-12-02\n\n### Added\n\n- `cds init` and `cds add` now support the feature `notebook` to create a Jupyter Notebook in a project.\n- `cds compile --to openapi` adds support for OpenAPI 3 to `cds compile`.\n- If the server port is in use, `cds watch` offers to restart the server with a new port.\n- `cds init` uses latest `Maven Java archetype` version `1.11.0` for creating Java projects.\n- `cds init --add pipeline` and `cds add pipeline` will now use the general purpose pipeline of project \"Piper\".\n- `cds login`, `cds extend` and `cds activate` now also support clientid/clientsecret as parameters. This is needed when extending multitenant\napplications provided as as reusable services\n(see [CP documentation](https://controlcenter.ondemand.com/index.html#/knowledge_center/articles/2316430f7d804820934910db736cefbf)).\n- `cds init --add mta` and `cds add mta` now always set the `cloud` Spring profile for Java apps. Before, it was only set if a binding to an SAP HANA service was present.\n\n### Changed\n\n- `cds add cf-manifest` now adds a dependency to the `java_buildpack`.\n- `sqlite3` is now an optional dependency to `cds-dk`.  This means that an installation failure of `sqlite3`, e.g. in environments w/o Internet connectivity, no longer leads to an overall installation error.  This behavior suits Java applications, as these usually don't need an SQLite database.  Node.js applications still require a proper installation of `sqlite3` if they use this database.\n\n### Fixed\n\n- `cds add cf-manifest` now only adds db-deployer module if HANA service binding exists.\n- `cds init --add hana` now adds `requires.db.kind: \"sql\"` to cds configuration for Node.js and Java\n- `cds watch` no longer fails in SAP Business Application Studio when trying to find `sqlite3`.  `cds deploy --to sqlite` still has that issue, which is to be solved in a future version.\n- `cds deploy --to hana` now prefers to use an app-local install of `@sap/cds`, much like other `cds` commands\n\n## Version 3.2.1 - 2020-11-20\n\n### Fixed\n\n- `cds import` no longer creates `.csn` files with invalid `kind:ComplexType` fields\n\n## Version 3.2.0 - 2020-11-03\n\n### Added\n\n- `cds watch` now allows to set the `--in-memory` flag that is passed to `serve`.\n\n### Changed\n\n- `@sap/cds-dk` is again shrinkwrapped, so that builds get reproducible again\n- All `cds` commands now prefer a local installation of `@sap/cds`.  This enables applications better control over the version of `@sap/cds`.\n- `cds add cf-manifest` generates the service application with the `random-route: true` flag, which avoids route clashes on CF during development.\n\n### Fixed\n\n- `cds run` finds its `express` module again in the case where no `express` is installed in the application.\n- `cds env` now also displays properties that have a value `false` or `''`.\n- Leading flags in `cds` CLI work again, like `cds --to sql my.cds`\n- `cds compile --to` w/o an argument now fails with a better message\n\n### Removed\n\n\n## Version 3.1.4 - 2020-10-27\n\n### Fixed\n\n- `cds run` finds the `sqlite3` module again if `cds` is used from a globally installed `@sap/cds-dk`.\n\n\n## Version 3.1.3 - 2020-10-26\n\n### Fixed\n\n- `cds run` finds the `express` package again in the case where no `express` is installed in the application's `node_modules`.\n\n\n## Version 3.1.2 - 2020-10-16\n\n### Changed\n- `cds init` uses latest `Maven Java archetype` version `1.10.0` for creating Java projects.\n\n### Fixed\n- `cds deploy --to sqlite` finds the `sqlite3` module again if `cds` is used from a globally installed `@sap/cds-dk`.\n\n\n## Version 3.1.1 - 2020-10-07\n\n### Added\n- `cds compile --locations` preserves `$location` properties in CSN outputs.\n\n### Changed\n- `cds compile` prints a better legible JSON output to terminals\n- `cds compile -p` is no longer a shortcut for `--parse`, to allow `--parse ...more-args` to work.\n- `cds compile -f` is no longer a shortcut for `--from` (which is not implemented), but for `--flavor`.\n\n### Fixed\n- `cds deploy --to sqlite` now writes `requires.db.model` in `package.json` such that `cds.connect.to.('db')` works w/o further `model` options.\n- `cds deploy --to sqlite` with `@sap/cds` 4.2 no longer crashes due to a wrong import\n\n## Version 3.1.0 - 2020-09-30\n\n### Added\n- `cds compile` now supports option `flavor` with values: `files` | `sources` | `parsed` | `xtended` | `inferred`.\n  + `cds compile --files` maps to `--flavor files`.\n  + `cds compile --sources` maps to `--flavor sources`.\n  + `cds compile --parse` maps to `--flavor parsed`.\n  + `cds compile` maps to `--flavor inferred`.\n- `cds add cf-manifest` creates manifest.yml and services-manifest.yml allowing for Cloud Foundry native deployment.\n- `cds init` now supports type `nodejs` to create a Node.js based project. This is the default and can be omitted.\n- `cds watch`: enter `debug` or `debug-brk` to restart process in debug mode.  Other commands are `ps` and `rs`.\n\n### Changed\n- `@sap/cds-dk` is no longer shrinkwrapped, so that new versions from underlying `@sap` packages (like `@sap/cds`) are available w/o a new cds-dk version\n- `cds init` uses latest `Maven Java archetype` version `1.9.0` for creating Java projects.\n\n### Fixed\n- `cds watch` now passes all environment variables to the spawned sub processes, enabling for example, `cds watch --production`\n- `cds init` modifies artifact id and Java package name for Java projects to be standard conform.\n- `cds` fails with a better error message for misspelled commands\n\n\n## Version 3.0.0 - 2020-08-31\n\n### Changed\n- `cds watch` now uses version 5 of `sqlite3`\n- `cds watch` does not use `nodemon` anymore.\n  > You can continue using `cds watch` with `nodemon` by installing `nodemon` globally and setting env variable `CDS_USE_NODEMON` to true.\n- `cds add mta` for Java applications now determines app details like name, version etc. based on `pom.xml` and no longer from `package.json`.\n\n### Fixed\n- `cds add mta` now configures the Service Manager for SaaS applications. The Instance Manager is no longer used.\n- `cds import` no longer writes an empty file if the source and the target edmx files are the same\n- `cds import` yields better error messages if the input file does not exists or is invalid\n- `cds import` no longer writes a Windows-specific path to `package.json`\n- `cds init --add java` shows better error message if Maven is not installed.\n\n## Version 2.0.8 - 2020-08-07\n\n### Changed\n- `cds init` uses latest `Maven Java archetype` version `1.8.1` for creating Java projects.\n\n### Fixed\n\n- Fixed `cds add mta` for java projects. The Spring Cloud Profile is set by default for Java apps in order to enable the SAP HANA service binding, otherwise the sqlite db would still be used at runtime.\n  The environment variable JBP_CONFIG_RESOURCE_CONFIGURATION required by the classic Java runtime has been removed.\n\n## Version 2.0.7 - 2020-08-04\n\n### Added\n- `cds init` supports adding `samples` via `--add samples`. See `cds help init` for more details.\n- **Most CLI commands have moved to `@sap/cds-dk`** from `@sap/cds`.  Make sure to install the latest version with `npm i -g @sap/cds-dk`.\n- `cds` commands now log a hint to update to the latest `@sap/cds` if this one is still of version 3.\n- New command `cds login` added to simplify usage of `cds extend` and `cds activate` by providing them with automatic authentication and saving project settings.\n  Refreshes expired authentication tokens automatically. Optionally uses CF command-line client to determine login URLs and subdomains.\n  Saves authentication data in plain-text file or desktop keyring on Linux, macOS or Windows.\n  The latter requires an optional Node.js module `keytar` to be installed.\n- New command `cds logout` removes authentication data and optionally project settings.\n\n### Changed\n- `@sap/cdk` no longer warns about `@sap/cds` being globally installed next to it.  This was a temporary hint for the transition period to `@sap/cds-dk`.\n- `cds init` generates dependency to `@sap/cds` version `4` for Nodejs projects.\n- Use square brackets to pass array values for options to `cds init --java:mvn`.\n- `cds init --add pipeline` and `cds add pipeline` now create file `config.yml` in `.pipeline` folder.\n- Improved `launch.json` file which is created during `cds init`.\n- `cds add mta` now creates a mta.yaml file that sets the production flag for cds build and npm install.\n  This ensures that the HANA artefacts are created if `\"kind\": \"sql\"` or some `production` profile has been configured in package.json or .cdsrc.json.\n  Requires `@sap/cds` version >=4.x.\n- `cds init` uses latest `Maven Java archetype` version `1.7.0` for creating Java projects.\n- `cds init` no longer adds `package-lock.json` to `.gitignore` file when creating a new project.\n- `cds init --add hana` and `cds add hana` now use `Maven Java archetype` to create HANA related pom.xml entries.\n- Consistent default naming scheme for applications and services deployed to CF across the following `cds` commands `build`, `deploy`, `init` and `add`. For an application named `myapp` the SAP HANA deployer app name is `myapp-db-deployer`, the SAP HANA DB service name is `myapp-db`.\n\n### Fixed\n\n- Fixed `cds import` to support imports from symlinked sources\n- Fixing bug in `cds init` and `cds add` when using multiple features separated by comma.\n- Fixing missing log output bug in `cds init` and `cds add` when using feature `samples`.\n- `cds add mta` does no longer crash if no package.json file exists.\n\n## Version 1.8.6 - 2020-07-10\n### Changed\n- Service binding names have been adapted in mta.yaml created by `cds add mta` command.\n\n### Fixes\n- Simplified `cds env` calculation during `cds init` and `cds add`.\n\n## Version 1.8.5 - 2020-06-05\n\n### Changed\n- `cds init` uses latest `Maven Java archetype` version `1.6.0` for creating Java projects.\n\n## Version 1.8.4 - 2020-05-30\n\n### Changed\n- `cds init` uses latest `Maven Java archetype` version `1.5.2` for creating Java projects.\n\n### Fixes\n- An issue in `@sap/edm-converters` with missing entity sets\n\n\n## Version 1.8.2 - 2020-05-08\n### Fixes\n- An issue in `@sap/edm-converters` with missing entity sets\n\n\n## Version 1.8.1 - 2020-05-08\n### Fixed\n- An issue in `@sap/edm-converters` with missing entity sets\n\n## Version 1.8.0 - 2020-04-27\n\n### Added\n\n- `cds watch` now also accepts package names as arguments, e.g. `cds w @capire/bookshop`.\n- `cds add mta` now supports cds configuration `requires.db.kind:\"sql\"` which allows seamless production deployments using HANA db while keeping sqlite for local development scenario.\n\n### Changed\n- Parameter `verbose` in `cds init` and `cds add` is now deprecated. Use environment variable `DEBUG=true` to obtain detailed output.\n- `cds init` uses latest `Java archetype` version `1.4.0` for creating Java projects.\n- Consume new `@sap/cds-sidecar-client` due to API change.\n\n### Fixed\n- Fixing terminology in `cds init` and `cds add` console output.\n- `cds init` is logging `cds env` output only in debug mode.\n- Using `cds build` command in generated `mta.yaml` file.\n- Fixing Hana dependency during `cds init --add hana` for project type `java`.\n- Fixing bug in `cds init` when `cds-dk` is not installed globally.\n\n## Version 1.7.0 - 2020-03-24\n\n### Added\n- `cds init --add java` supports `--java:mvn` to add additional parameter.\n- Improvements when logging console output during `cds init`.\n- Link to Maven archetype documentation shown in `cds help init`.\n\n### Changed\n- `cds add mta` now activates the `production` profile when creating the `mta.yaml`, which is consistent with what the MTA build does.  This way, configuration like `\"[production]: {\"kind\": \"hana\"}` gets activated automatically.\n\n\n## Version 1.6.3 - 2020-03-05\n\n### Changed\n\n### Fixed\n- Proper `npm-shrinkwrap.json`\n- `cds init` is a bit more relaxed when checking for existing project content\n\n\n## Version 1.6.0 - 2020-02-25\n### Added\n- `cds init --add java` now also works with `--hana`\n\n### Changed\n- `cds add mta` now creates resources for SAP HANA with an explicit service type `hana`.  If deploying to trial landscapes, this needs to be changed manually to `hanatrial`.\n\n### Fixed\n- `cds add mta` now creates valid configuration for `uaa` and `auditlog` resources.\n\n\n## Version 1.5.0 - 2020-02-10\n\n### Changed\n- `cds init` only supports new syntax. See `cds init help` for more info.\n- `cds init` now supports adding template `hana` to Java projects.\n\n### Fixed\n- `cds add mta` fixes an issue in created mta.yaml for nodejs projects if used in xmake environment.\n- `cds add mta` fixes an build order issue in created mta.yaml for java projects. Now service module is built before db module.\n- `cds init` does not create `package.json` in db folder.\n\n### Added\n- `cds init` adds `private: true` and `license: \"UNLICENSED\"` to newly generated projects.\n- `cds init` adds a default `.hdiconfig` file when using template `hana`.\n- `cds init` supports Java package name via `--java:package` parameter.\n- `cds init` generates dependency entry for `@sap/hana-client` when using template `hana`.\n- `cds init` uses latest `Java archetype` version `1.3.0` for creating Java projects.\n- `cds init` now creates a `.cdsrc.json` file.\n\n## Version 1.4.0 - 2019-12-12\n\n### Added\n- Abort installation with a hint if `@sap/cds` is installed globally.\n- New project generation using `cds init`. See `cds help init` for details.\n- `cds init --add java` now creates Java projects with Spring Boot support.\n- `cds watch` now also watches `.properties` files\n\n### Fixed\n- Find locally installed modules like `passport`, so that `cds watch` and `cds run` behave symmetrically.\n\n## Version 1.3.0 - 2019-11-19\n\n### Fixed\n- `cds import` no longer fails due to Windows paths.\n\n### Also see\n- Changes of `@sap/cds` 3.20.0\n- Changes of `@sap/cds-sidecar-client` 1.1.2\n\n## Version 1.2.0 - 2019-10-31\n\n### Added\n- Experimental support for cds init\n\n\n## Version 1.1.3 - 2019-10-28\n\n### Fixed\n- `cds watch` now uses the same lookup paths for models as `cds run`\n\n### Also see\n- Changes of `@sap/cds` 3.18.3\n\n\n## Version 1.1.0 - 2019-10-08\n\n### Added\n- Added dependencies to `express` and `sqlite3` to ease development\n\n### Changed\n- Improved `cds watch`\n\n### Also see\n- Changes of `@sap/cds` 3.18.0\n- Changes of `@sap/edm-converters` 1.0.19\n- Changes of `@sap/generator-cds` 2.8.3\n- Changes of `@sap/cds-sidecar-client` 1.1.1\n\n\n## Version 1.0.6 - 2019-09-25\n\n### Changed\n\n- Updated version of `@sap/cds` to `3.17.8`\n\n\n## Version 1.0.5 - 2019-09-24\n\n### Changed\n\n- Updated version of `@sap/cds` to `3.17.7`\n\n\n## Version 1.0.4 - 2019-09-23\n\n### Changed\n\n- Updated version of `@sap/cds` to `3.17.6`\n\n\n## Version 1.0.3 - 2019-09-21\n\n### Changed\n\n- Updated version of `@sap/cds` to `3.17.5`\n\n\n## Version 1.0.2 - 2019-09-19\n\n### Changed\n\n- Updated version of `@sap/cds` to `3.17.4`\n\n\n## Version 1.0.1 - 2019-09-18\n\n### Changed\n\n- Updated version of `@sap/cds` to `3.17.2`\n\n\n## Version 1.0.0 - 2019-09-10\n\n### Added\n\n- Initial implementation\n- cds watch\n- cds import\n",
      "downloadsCurrentMonth": 185577,
      "downloadsCurrentFortnight": 89151,
      "downloads365": 1773305,
      "downloadsFortnightGrowth": -7.54,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 148963 },
        { "yearMonth": "2021-08", "downloads": 129431 },
        { "yearMonth": "2021-09", "downloads": 133145 },
        { "yearMonth": "2021-10", "downloads": 136091 },
        { "yearMonth": "2021-11", "downloads": 148360 },
        { "yearMonth": "2021-12", "downloads": 136064 },
        { "yearMonth": "2022-01", "downloads": 145607 },
        { "yearMonth": "2022-02", "downloads": 147699 },
        { "yearMonth": "2022-03", "downloads": 174062 },
        { "yearMonth": "2022-04", "downloads": 171948 },
        { "yearMonth": "2022-05", "downloads": 186688 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T17:49:25.384Z" },
        { "version": "1.7.1", "date": "2020-06-11T17:49:25.792Z" },
        { "version": "modified", "date": "2022-06-08T09:35:35.640Z" },
        { "version": "1.8.4", "date": "2020-06-11T17:49:32.915Z" },
        { "version": "1.1.1", "date": "2020-06-11T17:49:40.559Z" },
        { "version": "1.4.2", "date": "2020-06-11T17:49:48.045Z" },
        { "version": "1.4.4", "date": "2020-06-11T17:49:58.683Z" },
        { "version": "1.0.2", "date": "2020-06-11T17:50:11.583Z" },
        { "version": "1.6.2", "date": "2020-06-11T17:50:18.145Z" },
        { "version": "1.1.4", "date": "2020-06-11T17:50:24.699Z" },
        { "version": "1.8.0", "date": "2020-06-11T17:50:31.342Z" },
        { "version": "1.4.1", "date": "2020-06-11T17:50:37.914Z" },
        { "version": "1.1.3", "date": "2020-06-11T17:50:47.588Z" },
        { "version": "1.8.2", "date": "2020-06-11T17:50:55.474Z" },
        { "version": "1.3.0", "date": "2020-06-11T17:51:02.805Z" },
        { "version": "1.4.3", "date": "2020-06-11T17:51:09.896Z" },
        { "version": "1.8.5", "date": "2020-06-11T17:51:17.889Z" },
        { "version": "1.6.3", "date": "2020-06-11T17:51:24.638Z" },
        { "version": "1.3.1", "date": "2020-06-11T17:51:31.159Z" },
        { "version": "1.8.6", "date": "2020-07-24T12:12:56.333Z" },
        { "version": "2.0.7", "date": "2020-08-05T15:02:55.961Z" },
        { "version": "2.0.8", "date": "2020-08-20T08:40:40.409Z" },
        { "version": "3.0.0", "date": "2020-09-03T12:37:40.037Z" },
        { "version": "3.1.1", "date": "2020-10-14T08:01:06.978Z" },
        { "version": "3.1.2", "date": "2020-10-16T16:53:47.649Z" },
        { "version": "3.1.3", "date": "2020-10-26T12:06:58.828Z" },
        { "version": "3.1.4", "date": "2020-10-27T09:58:46.623Z" },
        { "version": "3.2.0", "date": "2020-11-04T14:20:51.970Z" },
        { "version": "3.2.1", "date": "2020-11-24T09:25:29.157Z" },
        { "version": "3.3.1", "date": "2020-12-04T14:50:21.345Z" },
        { "version": "3.3.2", "date": "2020-12-07T10:17:04.054Z" },
        { "version": "3.3.3", "date": "2020-12-18T13:39:09.795Z" },
        { "version": "3.3.4", "date": "2021-01-12T17:23:47.136Z" },
        { "version": "3.3.5", "date": "2021-01-20T15:07:00.924Z" },
        { "version": "3.4.0", "date": "2021-02-03T12:38:11.824Z" },
        { "version": "3.4.1", "date": "2021-02-17T17:16:25.637Z" },
        { "version": "3.4.2", "date": "2021-02-19T15:05:38.330Z" },
        { "version": "3.5.0", "date": "2021-03-02T14:04:43.484Z" },
        { "version": "3.5.1", "date": "2021-03-15T09:42:31.152Z" },
        { "version": "4.0.3", "date": "2021-04-07T14:27:23.940Z" },
        { "version": "4.0.7", "date": "2021-04-16T12:58:47.113Z" },
        { "version": "4.1.1", "date": "2021-05-10T15:25:11.348Z" },
        { "version": "4.1.2", "date": "2021-05-11T17:06:04.544Z" },
        { "version": "4.1.3", "date": "2021-05-11T18:32:42.632Z" },
        { "version": "4.1.4", "date": "2021-05-12T16:31:32.074Z" },
        { "version": "4.1.5", "date": "2021-05-25T09:05:46.396Z" },
        { "version": "4.3.1", "date": "2021-07-12T07:35:30.220Z" },
        { "version": "3.5.2", "date": "2021-07-26T08:15:12.489Z" },
        { "version": "4.3.2", "date": "2021-07-26T09:16:27.341Z" },
        { "version": "4.3.3", "date": "2021-07-26T15:24:38.886Z" },
        { "version": "4.4.0", "date": "2021-08-02T15:17:03.509Z" },
        { "version": "4.4.1", "date": "2021-08-03T08:28:51.881Z" },
        { "version": "3.5.3", "date": "2021-09-03T07:53:32.535Z" },
        { "version": "4.4.2", "date": "2021-09-03T10:13:32.753Z" },
        { "version": "4.5.0", "date": "2021-09-27T12:55:12.964Z" },
        { "version": "3.5.4", "date": "2021-09-30T13:34:47.979Z" },
        { "version": "4.5.2", "date": "2021-09-30T13:46:26.489Z" },
        { "version": "4.5.3", "date": "2021-10-05T07:30:31.998Z" },
        { "version": "4.5.4", "date": "2021-10-15T11:19:12.150Z" },
        { "version": "4.6.0", "date": "2021-11-02T12:31:29.963Z" },
        { "version": "4.6.2", "date": "2021-11-09T10:21:40.894Z" },
        { "version": "4.6.3", "date": "2021-11-16T11:13:09.914Z" },
        { "version": "4.6.4", "date": "2021-11-24T10:22:54.186Z" },
        { "version": "4.7.1", "date": "2021-12-06T17:32:48.191Z" },
        { "version": "4.7.2", "date": "2021-12-17T09:40:52.004Z" },
        { "version": "4.7.3", "date": "2022-01-17T10:34:58.036Z" },
        { "version": "4.8.0", "date": "2022-02-02T07:41:23.219Z" },
        { "version": "4.8.1", "date": "2022-02-16T10:25:50.675Z" },
        { "version": "4.8.2", "date": "2022-03-04T12:00:26.648Z" },
        { "version": "4.9.0", "date": "2022-03-29T10:19:49.174Z" },
        { "version": "4.9.1", "date": "2022-03-31T14:31:05.317Z" },
        { "version": "4.9.2", "date": "2022-04-12T07:35:32.700Z" },
        { "version": "4.9.3", "date": "2022-04-27T14:24:05.486Z" },
        { "version": "4.9.4", "date": "2022-05-09T13:01:24.103Z" },
        { "version": "4.9.5", "date": "2022-05-17T13:45:27.300Z" },
        { "version": "4.9.6", "date": "2022-06-07T09:30:57.389Z" },
        { "version": "4.9.7", "date": "2022-06-08T09:35:35.560Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-dk"
    },
    {
      "name": "cds-foss",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T19:31:54.219Z",
      "updatedAt": "2022-04-06T21:36:25.397Z",
      "readme": "# @sap/cds-foss\n\nThis package lists the open-source modules for CDS modules.\nIt’s only to be used as a dependency by SAP, not by consumer apps.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 3.1.1 - 2022-03-24\n\n### Changed\n\n- Bump `fs-extra` to 10.0.1\n\n## Version 3.1.0 - 2021-12-13\n\n### Changed\n\n- Bump `generic-pool` to 3.8.2\n\n## Version 3.0.0 - 2021-07-13\n\n### Changed\n\n- Bumped dependencies to current versions\n- Bump `fs-extra` to new major version 10\n\n## Version 2.3.1 - 2021-04-27\n\n### Added\n\n- Type definitions\n\n## Version 2.3.0 - 2021-04-01\n\n### Changed\n\n- Bumped dependencies to current versions\n\n## Version 2.2.2 - 2021-03-17\n\n### Fixed\n\n- Added missing entry for `index.js` in the package's `files` list\n\n## Version 2.2.1 - 2021-02-19\n\n### Fixed\n\n- Proper license link in package.json\n\n## Version 2.2.0 - 2020-10-26\n\n### Added\n- `big.js`\n- `xmlbuilder`\n\n## Version 2.1.0 - 2020-09-24\n\n### Changed\n- Bumped dependency versions\n\n## Version 2.0.0 - 2020-07-23\n\n### Changed\n- Bumped dependency versions\n\n## Version 1.2.0 - 2020-03-27\n\n### Changed\n- Bumped dependency versions\n\n## Version 1.1.0 - 2019-10-29\n\n### Added\n- Changelog\n\n## Version 1.0.0 - 2019-10-29\n\n### Added\n- Initial version of cds-foss package",
      "downloadsCurrentMonth": 380414,
      "downloadsCurrentFortnight": 182221,
      "downloads365": 4289085,
      "downloadsFortnightGrowth": -8.06,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 324974 },
        { "yearMonth": "2021-08", "downloads": 380841 },
        { "yearMonth": "2021-09", "downloads": 401942 },
        { "yearMonth": "2021-10", "downloads": 404397 },
        { "yearMonth": "2021-11", "downloads": 394972 },
        { "yearMonth": "2021-12", "downloads": 305842 },
        { "yearMonth": "2022-01", "downloads": 330535 },
        { "yearMonth": "2022-02", "downloads": 324204 },
        { "yearMonth": "2022-03", "downloads": 367039 },
        { "yearMonth": "2022-04", "downloads": 367400 },
        { "yearMonth": "2022-05", "downloads": 384863 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T19:31:54.219Z" },
        { "version": "1.2.0", "date": "2020-06-11T19:31:54.711Z" },
        { "version": "modified", "date": "2022-04-06T21:36:25.397Z" },
        { "version": "1.1.0", "date": "2020-06-11T19:32:02.218Z" },
        { "version": "2.0.0", "date": "2020-08-05T13:17:25.055Z" },
        { "version": "2.1.0", "date": "2020-10-13T13:42:11.043Z" },
        { "version": "2.2.0", "date": "2020-11-04T14:01:37.354Z" },
        { "version": "2.2.1", "date": "2021-02-22T15:14:47.724Z" },
        { "version": "2.3.0", "date": "2021-04-07T09:23:47.963Z" },
        { "version": "2.3.1", "date": "2021-05-10T15:11:04.304Z" },
        { "version": "3.0.0", "date": "2021-08-02T09:55:05.964Z" },
        { "version": "3.1.0", "date": "2022-02-02T08:53:15.427Z" },
        { "version": "3.1.1", "date": "2022-03-28T08:04:46.044Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-foss"
    },
    {
      "name": "cds-hana",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T18:10:50.519Z",
      "updatedAt": "2022-04-06T21:36:25.729Z",
      "readme": "# @sap/cds-hana\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-hana`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.25.2 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.25.1 - 2020-03-20\n\n### Removed\n\n- Timeout for update and delete statements (if needed: increase libuv's threadpool size via environment variable `UV_THREADPOOL_SIZE`)\n\n## Version 1.25.0 - 2020-03-19\n\n### Added\n\n - Single timestamp per transaction\n - default timeout 20s for acquiring client from pool\n\n## Version 1.24.0 - 2020-02-26\n\n### Added\n\n- Streaming from draft\n- Timeout for update and delete statements to handle locked records (@sap/hana-client only, default: 1s)\n\n## Version 1.23.0 - 2020-02-19\n\n### Changed\n\n- Use `like` instead of `contains` fuzzy search for `$search` queries\n\n## Version 1.22.0 - 2020-02-05\n\n### Added\n\n- Implement statement drop\n\n### Changed\n\n- SESSION_CONTEXT('APPLICATIONUSER') instead of SESSION_CONTEXT('XS_APPLICATIONUSER')\n- @sap/hana-client is preferred over hdb\n\n## Version 1.21.0 - 2019-12-10\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.21.0\n\n## Version 1.20.1 - 2019-11-29\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.20.1\n\n## Version 1.20.0 - 2019-11-19\n\n### Added\n\n- Method to set session context\n\n## Version 1.19.1 - 2019-10-30\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.19.1\n\n## Version 1.19.0 - 2019-10-29\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.18.1 - 2019-10-16\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.18.1\n \n## Version 1.18.0 - 2019-10-02\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.18.0\n\n## Version 1.17.1 - 2019-09-18\n\n### Fixed\n\n- Issue in streaming while using hana-client\n\n## Version 1.17.0 - 2019-09-09\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.17.0\n\n## Version 1.16.0 - 2019-08-21\n\n### Changed\n\n- Signature of the Client's constructor\n\n## Version 1.15.0 - 2019-07-23\n\n### Fixed\n\n- `@sap/hana-client` streaming extension is used only if necessary\n- Streaming supports `null` values\n\n## Version 1.14.0 - 2019-07-09\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.13.0\n\n## Version 1.13.0 - 2019-06-24\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.13.0\n\n## Version 1.12.0 - 2019-05-24\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.12.0\n\n## Version 1.11.1 - 2019-05-16\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.11.1\n\n## Version 1.11.0 - 2019-05-15\n\n### Changed\n\n- Improved performance by reducing calls to process.nextTick()\n\n## Version 1.10.0 - 2019-05-03\n\n### Added\n\n- Service related functions\n\n## Version 1.9.0 - 2019-04-16\n\n### Added\n\n- `client.stream()` for streaming large binaries\n\n### Changed\n\n- Make hdb default driver\n\n## Version 1.8.0 - 2019-03-29\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.8.0\n\n## Version 1.7.1 - 2019-03-19\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.7.0\n\n## Version 1.7.0 - 2019-03-19\n\n### Removed\n\n- Hana specific SQL generation for SELECT statements in case of 'contains'\n\n## Version 1.6.0 - 2019-02-25\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.6.0\n\n## Version 1.5.1 - 2019-02-12\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.5.1\n\n## Version 1.5.0 - 2019-02-06\n\n### Changed\n\n- Minimum node version 8.9.0\n- Improve expand performance\n\n## Version 1.4.0 - 2019-01-22\n\n### Added\n\n- `validate_certificate` and `hostname_in_certificate` to override certificate validation in local development mode\n- `.execute` supports placeholders in CQN\n\n## Version 1.3.0 - 2019-01-11\n\n### Changed\n\n- Use latest version of @sap/cds-sql\n\n## Version 1.2.0 - 2018-12-21\n\n### Added\n\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\n\n## Version 1.1.0 - 2018-12-12\n\n### Added\n\n- Support Deep Document CQNs\n\n## Version 1.0.3 - 2018-11-27\n\n### Changed\n\n- Throw db error instead of wrapping it in Sql Error\n- Use options.credentials instead of options directly\n\n### Fixed\n\n- Post processing of Binary, Boolean and Integer64\n\n## Version 0.10.0 - 2018-10-17\n\n- Refactoring and changes due to updated dependencies \n\n## Version 0.9.0 - 2018-10-04\n\n### Fixed\n\n - limit and order when expanding a to many association\n\n## Version 0.8.0 - 2018-09-17\n\n### Changed\n\n- Updated version of @sap/cds-sql to 0.10.0\n\n## Version 0.7.1 - 2018-09-05\n   \n### Changed\n\n- Improved npm-shrinkwrap\n\n## Version 0.7.0 - 2018-08-28\n\n### Added\n\n- Fallback in case certificate is used instead of ca at connect options\n\n### Changed\n\n- API documentation updated\n\n## Version 0.6.1 - 2018-08-09\n\n### Changed\n\n- Require submodules on demand\n\n## Version 0.6.0 - 2018-08-07\n\n### Added\n\n- Full SQL including eventual parameters to stack trace error message\n- Support for abstract placeholders #now and #user\n- Support for unary and binary expressions in contains\n\n### Changed\n\n- Increased default option of max. db connection clients to 100\n\n### Fixed\n\n- SQL error hides internal error messages and provides details in log\n\n## Version 0.5.1 - 2018-07-02\n\n### Fixed\n\n - Escaping of special characters in case of 'contains'\n\n## Version 0.5.0 - 2018-06-25\n\n### Added\n\n - Hana specific SQL generation for DROP statements\n - Hana specific SQL generation for SELECT statements in case of 'contains'\n - Added SQL Error to hide the internal information from other errors\n - support execution of blocks of statements\n - support plain mode of SQL name mapping\n\n### Fixed\n\n - CDS injection\n\n## Version 0.4.0 - 2018-05-02\n\n### Changed\n\n- connect options aligned to spec\n- support for latest CQN spec changes\n\n## Version 0.3.0 - 2018-04-16\n\n### Added\n\n- support CREATE statements\n\n## Version 0.2.0 - 2018-03-16 \n### Added\n\n- usage of npm-shrinkwrap\n\n### Changed\n\n- improved performance for expand in case of one-to-many relations\n",
      "downloadsCurrentMonth": 7706,
      "downloadsCurrentFortnight": 3361,
      "downloads365": 42572,
      "downloadsFortnightGrowth": -22.65,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 3642 },
        { "yearMonth": "2021-08", "downloads": 3262 },
        { "yearMonth": "2021-09", "downloads": 3207 },
        { "yearMonth": "2021-10", "downloads": 2623 },
        { "yearMonth": "2021-11", "downloads": 1997 },
        { "yearMonth": "2021-12", "downloads": 1911 },
        { "yearMonth": "2022-01", "downloads": 1797 },
        { "yearMonth": "2022-02", "downloads": 1408 },
        { "yearMonth": "2022-03", "downloads": 3953 },
        { "yearMonth": "2022-04", "downloads": 6530 },
        { "yearMonth": "2022-05", "downloads": 8008 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T18:10:50.519Z" },
        { "version": "1.7.1", "date": "2020-06-11T18:10:51.014Z" },
        { "version": "modified", "date": "2022-04-06T21:36:25.729Z" },
        { "version": "1.11.1", "date": "2020-06-11T18:10:57.338Z" },
        { "version": "0.9.0", "date": "2020-06-11T18:11:03.533Z" },
        { "version": "1.5.0", "date": "2020-06-11T18:11:11.686Z" },
        { "version": "1.25.1", "date": "2020-06-11T18:11:18.204Z" },
        { "version": "1.17.1", "date": "2020-06-11T18:11:24.308Z" },
        { "version": "1.5.1", "date": "2020-06-11T18:11:30.565Z" },
        { "version": "1.18.1", "date": "2020-06-11T18:11:36.565Z" },
        { "version": "1.16.0", "date": "2020-06-11T18:11:46.793Z" },
        { "version": "1.21.0", "date": "2020-06-11T18:11:52.931Z" },
        { "version": "1.20.0", "date": "2020-06-11T18:11:59.119Z" },
        { "version": "0.8.0", "date": "2020-06-11T18:12:06.100Z" },
        { "version": "1.24.0", "date": "2020-06-11T18:12:13.455Z" },
        { "version": "0.7.0", "date": "2020-06-11T18:12:19.643Z" },
        { "version": "1.0.3", "date": "2020-06-11T18:12:29.360Z" },
        { "version": "1.13.0", "date": "2020-06-11T18:12:35.641Z" },
        { "version": "0.7.1", "date": "2020-06-11T18:12:41.785Z" },
        { "version": "1.25.2", "date": "2020-08-18T10:30:33.681Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-hana"
    },
    {
      "name": "cds-lsp",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T20:50:50.692Z",
      "updatedAt": "2022-04-07T06:15:11.972Z",
      "readme": "# CDS Language Server\n\nThe CDS language server implements the Language Server Protocol ([LSP](https://github.com/Microsoft/language-server-protocol))\nfor SAP's Core Data Services ([CDS](https://cap.cloud.sap/docs/cds/cdl)).\nIt can be used in many popular IDEs like, for example, [Visual Studio Code](https://cap.cloud.sap/docs/get-started/tools#vscode)\nor [Eclipse](https://cap.cloud.sap/docs/get-started/tools#eclipse).\nIt provides many useful features for working with and enjoying CDS sources.\n\n## Features\n\n- Syntax highlighting via Textmate grammar\n\n- Additional semantic highlighting\n\n- Source code validation providing diagnostics (error messages, warnings, ...)\n\n- Where-used navigation to\n    - definition\n    - references\n    - highlight occurrences\n\n- Code completion for\n    - keywords\n    - identifiers incl. not yet imported identifiers with corresponding `using` statement\n    - using paths and artifacts incl. showing README.md documentation as details\n    - i18n translation IDs\n    - turn on/off formatting regions\n\n- Snippets for typical CDS language construct<br/> (with documentation extracts of [capire](https://cap.cloud.sap/docs/cds/cdl) explaining language concepts)<br/> like\n    - namespace and context\n    - using\n    - service\n    - type\n    - entity and projections, ...\n    - element, associations, and compositions\n    - extend and annotate\n    - annotations for documentation\n\n- Quick fixes to\n    - create using statement for unknown artifacts\n    - maintain missing translation\n    - convert `@cds.doc` and `@description` annotations to doc comments\n\n- Inventory (symbols) for\n    - current file\n    - workspace incl. query capabilities to select, for example, artifact types, names, also include reuse models\n\n- Hover information based on\n    - doc comments\n    - `@title`, `@description` and ~~`@cds.doc`~~ (deprecated) annotations\n    - translations\n\n- Code formatting\n    - whole document\n    - selected range\n    - on-the-fly when completing statements using ```;``` or ```}```\n    - on save (depending on the IDE)\n    - on paste (depending on the IDE)\n    - with many options, configurable using\n        - settings file\n        - command line switches\n        - Config UI with simulation of options for Visual Studio Code and Eclipse\n        - JSON schema for textual support\n    - also for markdown in doc comments\n\n- Code formatting via CLI\n\n- Translation support\n    - properties, JSON, and CSV files\n    - navigate to translation definitions from translation IDs like ```'{i18n>customerName}'```\n    - show translations on hover\n    - quickfix to maintain missing translations\n\n- Plugin framework for external handlers of annotation domains\n\n## Usage\n\nThe CDS language server can only be used as part of an IDE extension or plugin. See [Installation](#installation) for more details.\n\nA code formatter for CDS source files is included.\n\n## Installation\n\nRefer to the [installation details](./INSTALLATION.md).\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## 5.5.7 - 2022-04-05\n\n### Fixed\n\n- syntax highlighting in BAS\n\n### Changed\n\n- consume cds-compiler 2.13.8\n\n\n## 5.5.6 - 2022-03-31\n\n### Added\n\n- unit test for textmate grammar\n\n### Changed\n\n- ignore filtering is now lazy\n- formatting options docs are now generated\n- consume cds-compiler 2.13.6\n\n### Fixed\n\n- no longer set NODE_ENV to production\n- highlighting of single quoted strings\n\n\n## 5.5.5 - 2022-03-03\n\n### Added\n\n- schema file for `cds` section in `package.json`, `.cdsrc.json` and `.cdsrc-private.json`\n\n### Fixed\n\n- code completion for annotations no longer propose `@` if inside an annotation\n\n## 5.5.4 - 2022-02-28\n\n### Added\n\n- new code-formatting options for `action`s and `function`s:\n  + `alignActionNames` (aligns names)\n  + `alignActionReturns` (aligns `returns` keywords)\n\n### Changed\n\n- removed obsolete code-formatting option `alignAsInElements` (calculated fields use `=` now)\n- textmate grammar additionally compatible with Ruby regex engine\n\n### Fixed\n\n- code formatting:\n  + separate post-annotation with blank\n  + remove erroneous newlines around cardinality and filter in `select`\n  + separate projection items with newlines\n- code completion for annotations now correctly handle e.g: @aaa.| entity\n- references for annotations: plugins now get all file indexes\n\n## 5.5.3 - 2022-02-04\n\n### Added\n\n- test support for contribution providers\n\n### Changed\n\n- CDS language server back to Node 12 (5.5.0 required Node 14 which led to problems in BAS)\n- typings for contribution implementors are now bundled and accessible directly via `@sap/cds-lsp`\n\n### Fixed\n\n- format-cds CLI was not working under certain circumstances\n- syntax highlighting glitches\n- code formatting of nested projections\n\n## 5.5.0 - 2022-01-28\n\n### Added\n\n- Command-line interface for code formatter\n- CDS language server is now bundled and minified to speed up initialization\n- workspace symbols query now supports filters for kinds\n\n### Changed\n\n- consume cds-compiler 2.12.0\n- code completion for `index.cds` files will now render just the folder\n- performance: revalidate file on focus got only if stale index\n- memory consumption: indexes are now cached per file, no longer per compilation\n\n### Fixed\n\n- `enum` was not indexed \n- `composition` of aspect was not indexed\n- symbols contained localized entries with recent compiler versions\n- workspaces with _many_ workspace folders could lead to stop lsp\n- syntax highlighting is now better aligned with CDS grammar:\n  + multi-lined strings disabled\n  + backslash escaping disabled\n  + doubled quotes inside strings to reproduce single quotes\n  + element types now include scopes and length/size arguments\n\n\n## 5.4.0 - 2021-12-03\n\n### Added\n\n- progress indication for initialization, configuration changed, references and workspace symbols\n- support for protocol:selectionRange (though, VSCode has a bug and does not considers it currently)\n\n### Fixed\n\n- goto definition of certain references was wrong\n- symlinks were not followed when scanning workspace\n- (speedup) indexes might got stale even model file hasn't changed\n\n### Changed\n\n- consume cds-compiler 2.11.0\n- import artifact quickfix now shortens the using path\n- @sap/cds/common.cds now included by default\n- speedup initialization: no scan/read workspace, reusing source files first read by compiler, unless reference or workspaceSymbols require a scan\n- speedup: cache missed paths when compiler resolves using paths\n- speedup: only consider models from app/srv/db folders (according cds env) for references and workspace symbols\n- speedup when config changes: revalidation of files only if relevant settings changed\n- speedup resolution of using paths\n- speedup: cds env is now loaded synchronously in-process\n- speedup: calculate annotation diagnostics only for active file\n- speedup: dynamic registration of configurable requests now done asynchronously at startup\n- speedup: files to index for references now ordered by rank\n\n## 5.3.0 - 2021-09-23\n\n### Added\n\n- doc comments are automatically aligned\n\n### Fixed\n\n- certain localized elements were still indexed\n- new i18n entry in properties file has corrupted existing last entry\n- inconsistency in dependency calculation could have led to incorrect revalidations after a change\n\n### Changed\n\n- translation support is now lazy\n- performance improvements when translation files changed\n- last workspace/symbols are cached now to speed up CAP explorer\n- user setting cds.workspace.scanCsn has now three modes: Off, ByFileExtension (new default) and InspectJson \n\n\n## 5.2.0 - 2021-07-30\n\n### Added\n\n- new validation mode _ActiveEditorOnly_ (new default) for clients indicating support\n  via capability _workspace.didChangeActiveEditor_. \n  Other clients remain using _OpenEditorsOnly_ as default.\n  The new mode reduces number of compilations during editing and thus improves responsiveness.\n- new command to analyze using dependencies of CDS model files.\n  It will create a graphviz dot file that can be viewed with an appropriate viewer. \n  Getting an overview of file dependencies can help to keep your project architecture clean.\n\n### Changed\n\n- consume cds-compiler 2.5.0\n\n\n## 5.1.1 - 2021-07-05\n\n### Changed\n\n- consume cds-compiler 2.4.4\n- new performance relevant user settings\n    + `cds.workspace.debounceFastChanges`:  skip intermediate compilations when typing - enabled by default\n    + `cds.workspace.scanDependentModules`: skip scanning of node_modules - enabled by default, speeds up start-up time\n      Note: \n      - when using code completion for global identifiers (see `cds.completion.workspaceSymbols.minPrefixLength`) this option needs to be enabled\n      - for code completion of import paths in `using` statements this option needs to be enabled\n\n\n## 5.1.0 - 2021-06-22\n\n### Note\n\nThis is a quality release focusing on performance for large models.\nThere are new user settings and some have changed their defaults.\nBest performance is achieved with default settings, \nexcept `cds.contributions.enablement.odata` which should be switched `off` to speed up compilation, unless feature is needed.\n\nAdditonal hints to increase performance:\n- Within _SAP Business Application Studio_: close `CAP Data Models and Services` view. Otherwise it will ask for all workspace symbols at every change.\n- Settings: `Cds � Contributions � Enablement: Odata`: switch off as already mentioned above\n- Settings: `Editor � Goto Location: Alternative Definition Command`: do not select `goToReferences`. Otherwise being already on a definition will trigger find references which requires all dirty models to be recompiled.\n- Settings: `Workbench � Editor � Limit: Enabled`: switch on\n- Settings: `Workbench � Editor � Limit: Value`: lower the number. If open editors have `using` dependencies, a change in one editor will lead to a recompile of releated editors.\n- Commands `Go to References` / `Find All References` will recompile all models that might have changed due to a change in a depending model. If there are index models it often means the complete workspace is being recompiled. \nUntil a further change, reference calculation is resonably fast.\n- Command `Go to Symbol in Workspace` will recompile the complete workspace once, then it is reasonable fast\n- Changing settings in `CDS` section will currently perform a complete workspace invalidation i.e. required indexes will lead to recompilations on-demand as described above\n- Changing certain `cds.env` settings e.g. folder configurations will invalidate the workspace as well\n\n### Changed\n\n- consume cds-compiler 2.3.2\n- user settings\n    + cds.workspaceValidationMode new default: OpenEditorsOnly\n    + cds.workspace.scanCsn new settings with default switch off (before implicitly on)\n    + cds.quickfix.importArtifact new setting with default off (before implicitly on)\n\n\n## 5.0.5 - 2021-05-11\n\n### Fixed\n\n- asynchronous scanning of workspace blocked and led to high cpu usage (mostly on Linux/macOS) \n\n\n## 5.0.3 - 2021-05-06\n\n### Changed\n\n- consume cds-compiler 2.2.4\n- bug fixes\n\n## 5.0.1 - 2021-04-22\n\n### Changed/Fixed\n\n- where-used for namespaces also for compiler v2\n- new query flag for workspace symbols: /n to include implicit namespaces\n\n## 5.0.0 - 2021-04-02\n\n### Note\n\nThis is a major release which comes with @sap/cds-compiler v2.\nIt still supports cds-compiler v1 if used in your project\nor via global @sap/cds-dk.\n\n### Added\n\n- semantic highlighting - to be enabled via user setting `cds.semanticHighlighting.enabled`\n- new API for annotation handler to support semantic highlighting\n\n### Changed\n\n- consume cds-compiler 2.1.4\n\n## 4.4.1 - 2021-03-17\n\n### Added\n\n- preliminary support for cds-compiler 2.x\n\n## 4.4.0 - 2021-03-01\n\n### Changed\n\n- optimizations for decreased memory consumption\n- consume cds-compiler 1.50.0\n\n## 4.3.0 - 2021-02-01\n\n### Added\n\n- asynchronous initialization for annotation plugins (#923)\n- find references for annotation plugins (#929)\n- revalidate workspace after an initial annotation plugin installation (#930)\n\n### Changed\n\n- new user options for where-used request (#877)<br/>\nuntil now this functionality was enabled by default and now needs to be enabled via user options\n  + generic annotations - where a certain annotation 'class' or 'namespace' is used\n  + strings literals - where same string literals are used\n\n- consume cds-compiler 1.49.0\n- compatibility with early versions of cds-compiler 2.x\n- simplified consumption of CDS textmate grammar for Jetbrain IDEs\n\n### Fixed\n\n- dependency analysis for compilation:\nif a changed file has dependencies to the roots, but the\nroot models do not cover it, no longer it will compile multiple\ntimes\n\n- translation code action was not shown in the context of annotations\n- code completion for annotations had a trailing @ (#883)\n- annotation assignment spanned beyond semantical end (#838)\n- code formatting of brackets enclosing multiple elements in annotations had wrong indentation\n- indexing of `on` condition for elements was broken\n- update regex to highlight `one` and `many` keyword properly\n\n## 4.2.0 - 2020-11-27\n\n### Added\n\n- quickfix for deprecated identifiers\n- support for quickfixes in annotation handler\n- internal support for incremental text updates \n- improved supportability with extended statistic logs\n\n### Changed\n\n- consume cds-compiler 1.46.4\n\n### Fixes\n\n- for annotation handler and others\n\n## 4.1.2 - 2020-11-12\n\n### Changed\n\n- cds-lsp itself no longer dynamically registers file system watching for VSCode, BAS and Eclipse, as those configure it client-side\n\n### Fixes\n\n- bug fixes\n\n## 4.1.1 - 2020-11-06\n\n### Fixed\n\n- support for mono repo file system layouts did not work in certain cases\n- completion proposals for annotations were not shown at top of the list if inside an annotation\n\n## 4.1.0 - 2020-10-30\n\n### Added\n\n- support mono repo file system layouts\n- user option to format snippets after completion \n- user option to disable odata plugin\n- detection of slow running odata plugin (when validating) incl. user options to disable and fine tune\n- user option for omitRedundantTypesInSnippets for annotations\n\n### Changed\n\n- install/update contributions completely async\n- completion no longer suggests types when values are meant\n- project cds-lsp settings overrule all\n- consume cds-compiler 1.45.0\n\n### Fixed\n\n- validation of annotation plugins led to 100% cpu load\n- globally installed cds was not reliably found\n- code completion for annotation plugins did not work inside annotations at @ characters\n- bug fixes\n\n### Note\n\nFrom version 4.1.0 on, @sap/cds-lsp requires NodeJS 12.14+\n\n## 4.0.0 - 2020-09-30\n\n### Added\n\n- Plugin support for domain specific annotation handlers, featuring\n  - diagnostics\n  - code completion\n  - hover information\n  - goto definition\n  - quickfix to maintain translation\n  - auto-installation/update with user setting for npm registry\n\n- code completion inside string literals and `![...]` identifiers is automatically triggered by `/` character (additionally to `.` and `@`)\n  \n- snippets applied via code completion are now formatted\n\n- `action`s and their parameters are now indexed and support code navigation, hover etc.\n\n### Changed\n\n- consume cds-compiler 1.42.0\n\n### Fixed\n\n- bug fixes\n\n### Note\nFrom version 4.0.0 on, @sap/cds-lsp requires NodeJS 12.8+ (was 10.16+)\n\n## 3.5.0 - 2020-09-01\n\n### Added\n\n- Code completion proposes identifiers not yet imported in current file and generates corresponding `using` statement\n  - user setting: minimum number of characters required to propose those identifiers (`cds.completion.workspaceSymbols.minPrefixLength`). Default is -1 (=off)\n  - user setting: limit number of global identifiers (`cds.completion.workspaceSymbols.maxProposals`). Default is -1 (=unlimited)\n- Code formatting: options `whitespaceBeforeColon` and `whitespaceAfterColon` are now supported inside anonymous structure types\n- Code formatting: support configuration of alignment of COMPOSITION structs (option `alignCompositionStructToRight`)\n\n### Changed\n\n- consume cds-compiler 1.39.0\n\n## 3.4.3 - 2020-08-05\n\n### Changed\n\n- consume cds-compiler 1.35.0\n\n## 3.4.2 - 2020-07-28\n\n### Added\n\n- new user setting `cds.completion.workspaceSymbols` (default `off`) to add workspace symbols to code completion proposals\n- query for workspace symbols allows new option `/f` to consider fully qualified name\n\n### Changed\n\n- consume cds-compiler 1.34.0\n\n### Fixed\n\n- bug fixes\n\n## 3.4.0 - 2020-07-10\n\n### Added\n\n- support for docComments (/** ... */)\n  + hover over artifact will consider docComment\n  + snippet to create\n  + formatting will beautify docComments, incl. new option maxDocCommentLine\n  + quickFix to convert @cds.doc annotation to docComment incl. beautify\n  + distinct syntax highlighting for docComments\n- quickFix to generate using statement for not yet imported artifacts\n  + sorted by module and artifact name, beautified\n- semantic code completion for elements, enums, actions and parameters in annotate and extend (via cds-compiler 1.32.0)\n- syntax highlighting identifiers, including variants delimited with \\![...]\n- identifier completion proposals are prioritized by message severity\n- messages may now contain related information\n- added INSTALLATION.md for 3rd party IDE integrations\n\n### Changed\n\n- consume cds-compiler 1.32.0\n- updated README.md with feature list\n\n### Fixed\n\n- enum keyword was wrongly syntax highlighted\n- when an ignored source file is closed, potential messages are wiped\n- annotations of extensions were not indexed\n- bug fixes\n\n## 3.3.2 - 2020-04-26\n\n### Changed\n\n- remove optional odata annotation handler due to build issues\n\n## 3.3.1 - 2020-04-24\n\n### Changed\n\n- consume cds-compiler 1.26.2\n\n## 3.3.0 - 2020-04-24\n\n### Added\n\n- use global @sap/cds/common if locally not available\n\n### Changed\n\n- consume cds-compiler 1.26.0\n- (alpha): diagnostics and hover support for external annotation providers\n\n### Fixed\n\n- Minor fixes and improvements\n\n## 3.2.1 - 2020-03-30\n\n### Changed\n\n- consume cds-compiler 1.24.4\n\n## 3.2.0 - 2020-03-16\n\n### Changed\n\n* remove option for compiler location - LSP will always search Project->Global(via DK&CDS)->BuiltIn now\n- remove irrelevent formatting option (trimTrailingWhitespace)\n- consume cds-compiler 1.24.3\n\n### Fixed\n\n- formatting failed (seen in Eclipse, VSCode works) due to off-by-one error\n- global npm root for Business App Studio was not found with compiler.location option ProjectThenGlobalThenBuiltIn\n\n## 3.1.4 - 2020-03-04\n\n### Added\n\n- _extend_ definitions are now shown in outline and workspace symbols\n- api (alpha) for external annotation providers\n\n### Changed\n\n- consume cds-compiler 1.24.0\n\n## 3.1.3 - 2020-02-24\n\n### Added\n\n- pick up compiler and env via global cds-dk if cds not (yet) in project\n\n### Changed\n\n- consume cds-compiler 1.23.2\n\n## 3.1.2 - 2020-02-11\n\n### Added\n* code formatting\n    * options can now be overridden in source comments e.g. // @formatter tabSize:3\n    * new option to add/remove final line break\n    * new option to trim trailing whitespace\n\n### Changed\n* consume cds-compiler 1.23.1\n\n### Fixed\n* in some cases csn files with .json extension where not detected and thus workspace symbols were incomplete\n\n## 3.1.1 - 2020-01-30\n\n### Added\n* code formatting\n    * option to keep original empty lines\n* language server protocol 3.15: implement serverInfo in onInitialize\n\n### Fixed\n* formatting options were taken from homedir instead of preferring from project\n\n## 3.1.0- 2020-01-24\n\n### Added\n* translation support\n    * now with all formats supported by runtime (.properties, .json, .csv) incl. quick fixes to create missing entries\n    * now with customizations supported by runtime (filename, folder name, fallback_bundle, default_language)\n        * if entries of fallback language are missing but are defined for default language the latter ones are used\n        * if property files or json nodes or csv header only has default language defined (and not raw), quick fix will use default language\n        * quick fix for json and csv formats now try to keep entries sorted\n        * navigation from translation reference in cds source files to value supported for all formats\n* allow .cdsprettier.json to be located in user home dir\n\n### Changed\n* code formatting\n    * improve alignment of types, values, and preceding `:` or `=` operators\n* consume cds-compiler 1.22.0\n\n### Fixed\n* code formatting\n    * fix, improve, and allow to better adjust alignments and whitespace\n    * fix alignment of annotations in `annotate` statement\n    * fix casing of and indentation after `Association` and `Composition`\n    * fix formatting of parts of `select` statement in case of nesting and after `in`\n    * fix positioning of brace `{` after annotation if requested to be kept in previous line\n    * fix bug where token starting with `$` was merged\n* in the past file changes via watcher were automatically sent for all files in VSCode.\n  In recent versions of VSCode this has changed to only sent files supported by language server type (cds).\n  A fix was made to dynamically register for relevant side-files like\n  package.json, .cdsrc.json, all supported translation file formats, ignore files\n  to keep track of changed environment\n\n## 3.0.0 - 2019-12-16\nOfficial support for code formatting\n\n### Changed\n* code completion\n    * more snippet variants for extend\n    * no longer differ entity suggestions between within service or outside\n    * base types with parameters now suggested as simply keyword w/o params and additional suggestion as snippet (param names now enclosed in < >)\n    * changed label indicator for snippets from <> to ellipsis\n* consume cds-compiler 1.21.1\n* code formatting\n    * rework formatting options: add/remove options according to relevance, rename/group options for clarity, change default behavior in some cases\n    * various improvements, including in case statements and bracketed conditions\n\n### Fixed\n* code formatting\n    * fix alignment of annotations in views\n    * safely identify unreserved keywords\n\n## [2.1.21]\n### Fixes\n* Fix indentation after element definitions using Association or Composition\n\n## [2.1.20]\n### Added\n* support LSP configuration via settings file in workspace incl. logs in workspace\n\n### Changed\n* consume cds-compiler 1.20.3\n\n### Fixed\n* fix: extraction of root models did no longer work since @sap/cds#3.19\n* code formatting\n    * Fix indentation of keywords `union`, `except`, and `minus`\n    * Make alignments more consistent generally\n    * Improve readability by padding operators with blanks\n    * Improve alignment of bracketed conditions\n\n## [2.1.19]\n* consume cds-compiler 1.20.0\n* fixes and enhancements in code formatting\n\n## [2.1.18]\n* syntax highlighting: now supports 'default' keyword, plus minor fixes\n* removed dependencies to ts-md5 and vscode-uri\n* **for all IDE providers**: _out_ folder was renamed to _lib_\n* new internal URI handling: especially on Windows no longer encode drive letter colon\n\n## [2.1.17]\n* minor text polishing for config UI\n\n## [2.1.16]\n* fixes and enhancements for code formatting\n    * renamed settings file to .cdsprettier.json\n    * schema with parentOption and basic markdown support for label (new) and description\n* renamed tmLanguage for syntax highlighting\n* consume cds-compiler 1.19.2\n\n## [2.1.15]\n* fixes and enhancements for code formatting\n* clean-ups in LSP project setup\n* consume cds-compiler 1.19.1\n\n## [2.1.13]\n* fix regression: schema file was not included\n\n## [2.1.12]\n* fix minor issues\n\n## [2.1.11]\n* schema for formatting options with category, description, code sample, suboptions, enum values\n* now sits on node 10+\n* consume cds-compiler 1.18.1\n\n## [2.1.10]\n* Fixes and enhancement for syntax highlighting and code formatting\n\n## [2.1.9]\n* Syntax highlighting now uses different classifications (=colors) for annotations and comments\n* Support user settings in $LSP/.cds-lsp/.settings.json for IDEs which do not support user settings (Eclipse, Intellij, ...)\n* No longer report compiler messages for csn files\n* Preparation for config editor for formatting options\n* Deadlock detection and prevention for code formatting incl. option to cancel or try best in case\n* Use json parsing from compiler for csn files (which allows comments etc.)\n* Fixes and enhancements in source formatting\n* consume cds-compiler 1.17.3\n\n## [2.1.8]\n* code formatting - many fixes and enhancements\n    * now on by default but still experimental\n* syntax highlighting reworked for CDL and CQL keywords\n* where-used index now with using path segments\n* updated cds documentation (in code completion)\n* outline now shows contexts and services with fully qualified name\n* other fixes and improvements\n* consume cds-compiler 1.17.0\n\n## [2.1.7]\n* consume cds-compiler 1.16.2\n* fixes and improvements\n\n## [2.1.6]\n* beautify: improve alignment of comments and robustness\n* bug fix: outline showed entries not contained in file\n\n## [2.1.5]\n* consume cds-compiler 1.16.1\n* beautification for annotations and CQL\n\n## [2.1.4]\n* consume cds-compiler 1.15.0\n* user option to enable beautify: cds.experimental.beautify.enable (default false)\n\n## [2.1.3]\n* consume cds-compiler 1.14.0\n\n## [2.1.2]\n* consume cds-compiler 1.13.4\n* using compiler from project workspace now default\n\n## [2.1.1]\n* consume cds-compiler 1.13.1\n* performance improvements (less compilations and reduced memory footprint)\n* Links to folders in using statement are now resolved\n\n## [2.1.0]\n* consume cds-compiler 1.12.1\n* new where-used index with less memory consumption and support for references of custom annotations, built-in types, string constants and better tracking of identifiers in CQL\n* targets of using statement now rendered as links (via documentLink request)\n\n## [2.0.8]\n* performance optimizations for translation support\n* consume cds-compiler 1.10.0\n\n## [2.0.7]\n* new switch: cds.compiler.markMissingI18nDefault (default: off) to show problem markers for unresolved i18n references\n* bug fixes\n\n## [2.0.6]\n* consume cds-compiler 1.9.0\n* bug fixes\n\n## [2.0.5]\n* fix dependency installation in public cloud\n* consume cds-compiler 1.8.1\n\n## [2.0.4]\n* suggest @sap/cds/common as default path in using snippet if dependency to @sap/cds is present\n\n## [2.0.3]\n* fixes\n\n## [2.0.2]\n* consume cds-compiler 1.8.0\n\n## [2.0.1]\n* doc support (snippet for localization, hover on translation id)\n* consume cds-compiler 1.7.1\n* new unofficial switch cds.compiler.showInternalErrors\n* cds-compiler 1.7.1\n\n## [2.0.0]\n* Snippets for title and description\n* Code completion for translation references\n* Create translation properties file in quickfix if none existing\n* fixes\n\n## [1.4.25]\n* support for cds.doc\n* cds-compiler 1.6.0\n\n## [1.4.24]\n* Goto-definition for paths in using statement\n* New user preference to configure minimum severity of compilation problems\n* Compiler 1.5.0\n* Fix support of git and git+https dependencies\n\n## [1.4.23]\n* code completions for using statement paths\n* reworked snippets\n* minor fixes\n\n## [1.4.22]\n* CSN files are now detected and including in where-used index e.g. for workspace symbols\n* Introduce per-file compilation mode which speeds up where-used features expecially for large workspaces. User setting cds.compilation.mode (default PerFile)\n* Installation of dependencies in package.json files\n    * now configurable via user setting cds.autoInstallDependencies (default off)\n    * if turned on it only reinstalls if dependency definitions exist and have changed since last install. Other changes in package.json files are ignored\n    * package.json files are no longer reformatted when installing dependencies\n    * .cdsignore can be used to exclude paths from installation e.g. test folders with package.json files\n* In internal landscape within WebIDE it is now possible to use git-git-URLs to internal github in addition to https-git-URLs\n* Compiler 1.3.0\n* Trace now measures durations with high precision, includes compilation footprint (number of files and size of compiled sources) and shows memory changes\n",
      "downloadsCurrentMonth": 489,
      "downloadsCurrentFortnight": 156,
      "downloads365": 2615,
      "downloadsFortnightGrowth": -53.15,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 142 },
        { "yearMonth": "2021-08", "downloads": 146 },
        { "yearMonth": "2021-09", "downloads": 142 },
        { "yearMonth": "2021-10", "downloads": 36 },
        { "yearMonth": "2021-11", "downloads": 69 },
        { "yearMonth": "2021-12", "downloads": 90 },
        { "yearMonth": "2022-01", "downloads": 152 },
        { "yearMonth": "2022-02", "downloads": 193 },
        { "yearMonth": "2022-03", "downloads": 423 },
        { "yearMonth": "2022-04", "downloads": 483 },
        { "yearMonth": "2022-05", "downloads": 602 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T20:50:50.692Z" },
        { "version": "2.1.2", "date": "2020-06-11T20:50:51.152Z" },
        { "version": "modified", "date": "2022-04-07T06:15:11.972Z" },
        { "version": "3.0.0", "date": "2020-06-11T20:51:00.463Z" },
        { "version": "3.2.1", "date": "2020-06-11T20:51:08.059Z" },
        { "version": "3.1.3", "date": "2020-06-11T20:51:16.197Z" },
        { "version": "2.1.8", "date": "2020-06-11T20:51:23.608Z" },
        { "version": "2.1.4", "date": "2020-06-11T20:51:32.112Z" },
        { "version": "2.1.16", "date": "2020-06-11T20:51:39.485Z" },
        { "version": "3.3.2", "date": "2020-06-11T20:51:48.478Z" },
        { "version": "2.1.21", "date": "2020-06-11T20:51:57.624Z" },
        { "version": "3.4.3", "date": "2020-08-06T15:23:30.661Z" },
        { "version": "3.5.0", "date": "2020-09-03T12:58:14.801Z" },
        { "version": "4.0.0", "date": "2020-10-14T08:04:06.764Z" },
        { "version": "4.1.0", "date": "2020-11-04T14:27:04.787Z" },
        { "version": "4.1.1", "date": "2020-11-10T12:16:50.316Z" },
        { "version": "4.2.0", "date": "2020-12-04T14:53:50.803Z" },
        { "version": "4.3.0", "date": "2021-02-03T14:22:26.544Z" },
        { "version": "5.0.0", "date": "2021-04-07T12:52:16.364Z" },
        { "version": "5.0.1", "date": "2021-04-29T10:09:11.722Z" },
        { "version": "5.0.3", "date": "2021-05-10T11:03:21.257Z" },
        { "version": "5.0.5", "date": "2021-05-11T18:38:44.257Z" },
        { "version": "5.1.1", "date": "2021-07-09T11:41:04.845Z" },
        { "version": "5.2.0", "date": "2021-08-10T09:30:10.843Z" },
        { "version": "5.3.0", "date": "2021-09-27T12:23:42.037Z" },
        { "version": "5.4.0", "date": "2021-12-06T15:06:01.011Z" },
        { "version": "5.5.0", "date": "2022-01-31T09:33:45.643Z" },
        { "version": "5.5.3", "date": "2022-02-07T08:29:23.891Z" },
        { "version": "5.5.5", "date": "2022-03-04T09:19:18.222Z" },
        { "version": "5.5.6", "date": "2022-03-31T15:16:52.877Z" },
        { "version": "5.5.7", "date": "2022-04-07T06:15:11.884Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-lsp"
    },
    {
      "name": "cds-messaging",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T23:45:01.223Z",
      "updatedAt": "2022-04-06T21:36:26.138Z",
      "readme": "# @sap/cds-messaging\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-messaging`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.8.3 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.8.2 - 2020-03-19\n\n### Added\n\n- It is now possible to set the queue configuration with the `queueConfig` property in the credentials section\n  https://help.sap.com/doc/75c9efd00fc14183abc4c613490c53f4/Cloud/en-US/rest-management-messaging.html#_queuep\n\n### Removed\n\n- Bound events are not supported anymore\n\n## Version 1.7.0 - 2020-02-19\n\n### Changed\n\n- Updated version number for public release\n\n## Version 1.6.0 - 2020-02-05\n\n### Added\n\n- Support for `prefix` credentials options to prefix topics\n\n### Changed\n\n- You can no longer set the namespace outside of the `credentials` block\n\n### Fixed\n\n- Fixed bug where non-trimmed data causes problems in file-based messaging\n\n## Version 1.5.0 - 2019-12-10\n\n### Fixed\n\n- Receiving chunks can be an array with more than one item\n\n## Version 1.4.0 - 2019-11-19\n\n### Removed\n\n- The `namespace` property of a services does not need to be set anymore\n\n## Version 1.3.0 - 2019-10-29\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.2.1 - 2019-10-16\n\n### Added\n\n- `headers` parameter for `.emit`\n \n## Version 1.2.0 - 2019-10-02\n\n### Changed\n\n- Minor improvements\n\n## Version 1.1.1 - 2019-09-18\n\n### Added\n\n- File-based-messaging: If you set the file to true or \"default\", the default file name is chosen\n\n### Changed\n\n- File-based-messaging: Default file location ist set to <tmp_dir>/cds-message-box\n- File-based-messaging: File configuration is moved to credentials block\n- For external (cloud-event-based) services, the data property is now in message.data (before it was message.data.data)\n\n## Version 1.1.0 - 2019-09-09\n\n### Added\n\n- Queue name can be specified by setting the `queue` property\n- You can now use `srv.on('my/custom/topic', ()={...})` to register on topics\n  and `srv.emit('my/custom/topic, {...})` to emit messages with topics (If your\n  topic contains only one segment, you must write `topic:myCustomTopic`)\n\n### Changed\n\n- The hashes in generated topic or queue names now only consist of 4 characters\n- Default file name of 'file-based-messaging' is <temporary_directory>/message_box\n\n### Fixed\n\n- Special characters in topic and queue names are now omitted\n- Non-JSON payloads are now ignored\n- OAuthToken request occacionally fails\n\n### Removed\n\n- `srv.on.topic` and `srv.emit.to.topic`\n\n## Version 1.0.1 - 2019-08-26\n\n### Changed\n\n- Package '@sap/xb-msg-amqp-v100' is only dev dependency\n\n## Version 1.0.0 - 2019-08-21\n\n### Added\n\n- Initial implementation\n",
      "downloadsCurrentMonth": 146,
      "downloadsCurrentFortnight": 48,
      "downloads365": 21297,
      "downloadsFortnightGrowth": -51.02,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 3238 },
        { "yearMonth": "2021-08", "downloads": 2929 },
        { "yearMonth": "2021-09", "downloads": 2914 },
        { "yearMonth": "2021-10", "downloads": 2424 },
        { "yearMonth": "2021-11", "downloads": 1711 },
        { "yearMonth": "2021-12", "downloads": 1589 },
        { "yearMonth": "2022-01", "downloads": 1511 },
        { "yearMonth": "2022-02", "downloads": 1025 },
        { "yearMonth": "2022-03", "downloads": 1304 },
        { "yearMonth": "2022-04", "downloads": 156 },
        { "yearMonth": "2022-05", "downloads": 170 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T23:45:01.223Z" },
        { "version": "1.1.1", "date": "2020-06-11T23:45:01.702Z" },
        { "version": "modified", "date": "2022-04-06T21:36:26.138Z" },
        { "version": "1.8.2", "date": "2020-06-11T23:45:08.457Z" },
        { "version": "1.2.1", "date": "2020-06-11T23:45:14.981Z" },
        { "version": "1.5.0", "date": "2020-06-11T23:45:21.072Z" },
        { "version": "1.7.0", "date": "2020-06-11T23:45:27.636Z" },
        { "version": "1.4.0", "date": "2020-06-11T23:45:33.489Z" },
        { "version": "1.0.1", "date": "2020-06-11T23:45:39.544Z" },
        { "version": "1.8.3", "date": "2020-08-18T10:30:45.066Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-messaging"
    },
    {
      "name": "cds-mtx",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T22:13:31.287Z",
      "updatedAt": "2022-05-19T07:06:18.907Z",
      "readme": "# @sap/cds-mtx\n\nLibrary for multitenancy and extensibility support for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap).\n\nSee the documentation for [Multitenancy](https://cap.cloud.sap/docs/guides/deployment/as-saas) and [Extensibility](https://cap.cloud.sap/docs/guides/extensibility) for more details.\n\n## License\n\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\n",
      "changelog": "# Change Log\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 2.5.6 - 2022-05-18\n\n### Added\n- Tenant upgrades can now scale beyond a single database.\n- The tenant IDs are now exposed in the provisioning service (`/mtx/v1/provisioning/tenantIds`).\n- The SaaS Provisioning Service `UPDATE` event type is now also supported.\n- By setting cds environment `mtx.provisioning.lazymetadatacontainercreation: true`, the creation of the `__META__` container can be postponed to the first onboarding again. In case the onboarding request contains additional parameters for the container creation, these parameters will also be used for the creation of the `__META__` tenant, except if the parameters are also set via cds environment `mtx.provisioning.metadatacontainer`.\n\n### Fixed\n- When using a custom folder setup for native artifacts for HDI, the `cfg` folder is now correctly included for the HDI deployment\n\n## Version 2.5.5 - 2022-04-14\n\n### Changed\n- Improved logging in the context of requesting tokens.\n\n## Version 2.5.4 - 2022-04-04\n\n### Changed\n- If enabled via `cds.env.mtx.security.metadata-scope-checks`, the v2 CSN and EDMX APIs, as well as all metadata APIs are now scope-checked for `mtdeployment`.\n- Tokens sent to the command-line client are now reduced in scope for security reasons.\n\n### Fixed\n- `MT_LIB_TENANT-`-prefixed tenants used by the Java runtime are now correctly ignored by the `cds-mtx` sidecar.\n\n## Version 2.5.3 - 2022-03-14\n\n### Fixed\n- Provisioning parameters for the container creation can now also be set exclusively for the `__META__` container via cds environment `mtx.provisioning.metadatacontainer` or environment variable `CDS_MTX_PROVISIONING_METADATACONTAINER`. Tenant containers are not affected by that cds environment.\n- Configuration parameters for the `@sap/instance-manager` module can now be passes using cds environment `mtx.provisioning.instancemanageroptions` or environment variable `CDS_MTX_PROVISIONING_INSTANCEMANAGEROPTIONS`. See also [@sap/instance-manager](https://www.npmjs.com/package/@sap/instance-manager).\n- Upgrade calls for non-existing tenants do no longer create orphan HDI containers\n- More robust handling of inconsistent HDI container having no tenant id (error \"TypeError: Cannot read property 'toLowerCase' of undefined\")\n\n## Version 2.5.2 - 2022-01-26\n\n### Added\n- It is now checked if CDS annotations `@sql.append` and `@sql.prepend` are used in extensions. Using these annotations in extensions is currently not allowed.\n\n\n### Fixed\n- API `/mtx/v1/provisioning/tenant` does no longer return duplicate tenants in case of concurrent API calls.\n- Dependencies to `VCAP_SERVICES` environment have been removed. Service dependencies can now be fully defined via `cds.env`, except for databases shared between tenants.\n\n## Version 2.5.1 - 2021-12-09\n\n### Fixed\n- The `cds-mtx`-provided `.hdiconfig` now does not overwrite the application-provided one during deployment. This fixes an issue in parallel tenant upgrades for a large number of tenants, where the unlinking of the previously existing `.hdiconfig` failed occasionally.\n\n## Version 2.5.0 - 2021-12-06\n\n### Added\n- Binding of both service-manager and managed-hana is now supported. To enable it, you have to\nset the feature flag `cds.features.hybrid_instance_manager` to true. Please note that you also\nneed a compatible version of `@sap/instance-manager`.\n\n## Version 2.4.2 - 2021-12-02\n\n### Fixed\n- Authentication request for cds extension client is now returning token again\n- `hdbmigrationtable` files from an updated model with multiple new migration versions\nare now correctly merged with tenant specific `hdbmigrationtable` files\n\n\n## Version 2.4.1 - 2021-11-09\n\n\n### Fixed\n- Additional HDI_DEPLOY_OPTIONS do no longer affect the stability\nof the meta tenant creation\n- Reduction of redundant file system operations to improve stability of\ntenant upgrade\n\n## Version 2.4.0 - 2021-11-02\n\n### Added\n- Added parameter `subscriptionData` to `TenantPersistenceService.deleteTenant` so that\ncustom handlers get more information about the tenant that is deleted. Can be `{}`\nif there was a failed deletion attempt before that already removed the metadata.\n- Database deployment is now internally called via cds service `TenantPersistenceService` that\n  applications can add handlers for\n  ```\n  @protocol:'rest'\n  service TenantPersistenceService {\n      type JSON {\n          // any json\n      }\n      ...\n      action deployToDb(sourceDir: String, instanceData: JSON, deploymentOptions: JSON, additionalServices: JSON);\n  }\n  ```\n  Please note that this API is not meant to be called by applications but has been\n  introduced to allow applications to create handlers for custom logic to be executed\n  with the database deployment.\n- You can now diagnose deployed tables using `mtx/v1/diagnose/tables/<tenantId>`.\n\n### Changed\n- Parallel tenant upgrades have been optimized so that build results for non-extended tenants are shared and the number of database interactions is reduced.\n- An `EventTypeMissingError` is now thrown when the `eventType` parameter is missing at tenant creation.\n\n### Fixed\n- APIs `mtx.getEdmx(tenantId, service, language, odataVersion)` and the endpoint\n`/mtx/v1/metadata/edmx/<tenant-id>?name=<service>&language=<lang>&odataVersion=<version>`\nnow reuse the preuild edmx if `odataVersion` equals configured version (`cds.odata.version`)\n- Job list returned by diagnose API now contains correct results\n- Offboarding via CDS transactions is now working without an explicit `where` clause, i.e. you can simplify\n  ```js\n  await transaction.delete('tenant', tenantId).where({ subscribedTenantId: tenantId })\n  ```\n  into\n  ```js\n  await transaction.delete('tenant', tenantId)\n  ```\n\n## Version 2.3.4 - 2021-10-18\n\n### Fixed\n- Fixed full build logs not being part of the jobs logs.\n\n## Version 2.3.3 - 2021-10-14\n\n### Fixed\n- Job status reports for asynchronous tenant base model updates now contain the correct build and deployment logs.\n- With HANA build task configurations having subfolders, e. g. `sap/db` instead of `db`,\nnative HANA artifacts and csv files are now deployed correctly.\n- API `mtx/v1/model/content` now also works with tenant from url as specified\n- Update of tenant metadata containers on HANA Cloud no longer fails\n\n## Version 2.3.2 - 2021-10-06\n\n### Added\n- Additional user-provided services are now accessible for the deployment\n\n### Fixed\n\n- The `mtx/v1/diagnose/jobs` API will now correctly deliver job information about jobs in memory.\n- Compatibility with cds < @sap/cds@5.5.0 when running onboarding, upgrade or extend on java projects\nhas been fixed.\n\n## Version 2.3.1 - 2021-09-30\n\n### Fixed\n- Configuration `mtx.jobs.parallelUpgradeLimit` is now correctly limiting the number\nof parallel tenant upgrades.\n\n## Version 2.3.0 - 2021-09-27\n\n\n### Fixed\n- The maximum filename length of sources files that are stored with the tenant metadata has been\nincreased from 200 to 500. The tenant metadata store will be updated accordingly with any tenant\noperation (extend, upgrade).\n- Exceptions from asynchronous jobs are now visible in the application log again\n\n### Added\n- Tenant upgrade is now internally called via cds service `TenantPersistenceService` that\n  applications can add handlers for\n  ```\n  @protocol:'rest'\n  service TenantPersistenceService {\n      type JSON {\n          // any json\n      }\n      ...\n      action upgradeTenant(tenantId: UUID, instanceData: JSON, deploymentOptions: JSON) returns JSON;\n  }\n  ```\n  Please note that this API is not meant to be called by applications but has been\n  introduced to allow applications to create handlers for custom logic to be executed\n  with the tenant upgrade.\n- (BETA) It is now possible to get the edmx for services with a different odata version than the version configured\nfor the build. API `mtx.getEdmx(tenantId, service, language, odataVersion)` and the endpoint\n`/mtx/v1/metadata/edmx/<tenant-id>?name=<service>&language=<lang>&odataVersion=<version>` now supports a parameter `odataVersion`.\nPlease note that the output is compiled on-the-fly if `odataVersion` is specified which has potential impact on the performance.\nYou will also have to run a tenant upgrade for existing tenants (`/mtx/v1/model/upgrade`) to get a correct result.\n- Extensions can now be reset via API `/mtx/v1/model/reset` and `/mtx/v1/model/asyncReset`.\n- The job removal timeout is now configurable using `cds.mtx.jobs.removalTimeout`.\n- `mtx.jobs.maxParallelExecutions` can now be used to parallelize asynchronous jobs. The default is `2`.\n\n### Changed\n\n- Tenant updates are now parallelized. You can set the pool size using `mtx.jobs.parallelUpgradeLimit`. The default is `4`.\n- `mtx.jobs.intervalTimeout` is now deprecated, as the job queue does not require polling any more.\n- The default queue size for asynchronous jobs has been increased to `1000`.\n- In case of errors, the full `hdi-deploy` logs are now also printed for the default logging level.\n\n## Version 2.2.2 - 2021-08-26\n\n### Fixed\n- Fixed a regression where the `ExtendCDSdelete` scope was required for extension activations even without `undeployExtension` set to `false`.\n- Fixed an application crash at startup when `MTX_DISABLE_META_TENANT_CREATION` is set and no Instance/Service Manager credentials are available.\n\n### Added\n- There are new APIs for diagnosing memory, asynchronous jobs, and HDI containers. They can be called via\n  - `/mtx/v1/diagnose/memory`\n  - `/mtx/v1/diagnose/jobs`\n  - `/mtx/v1/diagnose/container/<tenantId>`\n\n  Note that with this change, the `/mtx/v1/model/diagnose` API is not available any more.\n  The new API will work out-of-the-box with `@sap/cds >= 5.5.0`, but you have to opt-in with earlier versions by setting\n\n  ```json\n  \"mtx\": {\n    \"api\": {\n      \"diagnose\": true\n    }\n  }\n  ```\n  in your `package.json`.\n\n## Version 2.2.1 - 2021-08-19\n\n\n### Changed\n- To reduce the number of logs, the HDI deployment output is now only logged in debug mode.\n- Tenant metdata request via `mtx/v1/provisioning/tenant/` are now cached.\n\n### Fixed\n- Native HANA table data properties files are now supported.\n- `MT_LIB_TENANT-*`-prefixed tenants are now ignored when requesting `mtx/v1/provisioning/tenant`. This fixes a compatibility problem when using the `CDS_MULTITENANCY_DATASOURCE_HANADATABASEIDS` environment variable.\n\n## Version 2.2.0 - 2021-07-30\n\n\n\n### Added\n- `working_set` and `exclude_filter` can now be used as `HDI_DEPLOY_OPTIONS`\n- Job log is now cleaned up with each startup to avoid garbage after application shutdowns or crashes.\nMaximum age of entries can be configured via cds configuration `mtx.jobs.cleanup.regular` and `mtx.jobs.cleanup.stale`\n(in milliseconds).\n\"Regular\" refers to finished or failed jobs (default is 30 min), \"Stale\" refers to queued or running jobs\n(default is 7 days).\n- (BETA) The tenant specific URL returned to the `saas-registry` can now be specified\nvia two environment variables `SUBSCRIPTION_URL` and `SUBSCRIPTION_URL_REPLACEMENT_RULES`.<br>\nThe following example uses the MTX application URL and turns it into the UI\napplication URL by replacing the application name suffix.\n  ```\n  SUBSCRIPTION_URL: ${protocol}://\\${tenant_subdomain}-${default-uri}\n  SUBSCRIPTION_URL_REPLACEMENT_RULES: [['srv', 'app']]\n  ```\n  `\\${tenant_subomain}` will be replaced by the domain of the subscribed tenant.\n\n### Changed\n\n- `/mtx/v1/metadata/edmx/` will now throw `ServiceMissingError` if no `name` query parameter is passed, instead of defaulting to `CatalogService`.\n- A `ModelNotFoundError` is thrown if no service model is found using `/mtx/v1/metadata/<modelType>/<tenantId>`.\n\n### Fixed\n- Access to metadata API (edmx, csn, languages, services) is now restricted\nto owner or provider tenant again\n- Allowed `HDI_DEPLOY_OPTIONS` are now filtered correctly\n- Correlation ids of requests are now forwarded correctly to asynchronous jobs for\nbetter supportability of mtx tenant operations.\n\n## Version 2.1.2 - 2021-07-09\n\n### Added\n\n- Tenant creation and deletion is now called via cds service `TenantPersistenceService` that\napplications can add handlers for\n```\n@protocol:'rest'\nservice TenantPersistenceService {\n    type JSON {\n        // any json\n    }\n\n    action createTenant(tenantId: UUID, subscriptionData: JSON) returns String;\n    action deleteTenant(tenantId: UUID);\n}\n```\n\n## Version 2.0.4 - 2021-06-14\n\n\n### Added\n\n- The global meta tenant creation in `cds.mtx.in` can now be disabled by setting the `MTX_DISABLE_META_TENANT_CREATION` environment variable\n\n### Fixed\n\n- More error types and semantic HTTP status codes have been added\n- Setting `MTX_ROLLBACK_CORRUPTED_CONTAINER` to `true` will now also delete and recreate an HDI container if its bindings are missing\n\n## Version 2.0.3 - 2021-06-08\n\n\n### Fixed\n\n- MTX Bootstrap has been adapted so that application service handlers can access mtx services\nagain\n- Logging is now consistently using cds.log\n- A caching problem with the metadata persistence factory is fixed\n\n### Changed\n\n- File system APIs are now asynchronous\n\n### Added\n\n- Allow array as configuration for mandatory scopes for subscription and update\n```\nmtx: {\n    security: {\n        \"subscription-scope\": [\"myApp.subscription\",\"myApp.superadmin\"],\n        \"deployment-scope\": [\"myApp.deployment\", \"myApp.superadmin\"]\n    }\n}\n```\n\n## Version 2.0.2 - 2021-05-21\n\n\n### Added\n- Internal on- and offboarding API for sidecar usecase: POST `/mtx/v1/internal/provisioning/subscribe`\nand POST `/mtx/v1/internal/provisioning/unsubscribe`\nwith payload\n```\n{\n  \"subscribedTenantId\": <tenant id>,\n  \"async\": <true/false>\n}\n```\n\n### Changed\n\n- A failed offboarding will now throw a `TenantOffboardingError`, instead of just logging the error.\n\n### Fixed\n\n- MTX APIs are now served idempotently. This fixes custom provisioning handlers not being invoked correctly.\n\n## Version 2.0.1 - 2021-05-10\n\n\n### Added\n\n- It's now possible to provide BTP dependencies in the `mtx` settings in your `.cdsrc.json` instead of implementing a custom handler, by setting `mtx.dependencies` accordingly.\n\n## Version 2.0.0 - 2021-05-07\n\n\n### Added\n- Saas provisioning operations GET, PUT and DELETE on API `/mtx/v1/provisioning/tenant/`\nnow require scope `mtcallback`. Upgrade calls on API `/mtx/v1/model/upgrade/` and\n`/mtx/v1/model/upgradeAsync/` now require scope `mtdeployment`.\nThis is now aligned with the\n[mandatory scope check required for the java runtime](../java/multitenancy#xsuaa-mt-configuration).<br>\nTo adapt the scope names to the java runtime scope configuration,\nthe scope names can be changed using the following cds configuration:\n```\nmtx: {\n    security: {\n        \"subscription-scope\": \"myApp.subscription\",\n        \"deployment-scope\": \"myApp.deployment\"\n    }\n}\n```\n- Support cds build API throwing BuildError instead of CompilationError.\n- Undeployment of extensions can now be done using a simplified API:\n`/mtx/v1/model/deactivate` with payload containing the extension sources to\nbe removed.\n```\n{\n  \"extension_files\": [\n    \"db/ext3.cds\"\n  ],\n  \"tenant\": \"<tenant id>\"\n}\n```\n- Support automatic roll-back for corrupted tenants when `MTX_ROLLBACK_CORRUPTED_CONTAINER` is set to `true`. This should _never_ be used in production, but only for integration tests.\n\n### Changed\n\n- The global data meta tenant (`GLOBAL_DATA_META_TENANT`) is now created on the first application startup, instead of the first onboarding\n- `@sap/hdi-deploy` and `@sap/instance-manager` are now directly required by `@sap/cds-mtx`. Therefore, they can be left out of your `package.json` `dependencies`\n- Job IDs are now generated using the `uuid` package\n- The default behavior of the `extension-allowlist` has changed. If `extension-allowlist`\nis not configured, it is not allowed to apply any extension.<br>\nExtensions can be easily enabled for all entities and services by adding the following\nto the configuration.\n```\nmtx: {\n  \"extension-allowlist\" = [\n      {\n          \"for\": [\"*\"]\n      }\n  ]\n```\n\n### Fixed\n- No more duplicate log entries in model upgrade result.\n\n## Version 1.2.3 - 2021-05-01\n\n\n### Fixed\n- Scope check for extension undeployment (ExtendCDSDelete) is enabled again\n\n## Version 1.2.2 - 2021-04-23\n\n\n## Version 1.2.1 - 2021-04-14\n\n\n### Fixed\n- Undeployment for model upgrade via `advancedOptions` working again\n- Undeployment of base model artifacts via 'undeploy.json' is working again\n- Unallowed `@cds.persistence.journal` annotations in extensions are now checked\n\n### Added\n- Size of job queue can now be configured via cds env\n```\nmtx: {\n  jobqueue: {\n    size: 10\n  }\n```\nor parameter `CDS_MTX_JOBQUEUE_SIZE=10`\n\n## Version 1.2.0 - 2021-03-30\n\n\n\n### Added\n- Multitenant applications now support extensions of entities using schema evolution based on `.hdbmigrationtable` files.\n- It is now possible to specify limits for the number of extension fields per entity.\nIf no limit is specified, the number of extension fields is not limited.\\\nIf this list exists, only entities and services contained in this list can be extended.\n```\n\"mtx\" : {\n  \"extension-allowlist\": [\n    {\n        'for': ['my.bookshop.Authors', 'my.bookshop.Books'],\n        'new-fields': 2\n    },\n    {\n        'for': ['CatalogService']\n    }\n  ]\n}\n```\n\n## Version 1.1.5 - 2021-03-09\n\n### Fixed\n- The extension API `/mtx/v1/content` now returns a correct json if a collection is requested with any version of\n@sap/cds used by the application. The `cds extend` command was returning `(intermediate result) is not iterable` because\nof an incorrect server response.\n- Connection handling has been improved. Errors of type `TimeoutError: Acquiring client from pool timed out` are reduced.\n\n## Version 1.1.3 - 2021-03-03\n\n\n### Fixed\n- `mtx/v1/model/status` now returns the job status again\n\n## Version 1.1.2 - 2021-03-01\n\n\n### Added\n- Multitenant applications **without tenant specific extensions** now support schema evolution based on `.hdbmigrationtable` files.\n- Provisioning parameters for the container creation can now also be set\nvia cds environment `mtx.provisioning.container` or environment variable `CDS_MTX_PROVISIONING_CONTAINER`.\\\nProvisioning parameters that are set in the subscription request to `mtx/v1/provisioning/tenant`\noverride the values from the environment.\n- Dedicated hdi deployment options can now be set via environment variable\n`HDI_DEPLOY_OPTIONS`, e. g. `HDI_DEPLOY_OPTIONS=\"{\\\"trace\\\": true }\"`. \\\nSee also\n[HDI deploy options](https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.05/en-US/a4bbc2dd8a20442387dc7b706e8d3070.html).\n\n### Fixed\n- Fix job-status handling.\n- Persist job errors, so they can be revealed even after MTX restart.\n\n## Version 1.0.28 - 2021-02-22\n\n### Added\n\n- It is now possible to pass hdi deployment parameters `undeploy` and `path-parameter` with the model upgrade\n(`mtx/v1/model/upgrade` and `mtx/v1/model/asyncUpgrade`)\n\n## Version 1.0.27 - 2021-02-01\n\n### Fixed\n\n- Extensions via `extend projection ` are now checked correctly by the linter.\n- Cross hdi container access is now supported properly (see also https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.05/en-US/a4bbc2dd8a20442387dc7b706e8d3070.html)\n\n## Version 1.0.26 - 2021-01-04\n\n\n### Fixed\n\n- When using`hdb` as driver for the database, the tenant updates are now logged properly\n\n## Version 1.0.25 - 2020-11-27\n\n\n### Added\n\n- Added enhanced authentication API needed for the @sap/cds-sidecar-client\nto support authentication with clientid/clientsecret from subscriber account.\nThis is needed to extend multitentant applications that are provided as services.\n\n### Fixed\n\n- Activation via cds-sidecar-client shows linter errors again\n- Offboarding of tenants does no longer cause a reconnect of cds\n(also requires update of @sap/cds dependency to minimum @sap/cds@4.3)\n\n## Version 1.0.24 - 2020-11-07\n\n\n### Fixed\n\n- Broken compatibility with hdb driver is now fixed\n\n## Version 1.0.23 - 2020-11-05\n\n\n### Fixed\n\n- MTX is now compatible with latest versions of @sap/hana-client\n- Linters can now handle extension projects with subfolders again\n- The connection pool used by mtx is now correctly updated on offboarding\neven with scaled applications\n\n## Version 1.0.22 - 2020-10-21\n\n\n### Fixed\n\n- The application url returned to the saas registry when using asynchronous onboarding\ncan now also be set in the header field 'application_url'\n- The build task used when onboarding do now use the right defaults. When being used\nas sidecar application, build task do no longer have to have the model option.\n- New entities with namespaces in extensions are now correctly\nchecked by the extensibility linter on extension activation\n- Call of onboarding and offboarding via javacript API is now fixed ('Cannot read property 'headers' of undefined')\n\n## Version 1.0.21 - 2020-09-29\n\n\n### Fixed\n\n- Connections to application after off- and onboarding now work properly\n\n## Version 1.0.20 - 2020-09-10\n\n\n### Fixed\n- Custom content upload using `/mtx/v1/model/updateCustomTenantContent` now also works\nwith cds 4\n\n## Version 1.0.19 - 2020-09-03\n\n### Added\n- The asynchronous model update API now accepts a callback URL (header field `MTX_STATUS_CALLBACK`) that\n  is called when the update is finished\n- A new REST API for activating extensions from csn sources was added. Use `POST /mtx/v1/model/activateCsn/`\nwith a csn JSON as payload. Example:\n\n```\n{\n        \"extensionCsn\": \"{\\\"extensions\\\":[{\\\"extend\\\":\\\"sap.capire.bookshop.Books\\\",\\\"elements\\\":{\\\"Z_ISBN_101\\\":{\\\"type\\\":\\\"cds.String\\\"}}}]}\",\n        \"tenant\": \"213a722e-ed91-43e2-adb4-3885b5e9d63e\"\n}\n```\n\n### Fixed\n- The sequence of extensions added through `cds.mtx.activate()` is now stable, even after\na base model update.\n\n## Version 1.0.18 - 2020-08-28\n\n## Version 1.0.17 - 2020-08-19\n\n### Fixed\n- Asynchronous basemodel upgrade and job status requests that failed when using @sap/cds@^4 are now fixed\n- Extensions that got lost when running onboarding multiple times are now preserved\n- The cds env configuration is now also available for service-manager\n\n## Version 1.0.16 - 2020-08-03\n\n### Added\n\n- Support for instances managed by Service Manager\n- Support for JWT Refresh Tokens to simplify token renewal in cds-sidecar-client\n\n### Fixed\n\n- Idempotent asynchronous offboarding\n- CDS 4 compatibility\n\n\n## 1.0.15 - 2020-07-01\n\n\n### Fixed\n- cds 4 compatibility\n- updated readme.md\n\n## 1.0.14 - 2020-05-27\n\n\n### Added\n\n- diagnose endpoint at /mtx/v1/model/diagnose/\n    - requires to be authenticated for the paas tenant\n    - requires scope \"MtxDiagnose\"\n- added memory status to debug logs. Activation with env MTX_LOG_MEMORY=true\n\n### Fixed\n\n- stablelized parallel extension activation\n- handling of asynchronous job status across multiple mtx application instances\n\n## 1.0.13 - 2020-04-27\n\n### Added\n\n- Logs are now collected by default when running asynchronous APIs\n    - can be disabled with environment variable `MTX_COLLECT_LOGS=true`\n    - logs can be limited by `MTX_LOG_COLLECTION_LIMIT=<limit>`\n\n- extensibility API that accepts csn notation `cds.mtx.activate(tenantId, csn)`\n\n### Fixed\n\n- handling of errornous undeploy.json files: error message now points to the root problem\n- handling of build errors: API now returns build and compile errors properly\n\n## 1.0.12\n\n### Added\n- reenabled the support of different domains (BETA)\n\n- Support for asynchronous extension activation to handle long-running jobs\n\n## 1.0.11\n\n### Added\n\n- Support of asynchronous onboarding as specified by the [saas-registry](https://wiki.wdf.sap.corp/wiki/display/CPC15N/SaaS+Application+Registration+in+CF#SaaSApplicationRegistrationinCF-Asynchronouscallbacksimplementation)\n\n## 1.0.10\n\n### Fixed\n- Compatibility with snapi compiler mode (env variable CDS_FEATURES_SNAPI=y)\n    - WARNING: in this mode, it is currently not checked if annotations of the basemodel are overwritten in the extension\n- Tenant upgrade with undeploy=true is now working properly\n\n## 1.0.9\n\n### Fixed\n- Compatibility with older versions of @sap/cds\n\n## 1.0.8\n\n### Added\n- possibility to store build / deployment logs in job log for asynchronous tenant update\n    - must currently be activated by environment variables (`MTX_COLLECT_LOGS=true` and `MTX_LOG_COLLECTION_LIMIT=<limit>`)\n- whitelist for entities and services that are allowed to be extended\n```\n\"mtx\": {\n           \"element-prefix\": \"Z_\",\n            \"namespace-blacklist\": [\"com.sap.\", \"sap.\"],\n            \"entity-whitelist\": [\"my.bookshop.Books\"],\n            \"service-whitelist\": [\"CatalogService\"]\n       }\n```\n\n### Fixed\n- Enable compatibility with SAP HANA cloud edition (no hdbcds support)\n- Deployment error with very old tenants (conflict with custom_tenant_objects.hdbtable)\n\n## 1.0.7\n\n### Added\n- allows to enable auto-undeploy in base model update request\n\n### Fixed\n- datatype error in synchronous base model update api\n\n## 1.0.6\n\n## 1.0.5\n\n### Added\n- accept database_id in onboarding request\n\n## 1.0.4\n\n### Added\n- enhanced namespace check for extensions\n- metadata API now supports ETags\n### Changed\n\n### Fixed\n- Datatype of custom content tables now LargeString\n- Bad request when sending non-json content\n\n### Removed\n\n## 1.0.3\n- Bug fixes\n\n## 1.0.2\n- Bug fixes\n\n## 1.0.1\n- Ignore namespace rules for customer extension entities\n- Enable hdbtabledata generation\n\n## 1.0.0 - 26.07.2019\nInitial release version.\n",
      "downloadsCurrentMonth": 17735,
      "downloadsCurrentFortnight": 8601,
      "downloads365": 147330,
      "downloadsFortnightGrowth": -5.84,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 7103 },
        { "yearMonth": "2021-08", "downloads": 8355 },
        { "yearMonth": "2021-09", "downloads": 10344 },
        { "yearMonth": "2021-10", "downloads": 10440 },
        { "yearMonth": "2021-11", "downloads": 10933 },
        { "yearMonth": "2021-12", "downloads": 9512 },
        { "yearMonth": "2022-01", "downloads": 13685 },
        { "yearMonth": "2022-02", "downloads": 15042 },
        { "yearMonth": "2022-03", "downloads": 16863 },
        { "yearMonth": "2022-04", "downloads": 18046 },
        { "yearMonth": "2022-05", "downloads": 17970 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T22:13:31.287Z" },
        { "version": "1.0.5", "date": "2020-06-11T22:13:31.693Z" },
        { "version": "modified", "date": "2022-05-19T07:06:18.907Z" },
        { "version": "1.0.12", "date": "2020-06-11T22:13:38.615Z" },
        { "version": "1.0.7", "date": "2020-06-11T22:13:44.968Z" },
        { "version": "1.0.13", "date": "2020-06-11T22:13:51.169Z" },
        { "version": "1.0.1", "date": "2020-06-11T22:13:58.002Z" },
        { "version": "1.0.10", "date": "2020-06-11T22:14:04.956Z" },
        { "version": "1.0.16", "date": "2020-08-05T14:55:01.318Z" },
        { "version": "1.0.17", "date": "2020-08-19T11:41:25.862Z" },
        { "version": "1.0.19", "date": "2020-09-03T16:00:55.281Z" },
        { "version": "1.0.20", "date": "2020-09-10T15:50:19.284Z" },
        { "version": "1.0.21", "date": "2020-10-14T07:14:02.880Z" },
        { "version": "1.0.22", "date": "2020-10-21T14:56:02.742Z" },
        { "version": "1.0.25", "date": "2020-12-04T14:44:26.507Z" },
        { "version": "1.0.27", "date": "2021-02-03T13:13:39.465Z" },
        { "version": "1.0.28", "date": "2021-02-23T08:15:50.525Z" },
        { "version": "1.1.2", "date": "2021-03-01T19:54:06.221Z" },
        { "version": "1.1.3", "date": "2021-03-03T15:30:39.508Z" },
        { "version": "1.1.5", "date": "2021-03-09T15:35:37.894Z" },
        { "version": "1.2.0", "date": "2021-04-07T09:41:30.621Z" },
        { "version": "1.2.1", "date": "2021-04-16T09:00:14.308Z" },
        { "version": "2.0.0", "date": "2021-05-10T15:37:24.127Z" },
        { "version": "2.0.1", "date": "2021-05-11T07:34:17.221Z" },
        { "version": "2.0.2", "date": "2021-05-25T09:00:20.284Z" },
        { "version": "2.1.2", "date": "2021-07-12T07:09:49.226Z" },
        { "version": "2.2.1", "date": "2021-08-23T07:41:02.294Z" },
        { "version": "2.2.2", "date": "2021-08-26T14:19:26.769Z" },
        { "version": "2.3.0", "date": "2021-09-27T13:21:35.933Z" },
        { "version": "2.3.1", "date": "2021-10-01T09:01:49.282Z" },
        { "version": "2.3.2", "date": "2021-10-06T13:02:25.031Z" },
        { "version": "2.3.3", "date": "2021-10-15T11:16:32.210Z" },
        { "version": "2.3.4", "date": "2021-10-18T15:15:53.898Z" },
        { "version": "2.4.0", "date": "2021-11-03T08:36:41.037Z" },
        { "version": "2.4.1", "date": "2021-11-09T14:45:13.041Z" },
        { "version": "2.4.2", "date": "2021-12-03T09:13:48.024Z" },
        { "version": "2.5.0", "date": "2021-12-06T13:41:29.016Z" },
        { "version": "2.5.1", "date": "2021-12-10T08:16:44.178Z" },
        { "version": "2.5.2", "date": "2022-02-01T13:48:26.379Z" },
        { "version": "2.5.3", "date": "2022-03-15T07:06:54.233Z" },
        { "version": "2.5.4", "date": "2022-04-07T14:56:18.682Z" },
        { "version": "2.5.5", "date": "2022-04-14T09:49:37.805Z" },
        { "version": "2.5.6", "date": "2022-05-19T07:06:18.804Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-mtx"
    },
    {
      "name": "cds-odata-v2-adapter-proxy",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-12T00:03:39.402Z",
      "updatedAt": "2022-05-18T11:08:44.422Z",
      "readme": "# @sap/cds-odata-v2-adapter-proxy (cov2ap)\n\n[CDS OData V2 Adapter Proxy](https://www.npmjs.com/package/@sap/cds-odata-v2-adapter-proxy) for [CDS OData V4 Services](https://cap.cloud.sap/docs/).\n\nExposes a full-fledged OData V2 service, converting OData V2 requests to CDS OData V4 service calls and responses back to OData V2.\n\nRuns in context of the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap/docs/)\nusing CDS Node.js module [@sap/cds](https://www.npmjs.com/package/@sap/cds) or CDS Java modules\n[com.sap.cds](https://mvnrepository.com/artifact/com.sap.cds).\n\n## Getting Started\n\n- Clone repository\n- Unit Tests: `npm test`\n- Test Server: `npm start`\n  - Service: `http://localhost:4004/v2/main`\n  - Metadata: `http://localhost:4004/v2/main/$metadata`\n  - Data: `http://localhost:4004/v2/main/Header?$expand=Items`\n\n> Code repository is only available SAP internal.\n\n## Usage\n\n### CDS Combined Backend (CAP Node.js) - Integrated (preferred)\n\nIn your existing `@sap/cds` project:\n\n- Run `npm install @sap/cds-odata-v2-adapter-proxy -s`\n- Create new file `server.js` in the service folder `srv` of your project: `./srv/server.js`\n\n```\nconst cds = require(\"@sap/cds\");\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\ncds.on(\"bootstrap\", app => app.use(proxy()));\nmodule.exports = cds.server;\n```\n\n- Run `cds run` from the project root to start the server:\n  - OData V2 service will be available at http://localhost:4004/v2/<service-path>\n  - OData V4 service will be available at http://localhost:4004/<service-path>\n\nNote that `@sap/cds` is a peer dependency and needs to be available as module as well.\n\n### CDS Combined Backend (CAP Node.js) - Custom\n\nIn your existing `@sap/cds` project:\n\n- Run `npm install @sap/cds-odata-v2-adapter-proxy -s`\n- Create new file `index.js` in the service folder `srv` of your project: `./srv/index.js`\n\n```\nconst express = require(\"express\");\nconst cds = require(\"@sap/cds\");\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\n\nconst host = \"0.0.0.0\";\nconst port = process.env.PORT || 4004;\n\n(async () => {\n  const app = express();\n\n  // OData V2\n  app.use(proxy());\n\n  // OData V4\n  await cds.connect.to(\"db\");\n  await cds.serve(\"all\").in(app);\n\n  const server = app.listen(port, host, () => console.info(`app is listing at ${host}:${port}`));\n  server.on(\"error\", error => console.error(error.stack));\n})();\n```\n\n- Run `node srv/index` from the project root to start the server:\n  - OData V2 service will be available at http://localhost:4004/v2/<service-path>\n  - OData V4 service will be available at http://localhost:4004/<service-path>\n\nNote that `@sap/cds` is a peer dependency and needs to be available as module as well.\n\n### CDS Standalone Backend (CAP Node.js or CAP Java)\n\n> For CAP Java projects prefer the Native OData V2 Adapter ([com.sap.cds/cds-adapter-odata-v2](https://mvnrepository.com/artifact/com.sap.cds/cds-adapter-odata-v2)).\n\nIn a new Node.js express project:\n\n- Run `npm install @sap/cds -s`\n- Run `npm install @sap/cds-odata-v2-adapter-proxy -s`\n- Place CDS models in `db` and `srv` model folders or provide a generated CSN\n- Create a new file `index.js` in the service folder `srv` of the project: `./srv/index.js`\n\n```\nconst express = require(\"express\");\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\n\nconst host = \"0.0.0.0\";\nconst port = process.env.PORT || 4004;\n\n(async () => {\n  const app = express();\n\n  // OData V2\n  app.use(proxy({\n    target: \"<odata-v4-backend-url>\", // locally e.g. http://localhost:8080\n    services: {\n      \"<odata-v4-service-path>\": \"<qualified.ServiceName>\"\n    }\n  }));\n\n  const server = app.listen(port, host, () => console.info(`app is listing at ${host}:${port}`));\n  server.on(\"error\", error => console.error(error.stack));\n})();\n```\n\n- A deployed version of CDS OData V2 Adapter Proxy shall have option `target` set to the deployed OData V4 backend URL.\n  This can be retrieved from the Cloud Foundry environment using `process.env`, for example,\n  from the `destinations` environment variable. Locally e.g. http://localhost:8080 can be used.\n- In proxy option `services`, every OData V4 service URL path needs to mapped to\n  the corresponding fully qualified CDS service name, e.g. `\"/odata/v4/MainService/\": \"test.MainService\"`,\n  to establish the back-link connection between OData URL and its CDS service.\n- Make sure, that your CDS models are also available in the project.\n  Those reside either in `db` and `srv` folders, or a compiled (untransformed) `srv.json` is provided.\n  This can be generated by using the following command:\n\n  ```\n  cds srv -s all -o .\n  ```\n\n- Alternatively, a `cds build` can be triggered as described in section \"Cloud Foundry Deployment\".\n- If not detected automatically, the model path can be set with option `model` (especially if `csn.json`/`srv.json` option is used).\n- Make sure, that all i18n property files reside next to the `csn.json` in a `i18n` or `_i18n` folder, to be detected by localization.\n- In a multitenant scenario in combination with a standalone proxy, the CDS model can be retrieved remotely via MTX endpoint (`mtxEndpoint`) by setting proxy option `mtxRemote: true`.\n- Proxy option `mtxEndpoint` can be specified as absolute url (starting with `http://` or `https://`), to be able to address MTX Sidecar\n  possibly available under a target different from OData v4 backend URL. If not specified absolutely, proxy `target` is prepended to `mtxEndpoint`.\n\n- Run `node srv/index` from the project root to start the server:\n  - OData V2 service will be available at http://localhost:4004/v2/<odata-v4-service-path>\n  - OData V4 service shall be available at http://localhost:8080/<odata-v4-service-path>\n\nNote that `@sap/cds` is a peer dependency and needs to be available as module as well.\n\n## Cloud Foundry Deployment\n\nWhen deploying the CDS OData V2 Adapter Proxy to Cloud Foundry, make sure that it has access to the whole CDS model.\nEspecially, it’s the case, that normally the Node.js server is only based on folder `srv` and folder `db` is then missing on Cloud Foundry.\n\nTo come around this situation, trigger a `cds build` during development time, that generates a `csn.json` at location `gen/srv/srv/csn.json`.\nPoint your Cloud Foundry deployment of the CDS OData V2 Adapter Proxy to the folder `gen/srv` (using manifest.json or MTA), so that\nthe CDS models can be found via file `srv/csn.json`, during runtime execution on Cloud Foundry.\n\nMake sure, that all i18n property files reside next to the `csn.json` in a `i18n` or `_i18n` folder, to be detected by localization.\n\n## SAP Fiori Elements V2\n\nThe OData V2 service provided by the CDS OData V2 Adapter Proxy can be used to serve an SAP Fiori Elements V2 UI.\n\nA running example can be tested as follows:\n\n- Clone repository\n- Start server: `npm run cds:run`\n- Open Fiori Launchpad:\n  http://localhost:4004/webapp/test/flpSandbox.html\n\n> Code repository is only available SAP internal.\n\n## Compression\n\nResponse compressions can be enabled, by registering the `compression` Node.js\nmodule in Express app at bootstrap time, e.g. in `srv/server.js`:\n\n```\nconst cds = require(\"@sap/cds\");\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\nconst compression = require(\"compression\");\n\ncds.on(\"bootstrap\", (app) => {\n  app.use(compression({ filter: shouldCompress }));\n  app.use(proxy());\n});\n\nfunction shouldCompress(req, res) {\n  const type = res.getHeader(\"Content-Type\");\n  if (type && typeof type === \"string\" && type.startsWith(\"multipart/mixed\")) {\n    return true;\n  }\n  // fallback to standard filter function\n  return compression.filter(req, res);\n}\n```\n\nThe shown compression filter function enables compression including\nOData Batch (`$batch`) calls with content type `multipart/mixed`.\n\n## Documentation\n\nInstantiates a CDS OData V2 Adapter Proxy Express Router for a CDS-based OData V4 Server:\n\n- **options:** CDS OData V2 Adapter Proxy options object\n  - **base:** Base path under which the service is reachable. Default is `''`.\n  - **path:** Path under which the proxy is reachable. Default is `'v2'`.\n  - **model:** CDS service model (path(s) or CSN). Default is `'all'`.\n  - **port:** Target port, which points to OData V4 backend port. Default is process.env.PORT or `4004`.\n  - **target:** Target, which points to OData V4 backend host/port. Default is e.g. `'http://localhost:4004'`.\n  - **targetPath:** Target path to which is redirected. Default is `''`.\n  - **services:** Service mapping object from url path name to service name. Default is `{}`.\n  - **mtxRemote:** CDS model is retrieved remotely via MTX endpoint for multitenant scenario. Default is `false`.\n  - **mtxEndpoint:** Endpoint to retrieve MTX metadata when option 'mtxRemote' is active. Default is `'/mtx/v1'`.\n  - **ieee754Compatible:** `Edm.Decimal` and `Edm.Int64` are serialized IEEE754 compatible. Default is `true`.\n  - **disableNetworkLog:** Disable networking logging. Default is `true`.\n  - **fileUploadSizeLimit:** File upload file size limit (in bytes). Default is `10485760` (10 MB).\n  - **continueOnError:** Indicates to OData V4 backend to continue on error. Default is `false`.\n  - **isoTime:** Use ISO 8601 format for type cds.Time (Edm.Time). Default is `false`.\n  - **isoDate:** Use ISO 8601 format for type cds.Date (Edm.DateTime). Default is `false`.\n  - **isoDateTime:** Use ISO 8601 format for type cds.DateTime (Edm.DateTimeOffset). Default is `false`.\n  - **isoTimestamp:** Use ISO 8601 format for type cds.Timestamp (Edm.DateTimeOffset). Default is `false`.\n  - **isoDateTimeOffset:** Use ISO 8601 format for type Edm.DateTimeOffset (cds.DateTime, cds.Timestamp). Default is `false`.\n  - **bodyParserLimit:** Request and response body parser size limit. Default is '100mb'.\n  - **returnCollectionNested**: Collection of entity type is returned nested into a `results` section. Default is `true`.\n  - **returnComplexNested**: Function import return structure of complex type (non collection) is nested using function import name. Default is `true`.\n  - **returnPrimitiveNested**: Function import return structure of primitive type (non collection) is nested using function import name. Default is `true`.\n  - **returnPrimitivePlain**: Function import return value of primitive type is rendered as plain JSON value. Default is `true`.\n  - **messageTargetDefault**: Specifies the message target default, if target is undefined. Default is `/#TRANSIENT#`.\n  - **caseInsensitive**: Transforms search functions e.g. substringof to case insensitive variant. Default is `false`.\n  - **propagateMessageToDetails**: Propagates root error or message always to details section. Default is `false`.\n  - **contentDisposition**: Default content disposition for media streams (inline, attachment), if not available or calculated. Default is `attachment`.\n  - **calcContentDisposition**: Calculate content disposition for media streams even if already available. Default is `false`.\n  - **quoteSearch**: Specifies if search expression is quoted automatically. Default is `true`.\n  - **fixDraftRequests**: Specifies if unsupported draft requests are converted to a working version. Default is `false`.\n\nAll CDS OData V2 Adapter Proxy options can also be specified as part of CDS project-specific configuration\nunder section `cds.cov2ap` and accessed via `cds.env.cov2ap`.\n\nOption `cds.env.odata.v2proxy.urlpath` is available to specify an OData V2 proxy url path\ndifferent from default `/v2` for CDS core.\n\n### CDS Annotations\n\nThe following CDS OData V2 Adapter Proxy specific annotations are supported:\n\n**Entity Level**:\n\n- `@cov2ap.analytics: false`: Suppress analytics conversion for the annotated entity, if set to `false`.\n- `@cov2ap.deltaResponse: 'timestamp'`: Delta response '\\_\\_delta' is added to response data of annotated entity with current timestamp information.\n- `@cov2ap.isoTime`: Values of type cds.Time (Edm.Time) are represented in ISO 8601 format for annotated entity.\n- `@cov2ap.isoDate`: Values of type cds.Date (Edm.DateTime) are represented in ISO 8601 format for annotated entity.\n- `@cov2ap.isoDateTime`: Values of type cds.DateTime (Edm.DateTimeOffset) are represented in ISO 8601 format for annotated entity.\n- `@cov2ap.isoTimestamp`: Values of type cds.Timestamp (Edm.DateTimeOffset) are represented in ISO 8601 format for annotated entity.\n- `@cov2ap.isoDateTimeOffset`: Values of type Edm.DateTimeOffset (cds.DateTime, cds.Timestamp) are represented in ISO 8601 format for annotated entity.\n\n**Entity Element Level**:\n\n- `@Core.ContentDisposition.Filename: <element>`: Specifies entity element, representing the filename during file upload/download.\n- `@Core.ContentDisposition.Type: <value>`: Controls the content disposition behavior in client/browser (`inline` or `attachment`).\n- `@cov2ap.headerDecode`: Array of sequential decoding procedures ('uri', 'uriComponent', 'base64') used for media entity upload header.\n\n### CDS Modelling\n\nCDS project configuration `cds.odata.version` shall be set to `v4`, as OData proxy maps to OData V4.\nCDS supports modelling features that are not compatible with OData V2 standard:\n\n- **Singletons:** Usage of annotation `@odata.singleton` is not supported in combination with OData V2\n- **Structured Types:** Usage of `cds.odata.format: 'structured'` is not supported in combination with OData V2\n- **Arrayed Types:** Usages of `array of` or `many` in entity element definitions lead to CDS compilation error: `Element must not be an \"array of\" for OData V2`\n\nTo provide an OData V2 service based on the CDS OData V2 Adapter Proxy, those CDS modelling features must not be used.\nIn general any CDS OData API flavor must not be used in combination with CDS OData V2 Adapter Proxy.\n\n## Logging\n\nLogging is controlled with environment variable `XS_APP_LOG_LEVEL`. Especially, proxy requests and proxy responses\nincluding url and body adaptations can be traced using `XS_APP_LOG_LEVEL=debug`.\nDetails can be found at [@sap/logging](https://www.npmjs.com/package/@sap/logging).\n\n### Logging Layers\n\nLogging layers of CDS OData V2 Adapter Proxy start with `cov2ap`.\n\n#### XS_APP_LOG_LEVEL = error\n\n- `cov2ap/Authorization` : Error during authorization header parsing\n- `cov2ap/MetadataRequest` : Error during metadata request processing\n- `cov2ap/Request` : Error during request processing\n- `cov2ap/Response` : Error during response processing\n- `cov2ap/Batch` : Error during batch processing\n- `cov2ap/AggregationKey` : Error during aggregation key determination\n- `cov2ap/MediaStream` : Error during media stream processing\n- `cov2ap/ContentDisposition` : Error during content disposition determination\n- `cov2ap/FileUpload` : Error during file upload processing\n\n#### XS_APP_LOG_LEVEL = warning\n\n- `cov2ap/Service` : Service definition not found for request path\n- `cov2ap/Context` : Definition not found in CDS meta model\n- `cov2ap/Batch` : Response changeset order does not match request changeset order\n\n#### XS_APP_LOG_LEVEL = debug\n\n- `cov2ap/Request`: Log of OData V2 client request (url, body, headers)\n- `cov2ap/ProxyRequest`: Log of OData V4 proxy request (url, body, headers)\n- `cov2ap/ProxyResponse`: Log of OData V4 proxy response (status code/message, body, headers)\n- `cov2ap/Response`: Log of OData V2 client response (status code/message, body, headers)\n\n## Features\n\n- GET, POST, PUT / MERGE / PATCH, DELETE\n- Batch support\n- Actions, Functions\n- Analytical Annotations\n- Deep Expands/Selects\n- JSON format\n- Deep Structures\n- Data Type Mapping\n- IEEE754Compatible\n- Messages / Error Handling\n- Location Header\n- $inlinecount / $count / \\$value\n- Entity with Parameters\n- File Upload (binary, multipart/form-data)\n- Stream Support (Octet and Url)\n- Content Disposition\n- Content-ID\n- Multi-Tenancy\n- Extensibility\n- Draft Support\n- Search Support\n- Localization\n- Temporal Data\n- Tracing Support\n- Logging Correlation\n- ETag Support (Concurrency Control)\n- Next Links (skiptoken)\n- Delta Responses (deltatoken)\n- Continue-On-Error\n- X-HTTP-Method\n\n## OData V2/V4 Delta\n\n[What’s New in OData Version 4.0](http://docs.oasis-open.org/odata/new-in-odata/v4.0/cn01/new-in-odata-v4.0-cn01.html)\n\n## License\n\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n<!-- New version information is automatically added after line 8 -->\n\n## Version 1.8.19 - 2022-05-18\n\n### Fixed\n\n- Don't propagate `host` header to forwarded calls.\n\n## Version 1.8.18 - 2022-05-13\n\n### Fixed\n\n- Propagate all headers to forwarded calls.\n\n## Version 1.8.17 - 2022-05-12\n\n### Fixed\n\n- Filter out annotation elements in response data starting with `odata.` or including `@odata.`.\n- Elements starting with `@` are excluded as before.\n- Propagate special headers to forwarded calls (i.e. starting with `dwc`).\n\n## Version 1.8.16 - 2022-04-28\n\n### Fixed\n\n- Fix if elements are annotated with `@cds.api.ignore`\n- Abort file upload when limit is reached\n\n## Version 1.8.15 - 2022-04-25\n\n### Fixed\n\n- Remove internal repository reference\n- Document that Singletons are not available in OData V2\n- Ignore omitted elements annotated with `@cds.api.ignore`\n- Support validated for absolute context urls via `cds.odata.contextAbsoluteUrl`.\n- Skip aggregation for measures with aggregation `#NONE` and `#NOP`\n- Support `$count` aggregations for measures with aggregation `#$COUNT`\n- Changed OData type mapping for `Edm.Byte` to `cds.Integer`\n\n## Version 1.8.14 - 2022-04-08\n\n### Fixed\n\n- Upgrade `@sap/logging` to fix vulnerability\n\n## Version 1.8.13 - 2022-04-07\n\n### Fixed\n\n- Remove peer dependency to prevent workspace failures\n\n## Version 1.8.12 - 2022-04-01\n\n### Fixed\n\n- Refactorings to support universal CSN\n- Refactorings to support metadata prototype layering\n- Include `search` in `$apply` aggregations\n\n## Version 1.8.11 - 2022-03-11\n\n### Fixed\n\n- Fix for `falsy` values during data type conversion for functions and actions\n- Add OData V2 links via link providers to HTML index page\n\n## Version 1.8.10 - 2022-03-01\n\n### Fixed\n\n- Refactor locale determination from CDS\n- Serialize body to string in case of type `object` before calculating content length\n- Support `AnalyticalContext` annotations in addition to deprecated `Analytics` annotations\n\n## Version 1.8.9 - 2022-02-09\n\n### Fixed\n\n- Stabilization fixes\n\n## Version 1.8.8 - 2022-02-08\n\n### Fixed\n\n- Proxy option `calcContentDisposition` to calculate `content-disposition` header even if already available\n\n## Version 1.8.7 - 2022-02-03\n\n### Fixed\n\n- Proxy option `fixDraftRequests` to convert unsupported draft request to a working version (default: false)\n\n## Version 1.8.6 - 2022-02-01\n\n### Fixed\n\n- Fix README for combined custom backend bootstrap\n- Allow annotation `@odata.type` in lower case format\n- Allow type prefix `datetime` in addition to `datetimeoffset`\n- Add peer dependency @types/express\n\n## Version 1.8.5 - 2022-01-17\n\n### Fixed\n\n- Prevent additional call to fill `content-disposition`, in case header is already provided with stream\n- Support OData V2 `binary` media upload via POST for entities with element of type `Binary` and without `@Core.MediaType` annotations\n- Return server error as response, if OData V4 server does not support media upload without `@Core.MediaType` annotation\n  - e.g. `No payload deserializer available for resource kind 'PRIMITIVE' and mime type 'image/png'`\n\n## Version 1.8.4 - 2021-12-06\n\n### Fixed\n\n- Unquote action/function parameter of types `cds.UUID`, `cds.Binary`, `cds.LargeBinary`, `cds.Date`, `cds.Time`, `cds.DateTime`, `cds.Timestamp`\n\n## Version 1.8.3 - 2021-12-06\n\n### Fixed\n\n- Prevent parsing body for HEAD requests against $batch\n- Fix single quotes of URL parameters for request body conversion respecting line breaks\n- Introduce proxy option `quoteSearch` to control search expression quoting. Default is `true`\n- Fix bound action call to entity key having association type\n- Fix action/function parameter of types date, time, datetime\n\n## Version 1.8.2 - 2021-12-01\n\n### Fixed\n\n- Catch and handle unexpected errors during proxy request processing\n- Validate request body and content-type in request\n- Switch of internal NPM repository (Nexus -> Artifactory)\n\n## Version 1.8.1 - 2021-11-19\n\n### Fixed\n\n- Change action/function return type value representation for primitive types to include nesting to conform to OData standard\n- Introduce proxy options `returnPrimitiveNested: false` to keep previous action/function return value representation for primitive types\n- Introduce proxy option `returnCollectionNested` to control collection of entity type nesting into a `results` section. Default is `true`\n- Fill standardized `x-correlation-id` request header in addition to `x-correlationid` for proxy requests\n\n## Version 1.8.0 - 2021-11-17\n\n### Fixed\n\n- Add README documentation for annotation `@Core.ContentDisposition.Type`\n- Change `content-disposition` header default from `inline` to `attachment`\n- Proxy option `contentDisposition` to specify default content disposition for media streams (inline, attachment)\n- Unescape single quotes of action URL parameters for request body conversion\n- Fix action/function return type representation for `cds.LargeString`\n- Improve formatting of README and CHANGELOG\n- Adjust repository url\n\n## Version 1.7.16 - 2021-11-10\n\n### Fixed\n\n- `Content-Disposition` header filename is now url encoded\n- Annotation `@Core.ContentDisposition.Type` to specify content disposition type (e.g. inline, attachment (default), etc.)\n\n## Version 1.7.15 - 2021-11-08\n\n### Fixed\n\n- Quote key parts of type `cds.LargeString` for uri generation\n\n## Version 1.7.14 - 2021-11-03\n\n### Fixed\n\n- Decode url key values before conversion\n\n## Version 1.7.13 - 2021-10-18\n\n### Fixed\n\n- Escape quotes in search string before quoting\n\n## Version 1.7.12 - 2021-10-07\n\n### Fixed\n\n- Proxy option `propagateMessageToDetails` to always propagate root error or message to details section\n- Support for fetching Edmx metadata locally via `cds.mtx.getEdmx`\n- Support for fetching Edmx metadata remotely via MTX service url\n\n## Version 1.7.11 - 2021-09-09\n\n### Fixed\n\n- Convert ContentID for warning messages and error body and propagate to details\n- Fix batch boundary parsing from content type with charset definition\n- Functions `startswith` and `endswith` respect proxy option `caseInsensitive`\n\n## Version 1.7.10 - 2021-08-31\n\n### Fixed\n\n- Fix query options not part of action parameters\n- Proxy option `caseInsensitive` to transform search function e.g. `substringof` to case insensitive variant\n\n## Version 1.7.9 - 2021-08-06\n\n### Fixed\n\n- Add metadata type of inline return type for actions and functions\n- Proxy option `messageTargetDefault` to specify default message target, if undefined\n- Empty proxy option `messageTargetDefault` leaves message target untouched\n\n## Version 1.7.8 - 2021-07-28\n\n### Fixed\n\n- Support for verb tunneling, i.e., `POST` with `X-HTTP-Method` header\n\n## Version 1.7.7 - 2021-07-27\n\n### Fixed\n\n- Support inline return type for actions and functions\n- Default undefined message target to `/#TRANSIENT#`\n- Return 404 for unknown service name during model compilation\n- Enhance logging to contain service name for service lookup from request\n\n## Version 1.7.6 - 2021-07-01\n\n### Fixed\n\n- Prevent exception on handling entities without keys\n\n## Version 1.7.5 - 2021-06-21\n\n### Fixed\n\n- Prevent unnecessary expensive `isExtended` call per request using metadata cache\n\n## Version 1.7.4 - 2021-06-18\n\n### Fixed\n\n- Support annotation `@odata.Type` for non-UUID CDS types\n- Set header `x-cds-odata-version: v2` to indicate target OData version to CDS runtime\n- Explain usage of response compression in README\n\n## Version 1.7.3 - 2021-06-11\n\n### Fixed\n\n- Change OData V4 `continue-on-error` default to `false`\n- Proxy option `continueOnError: true` available to activate `continue-on-error`\n\n## Version 1.7.2 - 2021-06-10\n\n### Fixed\n\n- Fix content type normalization to preserve charset\n\n## Version 1.7.1 - 2021-05-28\n\n### Fixed\n\n- Fix return type determination for external services definitions\n\n## Version 1.7.0 - 2021-05-27\n\n### Fixed\n\n- Change action/function return type value representation for complex and primitive types\n- Introduce proxy options `returnComplexNested` and `returnPrimitivePlain` to keep previous action/function return value representation\n\n## Version 1.6.3 - 2021-05-26\n\n### Fixed\n\n- Convert additional targets of response messages\n- Transform leading part of locale to lower-case\n- Fix local entity name determination for scoped entities, e.g. `.texts`\n\n## Version 1.6.2 - 2021-04-29\n\n### Fixed\n\n- Merge headers and body of POST and PUT media entity upload calls\n- Handle error case in PUT media entity upload call\n\n## Version 1.6.1 - 2021-04-12\n\n### Fixed\n\n- Handle authorization header correctly in media upload\n\n## Version 1.6.0 - 2021-04-06\n\n### Fixed\n\n- Final CDS 5 compatibility version\n\n## Version 1.5.11 - 2021-03-26\n\n### Fixed\n\n- CDS 5 compatibility (>= 1.6.0 needed for CDS 5)\n- Support `content-disposition` header in media entity upload\n- Introduction of element annotation `@cov2ap.headerDecode` to decode header values\n\n## Version 1.5.10 - 2021-03-18\n\n### Fixed\n\n- Fix crash for bound action without return type\n- Consider bound action binding parameter for messages targets\n\n## Version 1.5.9 - 2021-03-02\n\n### Fixed\n\n- Improve TypeScript typings\n\n## Version 1.5.8 - 2021-02-25\n\n### Fixed\n\n- Update `@sap/logging` dependency\n\n## Version 1.5.7 - 2021-02-19\n\n### Fixed\n\n- Restore backwards compatibility with CDS 3\n\n## Version 1.5.6 - 2021-02-12\n\n### Fixed\n\n- Convert response message targets\n\n## Version 1.5.5 - 2021-01-27\n\n### Fixed\n\n- Align determination of locale including sub tags (e.g. `zh-TW`)\n\n## Version 1.5.4 - 2021-01-26\n\n### Fixed\n\n- Support action/function array parameter types\n- Introduce proxy option `bodyParserLimit` for body parser size limit\n\n## Version 1.5.3 - 2021-01-12\n\n### Fixed\n\n- Improve TypeScript typings\n\n## Version 1.5.2 - 2021-01-11\n\n### Fixed\n\n- Add TypeScript typings for proxy constructor\n\n## Version 1.5.1 - 2020-12-21\n\n### Fixed\n\n- Normalize service root path in service root xml to include trailing slash\n\n## Version 1.5.0 - 2020-12-16\n\n### Fixed\n\n- Update minor version\n\n## Version 1.4.63 - 2020-12-15\n\n### Fixed\n\n- Fix that file upload error message does not return with `500` status code\n\n## Version 1.4.61 - 2020-12-11\n\n### Fixed\n\n- Fix accept header for binary data retrieval to include `application/json`\n\n## Version 1.4.60 - 2020-12-07\n\n### Fixed\n\n- Respect offset for `Edm.DateTimeOffset`, and default to UTC offset (+0000)\n- Fix ticks and offset calculation for type `DateTimeOffset` to handle offset as minutes\n- Update README for custom bootstrap to give `proxy()` priority over `cds.serve` (as with `cds run`)\n- Make authorization header parsing more robust\n- Provide `__metadata` type information for function/action result\n- Data format of type `cds.Time (Edm.Time)` is switchable to ISO 8601 with proxy option `isoTime` or entity annotation `@cov2ap.isoTime`\n- Data format of type `cds.Date (Edm.DateTime)` is switchable to ISO 8601 with proxy option `isoDate` or entity annotation `@cov2ap.isoDate`\n- Data format of type `cds.DateTime / Edm.DateTimeOffset` is switchable to ISO 8601 with proxy option `isoDateTime` or entity annotation `@cov2ap.isoDateTime`\n- Data format of type `cds.Timestamp / Edm.DateTimeOffset` is switchable to ISO 8601 with proxy option `isoTimestamp` or entity annotation `@cov2ap.isoTimestamp`\n- Process DateTimeOffset always as UTC information (with `Z`)\n\n## Version 1.4.59 - 2020-12-02\n\n### Fixed\n\n- Change accept header to `application/json`, if accept `xml` is requested\n- Fix single service support bound to root url\n- Data format of type `Edm.DateTimeOffset` (`cds.DateTime`, `cds.Timestamp`) is switchable to ISO 8601 with proxy option `isoDateTimeOffset` or entity annotation `@cov2ap.isoDateTimeOffset`\n\n## Version 1.4.58 - 2020-11-26\n\n### Fixed\n\n- Support boolean header value in media entity\n- Prevent escaping of quotes in url for batch requests\n- Add `media_src` and `content-type` in `__metadata` for media entities\n\n## Version 1.4.57 - 2020-11-24\n\n### Fixed\n\n- Match headers case-insensitive for custom body in media entity\n- Parse header string values for non-string types in media entity\n\n## Version 1.4.56 - 2020-11-12\n\n### Fixed\n\n- Enable OData V4 `continue-on-error` per default\n- Add proxy option to deactivate `continue-on-error`\n\n## Version 1.4.55 - 2020-11-10\n\n### Fixed\n\n- Fix host port in response links\n- Handle duplication of link tokens\n\n## Version 1.4.54 - 2020-11-05\n\n### Fixed\n\n- Support mapping of `__next` annotation\n- Forward file upload headers to media entity POST call\n- Explain annotation `@Core.ContentDisposition.Filename` in README\n- Update README on OData API flavors\n- Fix links for navigation collections and query options\n\n## Version 1.4.53 - 2020-10-30\n\n### Fixed\n\n- Support custom body for binary media upload via POST\n- Set `Accept` header for `$batch` proxy request to `multipart/mixed`\n- Set missing response header `Content-Transfer-Encoding: binary`\n\n## Version 1.4.52 - 2020-10-27\n\n### Fixed\n\n- Log warning for change set order violation, instead returning an error response\n\n## Version 1.4.51 - 2020-10-27\n\n### Fixed\n\n- Support OData V2 `binary` media upload via POST\n- Support OData V2 `multipart/form-data media` upload via POST\n- Update README on logging layers\n\n## Version 1.4.50 - 2020-10-22\n\n### Fixed\n\n- Rewrite batch success status code from `200` to `202`\n- Remove OData V4 header `odata-entityid`\n- Propagate `Content-ID` in response to HTTP request headers\n- Remove artificially added `Content-ID` header from batch response\n- Fix `Content-ID` order check for deviations between request and response\n\n## Version 1.4.49 - 2020-10-19\n\n### Fixed\n\n- Fix entity uris with `x-forwarded-path` headers for OData batch calls\n- Support of `odata-entityid` header rewrite\n\n## Version 1.4.48 - 2020-10-16\n\n### Fixed\n\n- Fix entity uris with `x-forwarded-path` headers\n- Forward `x-request-id`, `x-correlationid` for metadata request\n\n## Version 1.4.47 - 2020-10-08\n\n### Fixed\n\n- Respect `Content-ID` in HTTP request headers\n- Update on peer dependencies\n- Update README on OData V2 Adapter for CAP Java\n- Update README on mission statement\n\n## Version 1.4.46 - 2020-09-29\n\n### Fixed\n\n- Update README on option `cds.env.odata.v2proxy.urlpath`\n- Delta response annotation `@cov2ap.deltaResponse: 'timestamp'`\n\n## Version 1.4.45 - 2020-09-17\n\n### Fixed\n\n- Prepare `Delta Responses` support in proxy (not yet supported by CDS)\n- Remove metadata information in request payload deeply\n- Update README on CDS modelling restrictions\n\n## Version 1.4.44 - 2020-09-03\n\n### Fixed\n\n- Rename proxy option `standalone` to `mtxRemote`\n- Allow proxy option `mtxEndpoint` to be absolute http url\n- Support for `cds.env` for proxy options under section `cds.cov2ap`\n- Update README and JSDoc documentation\n\n## Version 1.4.43 - 2020-09-01\n\n### Fixed\n\n- Fix `$filter` function conversion\n- Fix remote CSN fetch for standalone proxy\n- Fix `@sap.aggregation.role` annotation detection\n- Annotation `@cov2ap.analytics: false` to suppress analytical conversion\n- Update README documentation\n\n## Version 1.4.42 - 2020-08-05\n\n### Fixed\n\n- Add missing `Content-ID` header for batch changeset\n\n## Version 1.4.41 - 2020-08-03\n\n### Fixed\n\n- CDS 4 compatibility\n- Improve logging layers\n- Update README documentation\n- Improve JWT tenant processing\n\n## Version 1.4.40 - 2020-07-20\n\n### Fixed\n\n- Fix aggregation grouping on filtered elements\n- Support `sap:` analytical annotations\n\n## Version 1.4.39 - 2020-07-10\n\n### Fixed\n\n- Move annotation `ContentDisposition.Filename` to data element\n- Improve stability of content disposition\n\n## Version 1.4.38 - 2020-07-06\n\n### Fixed\n\n- Fix `base` proxy option (follow-up)\n\n## Version 1.4.37 - 2020-06-26\n\n### Fixed\n\n- Replace `pathRewrite` option by `targetPath` option\n- Fix `base` proxy option\n- Respect OData annotation `@odata.Type`\n- Alternative annotation `@Common.ContentDisposition.Filename`\n\n## Version 1.4.36 - 2020-06-24\n\n### Fixed\n\n- Fix escaping of quote for function parameters\n- SAP Fiori Elements v2 sample app\n\n## Version 1.4.35 - 2020-06-23\n\n### Fixed\n\n- Fix reserved uri characters (follow-up)\n\n## Version 1.4.34 - 2020-06-17\n\n### Fixed\n\n- Fix entity key with (encoded) reserved uri characters\n\n## Version 1.4.33 - 2020-05-29\n\n### Fixed\n\n- Service Document in XML format (default)\n- Update dependencies\n- Disable network log per default\n\n## Version 1.4.32 - 2020-05-27\n\n### Fixed\n\n- Update dependencies\n- Update README on localization\n- Toggle switch for network logging\n- Allow HANA `SYSUUID` as UUID\n\n## Version 1.4.31 - 2020-05-25\n\n### Fixed\n\n- Align model resolving\n- Fix data types conversion for numbers\n- Fix data types recognition in functions\n- Support response compression\n- Prevent unnecessary data serialization for tracing\n- Performance optimization for entity key/uri calculation\n- General performance optimizations\n- Update dependencies\n\n## Version 1.4.30 - 2020-05-01\n\n### Fixed\n\n- Make function call with request body more robust\n- Fallback severity for detail messages to error\n- Keep request body for action call\n- Update README on CF deployment\n\n## Version 1.4.29 - 2020-04-28\n\n### Fixed\n\n- Fix analytics default value for all OData types\n- Fix long running data type conversion for filter elements\n\n## Version 1.4.28 - 2020-04-27\n\n### Fixed\n\n- Fix `$filter` in analytics query\n- Fix count for empty analytics result\n- Fix result projection for analytics query\n- Fix analytics `null` result values\n- Only add root error, if no details messages\n\n## Version 1.4.27 - 2020-04-21\n\n### Fixed\n\n- Add root error as first detail message\n- Error code including `transition` marks transition message\n\n## Version 1.4.26 - 2020-04-20\n\n### Fixed\n\n- Fix `$filter` for navigation elements\n- Fix OData annotations conversion for Java backends\n- Add request authorization parsing for logging\n\n## Version 1.4.25 - 2020-04-08\n\n### Fixed\n\n- Add additional messages as details\n\n## Version 1.4.24 - 2020-04-07\n\n### Fixed\n\n- Fix for metadata transfer-encoding chunked\n- Filter `@` attributes\n\n## Version 1.4.23 - 2020-04-01\n\n### Fixed\n\n- Fix type conversion for `le` operator\n\n## Version 1.4.22 - 2020-03-27\n\n### Fixed\n\n- Fix entity uri path behind app router\n- Update dependencies\n\n## Version 1.4.21 - 2020-03-02\n\n### Fixed\n\n- Improve `$metadata` logging\n- Fix `$metadata` call headers\n\n## Version 1.4.20 - 2020-02-27\n\n### Fixed\n\n- Fix CDS backwards compatibility\n\n## Version 1.4.19 - 2020-02-25\n\n### Fixed\n\n- Fix ETag Support (Concurrency Control)\n- Support streaming from URL media\n- Adding custom path rewrite\n- Custom `server.js` support\n- Fix for rendering aggregation of integers\n- Fix time duration parsing\n- Misc fixes and improvements\n- General housekeeping\n- Moving from `axios` to `node-fetch`\n\n## Version 1.4.18 - 2020-02-03\n\n### Fixed\n\n- Improve `$value` handling for streaming\n- Fix stream filename retrieval\n- Optimize edmx localization\n- Improve logging and tracing handling\n- Fix for external services (e.g. Java backend) support\n- Re-add `services` configuration for external service mapping\n- Fix for search phrase\n\n## Version 1.4.17 - 2020-01-20\n\n### Fixed\n\n- Support for virtual hosts (e.g. Cloud Connector)\n- Fix decode URI for path name\n- Fix IEEE754 compatibility for single requests\n- Add IEEE754 compatibility option switch\n\n## Version 1.4.16 - 2020-01-14\n\n### Fixed\n\n- Enforce IEEE754 compatibility\n- Pin `axios` library\n\n## Version 1.4.15 - 2019-12-20\n\n### Fixed\n\n- Fix authentication prompt for `$metadata`\n- Improve trace handling\n\n## Version 1.4.14 - 2019-12-19\n\n### Fixed\n\n- Protect `$metadata` call\n- Fix `$filter` parentheses nesting\n- Fix `all` model loading from app, srv\n- Improve `$filter` handling, incl. data type and negative tests\n\n## Version 1.4.13 - 2019-12-12\n\n### Fixed\n\n- Remove `services` configuration, as it is obsolete\n- Fix nested functions in `$filter`\n\n## Version 1.4.12 - 2019-12-06\n\n### Fixed\n\n- Fix service and CSN model detection\n\n## Version 1.4.9 - 2019-12-05\n\n### Fixed\n\n- Allow CSN JSON object as model option\n- Raise error, if service not found based on path\n- Fix service paths with hyphen\n- Fix `cds.Date`, `cds.Time` data type mappings\n\n## Version 1.4.8 - 2019-11-14\n\n### Fixed\n\n- Increased body size limit\n- Fix engine config, to allow Node >= 8\n- Map `cds.DateTime` and `cds.Timestamp` to `Edm.DateTimeOffset`\n\n## Version 1.4.6 - 2019-11-07\n\n### Fixed\n\n- Update on README documentation\n- Minor fixes\n\n## Version 1.4.5 - 2019-10-25\n\n### Fixed\n\n- `__count` is now of type String\n- Aggregation values are converted according to dynamic type\n- Search support\n- Fix for converting warning messages\n\n## Version 1.4.4 - 2019-10-07\n\n### Fixed\n\n- Filter data type conversions\n\n## Version 1.4.3 - 2019-10-01\n\n### Fixed\n\n- Check CDS multitenancy/extensibility (mtx)\n- Allow options that are falsy for Javascript\n\n## Version 1.4.2 - 2019-09-24\n\n### Fixed\n\n- Looser declaration or peer dependency to be compatible with snapshots\n\n## Version 1.4.1 - 2019-09-11\n\n### Fixed\n\n- Fixed compatibility to CDS 3.17.0\n- Propagate `x-request-id`, `x-correlationid`\n\n## Version 1.4.0 - 2019-09-09\n\n### Fixed\n\n- Raise error message for not supported aggregation function (e.g. `#FORMULA`)\n- Fixed entity key calculation for key associations\n- Fixed DateTime representation in entity key structure\n\n## Version 1.3.0 - 2019-08-30\n\n### Fixed\n\n- Passing through responses in XML (just for errors)\n- Data-type mapping on aggregation values works for non-strings\n\n## Version 1.2.0 - 2019-08-08\n\n### Added\n\n- External Release\n\n## Version 1.0.0 - 2019-05-21\n\n### Added\n\n- Internal Release\n",
      "downloadsCurrentMonth": 50391,
      "downloadsCurrentFortnight": 19685,
      "downloads365": 489252,
      "downloadsFortnightGrowth": -35.89,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 37989 },
        { "yearMonth": "2021-08", "downloads": 32467 },
        { "yearMonth": "2021-09", "downloads": 36263 },
        { "yearMonth": "2021-10", "downloads": 34197 },
        { "yearMonth": "2021-11", "downloads": 36394 },
        { "yearMonth": "2021-12", "downloads": 38372 },
        { "yearMonth": "2022-01", "downloads": 38435 },
        { "yearMonth": "2022-02", "downloads": 37952 },
        { "yearMonth": "2022-03", "downloads": 54631 },
        { "yearMonth": "2022-04", "downloads": 52011 },
        { "yearMonth": "2022-05", "downloads": 54323 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-12T00:03:39.402Z" },
        { "version": "1.4.13", "date": "2020-06-12T00:03:39.897Z" },
        { "version": "modified", "date": "2022-05-18T11:08:44.422Z" },
        { "version": "1.2.0", "date": "2020-06-12T00:03:46.889Z" },
        { "version": "1.4.30", "date": "2020-06-12T00:03:52.939Z" },
        { "version": "1.4.17", "date": "2020-06-12T00:03:59.084Z" },
        { "version": "1.4.33", "date": "2020-06-12T00:04:06.952Z" },
        { "version": "1.4.19", "date": "2020-06-12T00:04:13.375Z" },
        { "version": "1.4.20", "date": "2020-06-12T00:04:19.596Z" },
        { "version": "1.4.21", "date": "2020-06-12T00:04:25.923Z" },
        { "version": "1.4.22", "date": "2020-06-12T00:04:32.253Z" },
        { "version": "1.4.16", "date": "2020-06-12T00:04:38.902Z" },
        { "version": "1.4.6", "date": "2020-06-12T00:04:45.284Z" },
        { "version": "1.4.12", "date": "2020-06-12T00:04:51.564Z" },
        { "version": "1.4.25", "date": "2020-06-12T00:04:59.861Z" },
        { "version": "1.4.26", "date": "2020-06-12T00:05:06.672Z" },
        { "version": "1.4.1", "date": "2020-06-12T00:05:13.171Z" },
        { "version": "1.4.8", "date": "2020-06-12T00:05:20.236Z" },
        { "version": "1.4.29", "date": "2020-06-12T00:05:27.537Z" },
        { "version": "1.4.18", "date": "2020-06-12T00:05:34.368Z" },
        { "version": "1.4.15", "date": "2020-06-12T00:05:40.738Z" },
        { "version": "1.4.36", "date": "2020-06-24T08:02:05.841Z" },
        { "version": "1.4.37", "date": "2020-06-29T13:23:40.087Z" },
        { "version": "1.4.41", "date": "2020-08-04T14:16:16.301Z" },
        { "version": "1.4.42", "date": "2020-08-17T08:39:47.783Z" },
        { "version": "1.4.43", "date": "2020-09-01T11:39:11.795Z" },
        { "version": "1.4.44", "date": "2020-09-03T12:28:24.026Z" },
        { "version": "1.4.46", "date": "2020-09-29T07:35:52.705Z" },
        { "version": "1.4.47", "date": "2020-10-08T16:24:36.026Z" },
        { "version": "1.4.48", "date": "2020-10-16T12:49:41.730Z" },
        { "version": "1.4.49", "date": "2020-10-19T09:47:19.798Z" },
        { "version": "1.4.50", "date": "2020-10-22T18:48:59.694Z" },
        { "version": "1.4.53", "date": "2020-10-30T12:58:01.925Z" },
        { "version": "1.4.54", "date": "2020-11-06T09:48:39.053Z" },
        { "version": "1.4.55", "date": "2020-11-10T13:13:17.757Z" },
        { "version": "1.4.57", "date": "2020-11-24T15:28:34.727Z" },
        { "version": "1.4.58", "date": "2020-11-26T11:04:48.861Z" },
        { "version": "1.4.59", "date": "2020-12-03T08:07:20.356Z" },
        { "version": "1.4.60", "date": "2020-12-07T10:44:04.828Z" },
        { "version": "1.4.61", "date": "2020-12-11T13:01:47.791Z" },
        { "version": "1.5.0", "date": "2020-12-16T08:18:56.746Z" },
        { "version": "1.5.1", "date": "2020-12-22T08:01:06.724Z" },
        { "version": "1.5.4", "date": "2021-01-26T11:21:25.158Z" },
        { "version": "1.5.6", "date": "2021-02-17T13:57:09.892Z" },
        { "version": "1.5.7", "date": "2021-02-19T08:41:54.731Z" },
        { "version": "1.5.9", "date": "2021-03-03T07:36:01.780Z" },
        { "version": "1.5.10", "date": "2021-03-18T09:50:52.538Z" },
        { "version": "1.6.0", "date": "2021-04-07T08:34:22.730Z" },
        { "version": "1.6.1", "date": "2021-04-12T07:54:06.297Z" },
        { "version": "1.6.2", "date": "2021-04-29T07:34:03.994Z" },
        { "version": "1.6.3", "date": "2021-05-26T09:28:54.059Z" },
        { "version": "1.7.0", "date": "2021-05-28T07:14:34.896Z" },
        { "version": "1.7.1", "date": "2021-05-28T13:20:27.432Z" },
        { "version": "1.7.2", "date": "2021-06-10T11:51:41.295Z" },
        { "version": "1.7.3", "date": "2021-06-11T10:16:54.897Z" },
        { "version": "1.7.4", "date": "2021-06-18T08:17:47.797Z" },
        { "version": "1.7.6", "date": "2021-07-01T06:42:42.350Z" },
        { "version": "1.7.7", "date": "2021-07-27T09:47:09.099Z" },
        { "version": "1.7.8", "date": "2021-07-28T08:03:29.143Z" },
        { "version": "1.7.9", "date": "2021-08-06T13:01:45.583Z" },
        { "version": "1.7.10", "date": "2021-08-31T11:12:53.274Z" },
        { "version": "1.7.11", "date": "2021-09-09T12:53:10.197Z" },
        { "version": "1.7.12", "date": "2021-10-07T09:07:08.778Z" },
        { "version": "1.7.13", "date": "2021-10-18T07:17:45.102Z" },
        { "version": "1.7.14", "date": "2021-11-03T12:44:16.125Z" },
        { "version": "1.7.15", "date": "2021-11-08T12:22:49.576Z" },
        { "version": "1.7.16", "date": "2021-11-10T13:12:56.037Z" },
        { "version": "1.8.0", "date": "2021-11-17T09:23:44.406Z" },
        { "version": "1.8.1", "date": "2021-11-19T14:33:19.957Z" },
        { "version": "1.8.2", "date": "2021-12-01T09:51:41.335Z" },
        { "version": "1.8.3", "date": "2021-12-06T09:12:08.897Z" },
        { "version": "1.8.4", "date": "2021-12-06T15:07:34.902Z" },
        { "version": "1.8.5", "date": "2022-01-17T13:23:19.578Z" },
        { "version": "1.8.6", "date": "2022-02-01T13:29:33.812Z" },
        { "version": "1.8.8", "date": "2022-02-09T07:51:55.700Z" },
        { "version": "1.8.7", "date": "2022-02-09T08:28:26.767Z" },
        { "version": "1.8.9", "date": "2022-02-09T08:52:53.745Z" },
        { "version": "1.8.10", "date": "2022-03-01T15:17:15.797Z" },
        { "version": "1.8.11", "date": "2022-03-11T14:36:14.559Z" },
        { "version": "1.8.12", "date": "2022-04-07T08:04:58.878Z" },
        { "version": "1.8.13", "date": "2022-04-07T08:15:31.894Z" },
        { "version": "1.8.14", "date": "2022-04-08T13:57:56.673Z" },
        { "version": "1.8.15", "date": "2022-04-25T08:11:30.620Z" },
        { "version": "1.8.16", "date": "2022-04-28T09:21:00.416Z" },
        { "version": "1.8.17", "date": "2022-05-12T09:49:48.567Z" },
        { "version": "1.8.18", "date": "2022-05-13T11:44:46.981Z" },
        { "version": "1.8.19", "date": "2022-05-18T11:08:44.338Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-odata-v2-adapter-proxy"
    },
    {
      "name": "cds-ql",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T19:24:19.750Z",
      "updatedAt": "2022-04-06T21:36:27.235Z",
      "readme": "# @sap/cds-ql\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-ql`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.21.2 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.21.1 - 2019-11-29\n\n### Added\n\n- `SELECT.forUpdate` to lock columns on a table\n\n## Version 1.21.0 - 2019-11-19\n\n### Added\n\n- Acquire now sets session contexts `valid-from` and `valid-to`\n\n### Fixed\n\n- Single ticked entry in function now resolves to `val` instead of `ref`\n\n## Version 1.20.1 - 2019-10-30\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.19.1\n- Updated version of @sap/cds-sqlite to 1.19.1\n- Updated version of @sap/cds-hana to 1.19.1\n\n## Version 1.20.0 - 2019-10-29\n\n### Changed\n\n- Improved UPDATE error messages\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.19.2 - 2019-10-16\n\n### Changed\n\n- `.run` handles arrays in a `Promise.all` fashion\n\n## Version 1.19.1 - 2019-10-08\n\n### Fixed\n\n- Default mainkind in case of compound service (messaging and rest)\n\n## Version 1.19.0 - 2019-10-02\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.18.0\n- Updated version of @sap/cds-sqlite to 1.18.0\n- Updated version of @sap/cds-hana to 1.18.0\n\n## Version 1.18.2 - 2019-09-18\n\n### Changed\n\n- Improved error messages\n\n### Fixed\n\n- Disconnect in multi tenancy scenario\n\n## Version 1.18.1 - 2019-09-10\n\n### Fixed\n\n- Model loading\n\n## Version 1.18.0 - 2019-09-09\n\n### Changed\n\n- Improved error messages for statements\n- No more model loading, model needs to be passed now\n\n### Fixed\n\n- Nested functions as strings in statements\n- Options in connect combined with env variables \n\n### Removed\n\n- Workaround for `onCond` that used custom object notation\n\n## Version 1.17.0 - 2019-08-21\n\n### Added\n\n- `options.kind` can also be an object\n- Service related functions `create`, `insert`, `read`, `update` and `delete` to transaction\n- Http related functions `get`, `post`, `put`, `patch` and `delete` to transaction\n\n### Changed\n\n- `.transaction(...).run` can be used with an array of queries\n\n### Fixed\n\n- Update with binary property\n\n## Version 1.16.0 - 2019-07-23\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.15.0\n- Updated version of @sap/cds-sqlite to 1.15.0\n- Updated version of @sap/cds-hana to 1.15.0\n\n## Version 1.15.0 - 2019-07-09\n\n### Added\n\n- Enhanced statements to be compatible to specification\n- Support for views with parameters\n\n### Removed\n\n- `generateUUID` function and `uuid`dependency\n- usage of xsenv for authorization (is provided by cds.env)\n\n## Version 1.14.0 - 2019-06-24\n\n### Fixed\n\n- Bug with nested types in update\n- Improved logging of SQLs when DEBUG=true is provided\n\n## Version 1.13.0 - 2019-06-07\n\n### Changed\n\n - updated generic-pool to 3.7.1\n\n## Version 1.12.0 - 2019-05-24\n\n### Removed\n\n- Removed superficial cache for services\n\n## Version 1.11.1 - 2019-05-16\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.11.1\n- Updated version of @sap/cds-sqlite to 1.11.1\n- Updated version of @sap/cds-hana to 1.11.1\n\n## Version 1.11.0 - 2015-05-15\n\n### Changed\n\n- Improved performance by reducing calls to process.nextTick()\n\n## Version 1.10.2 - 2019-05-08\n\n### Fixed\n\n- `service.deploy`\n\n## Version 1.10.1 - 2019-05-07\n\n### Changed\n\n- More resilience towards setting the model manually in service\n\n## Version 1.10.0 - 2019-05-03\n\n### Added\n\n- Functions `create`, `insert`, `read`, `update` and `delete` added to service\n- Streaming support via `service.stream()`\n\n### Changed\n\n- instanceof replaced with typeof in some cases\n\n## Version 1.9.0 - 2019-04-16\n\n### Changed\n\n- Select.one now adds property ```one``` instead of ```limit``` to CQN\n- Transactions can be created (i.e. are not promisified) although initial model loading is not yet finished\n\n## Version 1.8.0 - 2019-03-29\n\n### Added\n\n- Support for transactions on multiple data sources\n\n- Service.stream() provided for cds.stream()\n\n### Changed\n\n- Entities can be accessed via short name (if only one service in model)\n\n## Version 1.7.1 - 2019-03-19\n\n### Changed\n\n- Updated version of @sap/cds-hana to 1.7.1\n\n## Version 1.7.0 - 2019-03-19\n\n### Added\n\n- Added more transaction functions (`tx.foreach`, `tx.commit`, `tx.rollback`)\n\n### Changed\n\n- Prevent app crash if tenant cannot connect\n- Service hands over model to clients\n\n## Version 1.6.0 - 2019-02-25\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.6.0\n- Updated version of @sap/cds-sqlite to 1.6.0\n- Updated version of @sap/cds-hana to 1.6.0\n\n## Version 1.5.1 - 2019-02-12\n\n### Added\n\n- Support for sql functions lower, upper, trim, length in $filter and $orderby\n- Support `.and` for where conditions\n\n### Fixed\n\n - Use `.entities` from reflected models\n\n## Version 1.5.0 - 2019-02-06\n\n### Changed\n\n- Minimum node version 8.9.0\n\n## Version 1.4.0 - 2019-01-22\n\n### Changed\n\n- Use latest version of @sap/cds-sql\n\n## Version 1.3.0 - 2019-01-11\n\n### Changed\n\n- Use latest version of uuid and @sap/cds-sql\n\n## Version 1.2.0 - 2018-12-21\n\n### Added\n\n- Allow Arrays in `UPDATE.set()`\n\n## Version 1.1.0 - 2018-12-12\n\n### Added\n\n- Support for `full join` in SELECT\n- Support for inline\n\n## Version 1.0.0 - 2018-11-27\n\n### Added\n\n- tenantId can be specified at disconnect\n- model property can specified at connect\n- entities and model of connection can be accessed\n\n### Changed\n\n- Connect option `driver` is renamed to `kind`\n- Connect options regarding connecting moved to 'credentials' property instead of one flat object\n\n### Fixed\n\n- Read drafts with $filter/$search\n\n## Version 0.12.0 - 2018-10-17\n\n### Added\n\n- .where supports object notation with arrays of and/or\n\n### Changed\n\n- Refactoring and changes due to updated dependencies\n\n## Version 0.11.0 - 2018-10-04\n\n### Added\n\n- Support of string values bei fluid usage in .where\n\n### Fixed\n\n- Promise rejection in Service.run\n\n## Version 0.10.0 - 2018-09-17\n\n### Added\n\n- Auto lookup of db service if no configuration given at connect but is available at environmental VCAP_SERVICES\n- Support of an array as argument in .where\n\n## Version 0.9.1 - 2018-09-05\n   \n### Changed\n\n- Improved npm-shrinkwrap\n\n## Version 0.9.0 - 2018-08-28\n\n### Added\n\n- Added support for .columns() in SELECT\n- where/or/having support fluid API based on the first argument\n- init.js at reuse model can be used by deploy and may export an async function\n   \n### Changed\n\n- any object filter combination of @sap/xsenv can be used to search the db service\n\n## Version 0.8.1 - 2018-08-09\n\n### Changed\n\n- Require submodules on demand\n\n## Version 0.8.0 - 2018-08-07\n\n### Added\n\n- Pool and Pool resources are evicted by default\n- .from, .where and .having support partial CQN\n- Inline support at CQN of where and columns in Select\n- Functions .values and .entries at INSERT \n- Support of .run().then.run() shortcut\n- Debug is printed in case environmental variable DEBUG=true is set\n- SELECT(<column>, <column>).from(<table>)\n- SELECT.from(<table>).where({<column>: CQN})\n- Support for unary and binary expressions in contains\n- Support for expand with string/array notation in SELECT.columns (e. g. SELECT.from('Books', ['author', ['name']]))\n- Support for excluding in service projection\n  \n### Changed\n\n- .where and .having can be used multiple times instead of .where.and or .having.and\n- .or can be used directly: Instead of calling where.or you can call or.or\n\n### Fixed\n\n- Issue with service renaming attributes\n- Issue with 'exists' in object mode\n\n### Removed\n\n- .and for .where/.having\n\n## Version 0.7.0 - 2018-07-11\n\n### Fixed\n\n- Race condition at running block statements in transactional mode\n- Brackets are only added to where or having if needed\n\n### Removed\n\n- Statement blocks cannot be run with \"sequential\" pragma anymore (use \"serialized\" instead)\n\n## Version 0.6.0 - 2018-07-02\n\n### Added\n\n- Multi tenancy support\n\n## Version 0.5.0 - 2018-06-25\n\n### Added\n\n- support .deploy to automatically set up database artifacts\n- support of SQL functions lower and contains in .where\n- support for navigation over entities with multiple keys\n- SELECT allows partial CQNs as columns\n- .run can execute blocks of statements\n\n### Changed\n\n- support for latest CQN spec changes\n- renamed .hasPool to .hasSession\n\n### Fixed\n\n- CQL navigation on entity\n- CDS injection\n- .where with nested ORs and ANDs if provided as object input parameter \n\n## Version 0.4.1 - 2018-05-03\n\n### Fixed\n\n- Issue with postinstall script in package.json\n\n## Version 0.4.0 - 2018-05-02\n\n### Added\n\n- support DROP statements\n- connection pool validates resources before provisioning\n- support .foreach\n- cds used via injection\n- support fluid usage of .where and .having in DML statements\n\n### Changed\n\n- connect options aligned to spec\n- support for latest CQN spec changes\n- refactored .connect to return undefined instead of Promise\n- refactored .acquire to wait for .connect before providing a client\n\n## Version 0.3.0 - 2018-04-16\n\n### Added\n\n- allow CQN as parameter in SELECT.from\n- support CREATE statements\n\n## Version 0.2.0 - 2018-03-16\n### Added\n\n- support for SELECT.one\n- usage of npm-shrinkwrap\n\n### Changed\n\n- made generateUUID synchronous\n",
      "downloadsCurrentMonth": 7559,
      "downloadsCurrentFortnight": 3315,
      "downloads365": 32401,
      "downloadsFortnightGrowth": -21.89,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 1795 },
        { "yearMonth": "2021-08", "downloads": 1817 },
        { "yearMonth": "2021-09", "downloads": 1780 },
        { "yearMonth": "2021-10", "downloads": 1507 },
        { "yearMonth": "2021-11", "downloads": 1693 },
        { "yearMonth": "2021-12", "downloads": 1731 },
        { "yearMonth": "2022-01", "downloads": 1608 },
        { "yearMonth": "2022-02", "downloads": 545 },
        { "yearMonth": "2022-03", "downloads": 2747 },
        { "yearMonth": "2022-04", "downloads": 6369 },
        { "yearMonth": "2022-05", "downloads": 7859 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T19:24:19.750Z" },
        { "version": "1.7.1", "date": "2020-06-11T19:24:20.137Z" },
        { "version": "modified", "date": "2022-04-06T21:36:27.235Z" },
        { "version": "1.19.2", "date": "2020-06-11T19:24:26.643Z" },
        { "version": "1.11.1", "date": "2020-06-11T19:24:33.041Z" },
        { "version": "0.9.0", "date": "2020-06-11T19:24:39.096Z" },
        { "version": "1.0.0", "date": "2020-06-11T19:24:45.518Z" },
        { "version": "1.14.0", "date": "2020-06-11T19:24:51.903Z" },
        { "version": "1.5.1", "date": "2020-06-11T19:24:57.949Z" },
        { "version": "1.5.0", "date": "2020-06-11T19:25:04.187Z" },
        { "version": "1.18.2", "date": "2020-06-11T19:25:13.815Z" },
        { "version": "0.9.1", "date": "2020-06-11T19:25:20.473Z" },
        { "version": "1.21.0", "date": "2020-06-11T19:25:28.370Z" },
        { "version": "0.10.0", "date": "2020-06-11T19:25:35.324Z" },
        { "version": "1.17.0", "date": "2020-06-11T19:25:41.339Z" },
        { "version": "0.11.0", "date": "2020-06-11T19:25:49.286Z" },
        { "version": "1.21.2", "date": "2020-08-18T10:30:57.675Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-ql"
    },
    {
      "name": "cds-reflect",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T18:23:52.842Z",
      "updatedAt": "2022-04-06T21:36:27.504Z",
      "changelog": "# Change Log\n\nAll notable changes to this project are documented in this file.\nThe format is based on [Keep a Changelog](http://keepachangelog.com/) and\nthis project adheres to [Semantic Versioning](http://semver.org/).\n\n## Version 2.13.5 - 2021-02-01\n\n### Changed\n\n- Sunset.  Code is now in `@sap/cds` package.\n\n## Version 2.13.4 - 2020-11-27\n\n## Fixed\n\n- More improved typings\n\n## Version 2.13.3 - 2020-10-27\n\n## Fixed\n\n- Improved typings no longer cause errors in typescript checks\n\n\n## Version 2.13.2 - 2020-10-27\n\n## Fixed\n\n- Improved typescript typings\n\n\n## Version 2.13.1 - 2020-09-24\n\n## Fixed\n\n- Support for `hana.*` types\n\n\n\n## Version 2.13.0 - 2020-09-02\n\n## Added\n- `aspect` to core type system\n- `Association` class now knows `isAssociation`, `isComposition`, and `isManagedComposition`\n- `any` has now a `path` getter\n\n\n## Version 2.12.2 - 2020-07-31\n\n## Added\n\n- getters `.associations` and `.compositions` on linked entities\n\n\n## Version 2.11.0 - 2020-04-27\n\n## Added\n\n- QL parser\n\n## Version 2.10.2 - 2020-03-19\n\n### Removed\n\n`npm-shrinkwrap.json`\n\n## Version 2.10.1 - 2020-02-20\n\n### Changed\n\n- Updated version number for public release\n\n\n## Version 2.9.3 - 2020-02-19\n\n### Changed\n\n- Updated version number for public release\n\n## Version 2.9.2 - 2020-01-17\n\n### Fixed\n\n- Linked view entities erroneously inherited their base entities' `.keys` e.g.:\n```js\nconst m = cds.linked(cds.parse(`\n  entity Foo { key ID : UUID }\n  entity Bar as select from Foo { ID as Kennung };\n`))\nconst { Foo, Bar } = m.entities\nFoo.keys //> { ID: string { key: true, type: 'cds.UUID' } }\nBar.keys //> { Kennung: string { key: true, type: 'cds.UUID' } }\n// The latter before was erronously:\nBar.keys //> { ID: string { key: true, type: 'cds.UUID' } } -> WRONG\n```\n## Version 2.9.1 - 2019-12-11\n\n### Added\n- Preparations for streamlined compiler APIs\n\n\n## Version 2.8.0 - 2019-10-08\n\n### Added\n- Entity definitions know their service\n\n## Version 2.7.1 - 2019-09-09\n\n### Added\n\n- Support for `cds.extend(Foo)`\n\n## Version 2.7.0 - 2019-09-09\n\n### Added\n\n- Support for linking typeof refs\n\n## Version 2.6.0 - 2019-08-21\n\n### Added\n\n- `.valueOf` to easily construct qualified names\n\n### Changed\n\n- Improved stack traces\n\n## Version 2.5.0 - 2019-05-03\n\n### Added\n\n- `cds` now is an `EventEmitter` -- This allows server modules to inform interested listeners about notable events in a loose-coupling fashion.\n\n### Fixed\n- `model.services` now really filters\n- `cds.infer` supports paths with filters\n\n\n## Version 2.3.0\n\n### Changed\n- The minimum required Node.js version is now set more specifically to _8.9_ LTS.  Previously, just Node.js 8 was mentioned.\n\n\n## Version 2.2.1 - 2019-01-24\n\n### Fixed\n\n- Getter for `linked_entity.source`\n\n## Version 2.2.0\n\n### Added\n- Getter for `linked_entity.source` (better use: `linked_entity.query._target`)\n\n## Version 2.0.5\n### Features\n- Seperated iteration and recursion `.foreach` is now iteration only, use `.forall` to visit all definitions recursively.\n\n## Version 1.8.0\n### Features\n- Entities and services can be retrieved with namespace scope\n\n## Version 1.7.0\n### Changes\n- Clean up of TypeScript APIs\n\n## Version 1.6.0\n### Features\n- Getters for entities and services\n- Infer keys for managed associations\n- Support for getting entities and services with namespace, e.g. `cds.reflect(m).entities ('my.bookshop')`\n\n## Version 1.5.0\n### Fixes\n- Fixes for linking associations and foreign keys\n",
      "downloadsCurrentMonth": 18869,
      "downloadsCurrentFortnight": 8362,
      "downloads365": 135854,
      "downloadsFortnightGrowth": -20.41,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 15098 },
        { "yearMonth": "2021-08", "downloads": 12582 },
        { "yearMonth": "2021-09", "downloads": 12215 },
        { "yearMonth": "2021-10", "downloads": 8012 },
        { "yearMonth": "2021-11", "downloads": 8035 },
        { "yearMonth": "2021-12", "downloads": 7511 },
        { "yearMonth": "2022-01", "downloads": 8058 },
        { "yearMonth": "2022-02", "downloads": 6375 },
        { "yearMonth": "2022-03", "downloads": 7314 },
        { "yearMonth": "2022-04", "downloads": 15474 },
        { "yearMonth": "2022-05", "downloads": 19721 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T18:23:52.842Z" },
        { "version": "1.6.0", "date": "2020-06-11T18:23:53.279Z" },
        { "version": "modified", "date": "2022-04-06T21:36:27.504Z" },
        { "version": "1.2.0", "date": "2020-06-11T18:23:59.543Z" },
        { "version": "2.3.0", "date": "2020-06-11T18:24:05.697Z" },
        { "version": "2.8.0", "date": "2020-06-11T18:24:11.897Z" },
        { "version": "2.0.5", "date": "2020-06-11T18:24:17.875Z" },
        { "version": "1.5.1", "date": "2020-06-11T18:24:23.974Z" },
        { "version": "2.9.1", "date": "2020-06-11T18:24:31.137Z" },
        { "version": "2.11.0", "date": "2020-06-11T18:25:01.010Z" },
        { "version": "2.4.0", "date": "2020-06-11T18:25:07.193Z" },
        { "version": "1.7.0", "date": "2020-06-11T18:25:13.804Z" },
        { "version": "2.10.2", "date": "2020-06-11T18:25:19.744Z" },
        { "version": "2.6.0", "date": "2020-06-11T18:25:25.981Z" },
        { "version": "2.10.1", "date": "2020-06-11T18:25:33.292Z" },
        { "version": "2.9.2", "date": "2020-06-11T18:25:39.315Z" },
        { "version": "2.5.0", "date": "2020-06-11T18:25:45.283Z" },
        { "version": "2.7.1", "date": "2020-06-11T18:25:51.928Z" },
        { "version": "2.12.2", "date": "2020-08-05T13:17:49.592Z" },
        { "version": "2.13.0", "date": "2020-09-03T12:29:41.916Z" },
        { "version": "2.13.1", "date": "2020-10-13T13:42:25.085Z" },
        { "version": "2.13.3", "date": "2020-10-27T17:25:11.506Z" },
        { "version": "2.13.4", "date": "2020-12-04T14:21:50.075Z" },
        { "version": "2.13.5", "date": "2021-02-03T12:38:23.424Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-reflect"
    },
    {
      "name": "cds-rest",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T19:44:02.277Z",
      "updatedAt": "2022-04-06T21:36:27.709Z",
      "readme": "# @sap/cds-rest\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-rest`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.6.3 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.6.2 - 2020-03-19\n\n### Changed\n\n- In case there is no credentials.destination provided the `destinations` environment variable is not created anymore.\n  The connection to the remote service is handled internally.\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.5.0 - 2020-02-19\n\n### Changed\n\n- Updated version number for public release\n\n## Version 1.4.0 - 2020-02-05\n\n### Added\n\n- Where x in (a,b,...) predicates are translated to series of (x eq a) or (x eq b) in OData `$filter` options\n\n### Changed\n\n- Version of `@sap/cloud-sdk-core` pinned to `1.15.1`\n- Version of `@sap/cloud-sdk-util` pinned to `1.15.1`\n\n## Version 1.3.0 - 2019-10-29\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.2.0 - 2019-10-02\n\n### Added\n\n- If JWT token provided in context, it is forwarded to Cloud SDK\n\n### Changed\n\n- Version of `@sap/cloud-sdk-core` to `1.10.0`\n- Version of `@sap/cloud-sdk-util` to `1.10.0`\n\n## Version 1.1.3 - 2019-09-21\n\n### Added\n\n- Dependency to `@sap/cloud-sdk-util`\n\n## Version 1.1.2 - 2019-09-19\n\n### Fixed\n\n- `npm-shrinkwrap.json` containing wrong versions\n\n## Version 1.1.1 - 2019-09-18\n\n### Added\n\n- Support `where`, `columns` and `one` properties in SELECT\n\n### Changed\n\n- Enforce JSON format in OData\n- Clean up OData V2 responses\n\n## Version 1.1.0 - 2019-09-09\n\n### Added\n\n- Auto-generate `destinations` env variable if `NODE_ENV !== 'production`'\n\n## Version 1.0.2 - 2019-08-27\n\n### Fixed\n\n- `npm-shrinkwrap.json` containing wrong versions\n\n## Version 1.0.1 - 2019-08-26\n\n ### Changed\n\n- Version of `@sap/cloud-sdk-core` pinned to `1.8.0`\n\n## Version 1.0.0 - 2019-08-21\n\n### Added\n\n- Initial implementation\n",
      "downloadsCurrentMonth": 140,
      "downloadsCurrentFortnight": 50,
      "downloads365": 21222,
      "downloadsFortnightGrowth": -44.44,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 3211 },
        { "yearMonth": "2021-08", "downloads": 2908 },
        { "yearMonth": "2021-09", "downloads": 2909 },
        { "yearMonth": "2021-10", "downloads": 2420 },
        { "yearMonth": "2021-11", "downloads": 1707 },
        { "yearMonth": "2021-12", "downloads": 1593 },
        { "yearMonth": "2022-01", "downloads": 1512 },
        { "yearMonth": "2022-02", "downloads": 1014 },
        { "yearMonth": "2022-03", "downloads": 1324 },
        { "yearMonth": "2022-04", "downloads": 156 },
        { "yearMonth": "2022-05", "downloads": 156 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T19:44:02.277Z" },
        { "version": "1.6.2", "date": "2020-06-11T19:44:02.771Z" },
        { "version": "modified", "date": "2022-04-06T21:36:27.709Z" },
        { "version": "1.1.2", "date": "2020-06-11T19:44:10.792Z" },
        { "version": "1.3.0", "date": "2020-06-11T19:44:18.358Z" },
        { "version": "1.0.2", "date": "2020-06-11T19:44:24.504Z" },
        { "version": "1.2.0", "date": "2020-06-11T19:44:30.714Z" },
        { "version": "1.5.1", "date": "2020-06-11T19:44:37.715Z" },
        { "version": "1.6.3", "date": "2020-08-18T10:32:43.857Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-rest"
    },
    {
      "name": "cds-runtime",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T23:57:06.549Z",
      "updatedAt": "2022-04-06T21:36:28.101Z",
      "readme": "# @sap/cds-runtime\nThis package is no longer maintained. Use the [@sap/cds](https://www.npmjs.com/package/@sap/cds) instead.\n\nThe `@sap/cds-runtime` module was the successor of `@sap/cds-services`, `@sap/cds-ql`, `@sap/cds-messaging`, `@sap/cds-rest`, `@sap/cds-hana`, `@sap/cds-sqlite`, and `@sap/cds-sql`. Please note that future development and bug fixes will be provided in the `@sap/cds` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n\n## Stakeholder Tests\n\n### MTX\n\n![](https://travis-ci.cloud.sap.corp/cdx/cds-stakeholder-tests.svg?token=FS8mMMvcpEdBWNZAxHuF&branch=mtx)\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 3.3.0 - tbd\n\n### Added\n\n- Support for logical events in `composite-messaging`\n- Initial support for generating OData V2 queries\n- Support of lambda expressions via navigation like `GET /Books?$filter=author/books/all(d:d/stock gt 10)` on SAP HANA when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n- Preserve `DraftAdministrativeData_DraftUUID` if OData v2 client (indicated by `@sap/cds-odata-v2-adapter-proxy`)\n\n### Changed\n\n- Incoming messages now contain a privileged user\n- Computed values are preserved during draft activate\n- `SELECT.where(...)` generates CQN with list of values for `in` operator\n- Always use flag `u` during input validation via `@assert.format`\n- Intermediate cqn format for lambda expressions with preceeding navigation path when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n\n### Fixed\n\n- Deploy endpoint for messaging artifacts includes the needed roles\n- Detection of mocked services and forced resolving of views\n- `POST/PATCH/PUT` requests on `Composition of many` with association as key and custom `on` conditions\n- `$expand` on entities with `.` in name\n- Filter on external service when using `ne null` \n- Primitive property access of Singletons defined without keys via URL like `/Singleton/name`\n- Expand of draft with composition of aspects\n- `@Core.ContentDisposition.Filename` instead of `@Core.ContentDisposition`\n\n### Removed\n\n## Version 3.2.2 - 2021-06-17\n\n### Fixed\n\n- Binary keys handling in $filter\n- `odata.metadata` accept header fragment ignored during deserializer lookup in odata-server\n- Don't overwrite manual error code in case of data-server error\n- MTX enabled check\n- Invoke custom error handler (`srv.on('error')`) for each error and preserve modifications in case of changesets\n- Evaluation of restrictions for custom requests to the same `ApplicationService`\n- Misinterpreted SQL keyword as argument in QL's fluid usage\n\n## Version 3.2.1 - 2021-06-04\n\n### Added\n\n- Support for AMQP options in AQMP-based message brokers\n\n### Fixed\n\n- Requests using lambda operators in `$filter` in combination with instance based authorization\n\n## Version 3.2.0 - 2021-05-31\n\n### Added\n\n- Automatic topic manipulation for non-declared events\n- Support for events which are declared outside of service\n- Prefer headers `return=minimal` and `return=representation`\n  + Default value is configurable at `cds.env.odata.prefer.return`\n  + If not configured, the default is `representation`\n- Support for annotation `@Core.ContentDisposition`\n- Include `x-correlation-id` in headers of outbound message\n- Service consumption supports `search` property  and arbitrary functions in CQN\n- Support for temporal requests with different data types\n- Support for reading single draft-enabled entities via service API (`srv.read(<entity>, { ..., IsActiveEntity: true/false })`)\n- Support for feature toggles via `@cds/mtx`'s `ModelProviderService` based on DwC's product configuration header (alpha)\n  + Activate via `cds.env.features.alpha_toggles`\n- Support for structured keys used in composition of aspects (beta)\n\n### Changed\n\n- Emit logs promoted to `info`\n- Simpler topic names for `local`, `file-based-messaging` and `message-queuing`\n- `messaging.emit(...)` also uses outbox\n- Messaging will start listening to events once the `listening` event was fired on the `cds` object\n- Cascade delete order reversed from leaves to root\n- Intermediate cqn format for lambda expressions in odata\n- OData function names and structure are kept unchanged after parsing a URL to CQN in the adapter layer, corresponding \"CQN-to-SQL\" logic is moved to the DB layer. The changes affect the following functions: `contains`, `startswith`, `endswith`, `toupper`, `tolower`, `indexof`, `day`, `date` and `time`.\n- Template cache at prototype of `RootTransaction`\n- Both strings and numbers are accepted as decimals\n  + Strict numbers handling can be reenabled via `cds.env.features.strict_numbers`\n\n### Fixed\n\n- Star columns can be written as `'*'` or `{ref: ['*']}`\n- Arrayed and structured elements in draft mode\n- Cascade delete where child entity has more than one parent\n- Ignore `@restrict` conditions when reading `DraftAdministrativeData` of drafts\n- Navigation to one composition via association in `containment` mode (`cds.odata.containment = true`)\n- Create, update and delete requests to entity projections annotated with the annotation `@cds.persistence.table` are not resolved correctly\n- Using inline `$filter` query option in deeply nested expands on SAP HANA\n- Runtime exception when PATCH or PUT request methods are used for non-existing IDs. For example, → `PUT /api/v1/CustomerOrder('non-existing Id')/items(id='')/product`\n- Drafts: read active children of active or draft entities using deeply nested navigation or `$expand` query option\n- Select media type and content disposition information from base entity\n- Attempt to calculate time delta with unresolved target crashes server\n- OData string functions `contains`, `startswith` and `endswith` find records with `null` attributes when used with `not` operator\n- Deep deletion of sensitive data (annotated with `@PersonalData.IsPotentiallyPersonal` or `@PersonalData.IsPotentiallySensitive`) during update is properly considered in audit logging\n- Pseudo-variables as default value in draft-enabled entities\n- Escape CDL keywords when used in URL path\n\n## Version 3.1.2 - 2021-05-28\n\n### Fixed\n\n- Downport of \"Escape CDL keywords when used in URL path\"\n\n## Version 3.1.1 - 2021-05-20\n\n### Added\n\n- Downport of \"Support for reading single draft-enabled entities via service API (`srv.read(<entity>, { ..., IsActiveEntity: true/false })`)\"\n- Computed values are preserved during draft activate with `cds.env.features.preserve_computed = true`\n  + Preserving computed values will be the default behavior in ^3.3\n\n### Fixed\n\n- Downport of \"Attempt to calculate time delta with unresolved target crashes server\"\n\n## Version 3.1.0 - 2021-05-05\n\n### Added\n\n- Support for declared events with annotations `@topic`, `@source` and `@type`\n- Support for declared events in composite messaging\n- Extended managed data (`@cds.on.insert`, `@cds.on.update`):\n  + Pseudo variable `$uuid`\n  + Pseudo variable `$user.<attr>`\n  + Static values, for example `@cds.on.insert: 'foo'`\n- READ support for associations with custom on condition with form `<association>.<backlink> = $self and <association>.<property> = '<value>'`\n- Support for default values in views with more than one parameter\n- Support of input validation for arrayed elements\n- QL fluent API `orderBy()` convenience options `orderBy('<column> <order?>')`, `orderBy('...', ...)`, `orderBy('..., ...')`, and `orderBy([...])`\n- Use new, beta URL to CQN parser during read requests when serving to OData via `cds.env.features.odata_new_parser`\n- Beta version of new CQN to URL parser\n  + Use during service consumption via `cds.env.features.remote_new_parser`\n- Draft-specific columns are considered in `$select` if OData validation is skipped\n- Support for `cardinality` in `ref`\n- Support for nested expressions in where conditions\n- Invoke custom error handler (beta) in OData and REST adapters if necessary\n\n### Changed\n\n- Model-based processing instruction cache attached to service for SaaS extensibility\n- Removed compatibility feature flag `cds.env.features.skip_expand_assoc`\n- Input-related details of assertion error added to error message, for example `Value 4 is not in specified range [1,3]`\n- `$search` query option is parsed into `.search` instead of like expressions in `.where`\n- Integrity checks are skipped if `@sap/cds-compiler`'s foreign key generation (beta!) is active\n- Private `<entity>._dependents` made non-enumerable to avoid circular references\n- `null` values for virtual properties added during post processing (previously done during serialization in odata-server)\n\n### Fixed\n\n- Ambiguous columns in having clause\n- The generic read handler for drafts now correctly returns an object if the key of the entity is provided, before it was an array\n- Improved handling of unique constraint violation error during create and update\n- Better error logs for integrity checks\n- Leading and trailing whitespaces are allowed in OData expressions\n- Release database client if begin fails\n- `auto-expand` of generated foreign keys in OData x4 flavor (`cds.env.odata.flavor = x4`) when actions return entities\n- Consider `not null` annotations on inline structured types in OData x4 flavor (`cds.env.odata.flavor = x4`)\n- Temporal data in OData batch requests\n- Deep update/delete with static on conditions by composition to many\n- Draft: Alias of entity projection is incorrectly considered as key.\n- Support of arbitrary requests in service consumption if no external service model is provided\n- Use unfolded model if transaction was initiated in messaging\n- Infinite loop in restriction processing when user attribute is `null`\n\n## Version 3.0.9 - 2021-04-29\n\n### Changed\n\n- Downport of \"Private `<entity>._dependents` made non-enumerable to avoid circular references\"\n\n### Fixed\n\n- Downport of \"Use unfolded model if transaction was initiated in messaging\"\n\n## Version 3.0.8 - 2021-04-20\n\n### Fixed\n\n- Timeout issues in `enterprise-messaging-shared` in reconnect\n- Queries with a simultaneous use of `$expand` and `$orderby`, when the latter is using functions\n- Preserve non-error messages to client during failing draft activation\n\n## Version 3.0.7 - 2021-04-15\n\n### Added\n\n- CSRF-token handling in service consumption via `@sap-cloud-sdk/core` with `cds.env.features.fetch_csrf = true`\n\n### Fixed\n\n- Timeout issues in `enterprise-messaging-shared`\n\n## Version 3.0.6 - 2021-04-14\n\n### Fixed\n\n- Allow to return primitive properties instead of entities in REST adapter\n- Normalize time data on SQLite to support data type `TIMESTAMP_TEXT`\n\n## Version 3.0.5 - 2021-04-07\n\n### Fixed\n\n- Side effects on `@sap/hana-client`'s streaming extension\n\n## Version 3.0.4 - 2021-04-07\n\n### Fixed\n\n- Empty inserts for nested composition of one\n- Preserve children if multiple compositions to same target\n\n## Version 3.0.3 - 2021-04-01\n\n### Added\n\n- Support for `application/*+json` when parsing events through webhooks\n\n### Fixed\n\n- Navigation properties in `$select` inside of `$expand` query option\n\n## Version 3.0.2 - 2021-03-30\n\n### Added\n\n- Support for `{xpr:...}` as argument of a function in SQL Builder\n- Aliased parameters of a function call using an OData inline parameter syntax are provided as a request payload in `req.data`\n- Skip conversion to UTC on SAP HANA during insert via `.rows()`, `.values()`, or `.as()` with `cds.env.features.preserve_timestamps = true`\n- Beta version of new URL to CQN parser\n  + Use during read requests when serving to REST via `cds.env.features.rest_new_parser`\n  + Known limitations:\n    + Falsy key path segments in navigations, for example, `GET /Books/0/author`\n    + `ne` operator in `$filter` does not match `NULL`\n    + Nested functions, for example, `contains(toupper(...))`\n    + `$select` not filtered for duplicates, for example, `$select=ID,*` -> `columns: ['ID', 'ID', ...]`\n  + Not supported when serving to REST:\n    + Deep navigations, for example, `GET /Books/1/author/books`\n    + `/$count`\n    + `$apply`\n\n### Changed\n\n- Minimum required Node.js version is now 12. Support for Node.js v10 is dropped.\n- Draft handlers registered via `cds.ApplicationService.registerFioriHandlers()` which gets called in `cds.ApplicationService.init()`\n- OData validation is skipped by default. It can be explicitly turned on by setting `cds.odata.skipValidation` config to `false`.\n\n### Fixed\n\n- Accept header matching during media stream\n- Time delta for Date type in temporals\n- Function calls using an OData inline parameter syntax with aliased parameters of primitive types\n- Path navigation in `$orderby` expressions when using SAP HANA functions\n\n### Removed\n\n- Blind path-level logs by odata-server\n\n## Version 3.0.1 - 2021-03-25\n\n### Added\n\n- `PUT` primitive properties via OData\n- Optimistic concurrency control for primitive properties\n- Data for virtual properties filtered out on write to draft tables\n- Annotation `@odata.draft.enclosed`\n\n### Changed\n\n- Grants of `@restrict` in draft are derived from the CRUD vocabulary\n- Unnecessary `@restrict` checks for actions on drafts are skipped (\"in process by user\" check remains)\n- Drafts are deleted after the active version was created/ updated\n- Skip \"with parameters\" clause if no order by clause or all columns in the order by clause are not strings\n  + Deactivate during two-month grace period via compatible feature flag `cds.env.features.skip_with_parameters = false`\n\n### Fixed\n\n- Reading `SiblingEntity` via navigation of a draft enabled entity\n- Inline defined return types of custom actions/functions in REST\n- Multiple integrity errors in one changeset\n- `@Capabilities.NavigationRestrictions` considers \"deep\" navigation paths\n- Add ETags to result based on `@odata.etag` in CSN alone\n- Reading media stream with accept header\n\n### Removed\n\n## Version 3.0.0 - 2021-03-19\n\n### Added\n\n- SAP Event Mesh: Webhook support\n- SAP Event Mesh: Webhook support in multitenancy\n- Messaging: Remove obsolete topics on queue creation\n- Additional convenience look-ups of `messages.properties` files next to models\n- Support for the `@cds.search` annotation to allow a different set of searchable elements in the `$search` OData query option and to extend the search to associated entities (currently not supported)\n- Additional credentials look-up with label `service-manager` in SAP HANA pool\n- Support for new \"Locked by Another User\" request of draft choreography\n\n### Changed\n\n- By default, only elements typed as `string` are searchable via the `$search` OData query option to improve performance\n- Deprecate `@Search.defaultSearchElement` annotation in favor of the `@cds.search` annotation\n- Ignore `not null` annotation on nested structured types in OData x4 flavor (`cds.env.odata.flavor = x4`) if its parent structure is optional\n- Smart quoting based on database-specific keywords exported by `@sap/cds-compiler`\n  + Deactivate during two-month grace period via compatible feature flag `cds.env.features.compiler_keywords = false`\n\n### Fixed\n\n- Using path navigations in `$filter` for SAP HANA-based services configured with `cds.odata.flavor = x4`\n- Only `messaging` will deal with domain-level events\n- Read access using nondraft enabled projections on draft children\n- Debug message when metadata size exceeds cache limit\n- Order by using functions in combination with group by\n- Streaming by navigation\n- Alignment of temporal data with compiler v2 format\n- Calculate `DraftIsCreatedByMe` and `DraftIsProcessedByMe` properties of `DraftAdministrativeData` by reading drafts\n\n### Removed\n\n- Support for version 2 of the `@sap/xssec` package, as it is deprecated. Now, only version 3 of the package is supported.\n\n## Version 2.9.11 - 2021-04-09\n\n### Fixed\n\n- Double quoted SQL keywords\n\n## Version 2.9.10 - 2021-04-07\n\n### Fixed\n\n- Downport of fix \"Side effects on `@sap/hana-client`'s streaming extension\"\n\n## Version 2.9.9 - 2021-04-01\n\n### Fixed\n\n- Managed properties of non-leaf nodes without additional delta shall not be updated during draft activation\n\n## Version 2.9.8 - 2021-03-30\n\n### Added\n\n- Database pool teardown in case of failed db connection attempt\n\n## Version 2.9.7 - 2021-03-18\n\n### Fixed\n\n- Reserved keywords for smart quoting\n- Datetime conversion for SAP HANA in case of `INSERT...as(SELECT...)`\n\n## Version 2.9.6 - 2021-03-12\n\n### Added\n\n- Pass `tcpKeepAliveIdle` to `hdb` (available with `hdb^18`) via environment variable `HDB_TCP_KEEP_ALIVE_IDLE`\n- Database pool teardown in case of credentials become invalid scenario extended by unreachable database\n\n## Version 2.9.5 - 2021-03-08\n\n### Fixed\n\n- Relative error target on draft activation for Fiori Elements with OData v2\n\n## Version 2.9.4 - 2021-03-08\n\n### Fixed\n\n- Determine bound action parameter name in case of changesets\n\n## Version 2.9.3 - 2021-03-04\n\n### Fixed\n\n- Check whether current request is a bound action\n\n## Version 2.9.2 - 2021-03-02\n\n### Fixed\n\n- Result payload by expand of grandchild entity, when the child data that is null\n- Delete composition of one via navigation\n- Use extended model in structured processing\n\n## Version 2.9.1 - 2021-02-26\n\n### Fixed\n\n- Namespace lookup in EDM for OData configuration\n- Find previous entity for inherited authorization restrictions\n- Use extended model in generic CRUD post-processing\n- Clone headers before sanitizing for logs\n\n## Version 2.9.0 - 2021-02-24\n\n### Added\n\n- Support for `cds.LargeString` in queries for remote services\n- Support for tenant-aware emit in AMQP messaging\n- Metadata (for example, `__count` or `@odata.count` for OData V2 and OData V4, correspondingly) of an external service result are uniformly normalized (for example, to `$count`) and propagated with the result by the rest-client\n- Improved support for managed composition of one\n- Support for cascade DELETE for composition of one\n- Smart quoting in SQL statements\n- Improved memory consumption of integrity checks\n- Result payload includes ETag values of composition targets\n- Custom metadata in OData result (alpha)\n- Support for canonical URL to `$metadata` in `@odata.context` of a response: use `cds.env.odata.contextAbsoluteUrl = true` to get a service URL (default) or `cds.env.odata.contextAbsoluteUrl = 'http://example.com/yourService/'` to set your own URL\n\n### Changed\n\n- The default implementation of enterprise messaging (`enterprise-messaging`) is now multitenant aware.\n  Currently only emit is implemented. The old, shared variant is available through `enterprise-messaging-shared`.\n- Skip localization on pure count queries\n- Managed properties of base entity are updated if any composition target is updated\n  - Deactivate during two-month grace period via compatible feature flag `cds.env.features.update_header_item = false`\n- Default text templates for element assertions don't contain an element name as a parameter anymore\n- Custom authorization header can now be set in service consumption\n- Managed associations-to-one aren't expanded in the result of a POST request in case of `cds.odata.flavor = v4`\n  - Deactivate during two-month grace period via compatible feature flag `cds.env.features.skip_expand_assoc = false`\n- Implicit auto exposed entities inherit authorization restrictions from parent\n- Modifying an entity without authorization results in HTTP code `403` instead of `404`\n- Instance-based `@restrict.where` clauses are ignored during `CREATE` (instead of rejecting the request)\n  - Deactivate during two-month grace period via compatible feature flag `cds.env.features.skip_restrict_where = false`\n\n### Fixed\n\n- `req.diff` for deep hierarchies\n- DateTime conversion for `INSERT` statements using `.columns` and `.values/.rows` on SAP HANA\n- OData V4 error response target for bound actions\n- Requests using `$search` query option on draft enabled active entities\n- Path navigations in `$filter` aren't considered as aggregated away when used in combination with `$apply`\n- Draft: Entities with expired draft can now be deleted\n- `Edm.Time`, `Edm.DateTime` and `Edm.DateTimeOffset` serialization issues when using external OData V2 service\n- Primitive property access of Singletons via URL like `/Singleton/name`\n- Path navigation in `$orderby` expressions for draft-enabled services on SAP HANA\n\n### Removed\n\n- Redundant key generation\n\n## Version 2.8.7 - 2021-04-07\n\n### Fixed\n\n- Downport of fix \"Side effects on `@sap/hana-client`'s streaming extension\"\n\n## Version 2.8.6 - 2021-02-17\n\n### Fixed\n\n- Handling of OData query option `$skiptoken` when URL encoded (that is, `%24skiptoken`)\n\n## Version 2.8.5 - 2021-02-16\n\n### Fixed\n\n- Handling of OData query option `$skiptoken`\n\n## Version 2.8.4 - 2021-02-15\n\n### Added\n\n- Database pool teardown in case credentials become invalid\n- Idle timeout added to default database pool configuration\n\n### Fixed\n\n- Crash on bad remote service credentials\n- Wrong case order during query generation in service consumption\n\n## Version 2.8.3 - 2021-02-05\n\n### Fixed\n\n- No pagination while reading single entity\n- `SELECT.limit.offset.val` should be a number\n\n## Version 2.8.2 - 2021-02-03\n\n### Fixed\n\n- `@mandatory` annotation of typed parameters of actions/functions\n\n## Version 2.8.1 - 2021-02-02\n\n### Fixed\n\n- Skip input validation for arrayed types as parameter of actions/functions\n- Log error stack when serving to REST\n- `@assert.range` doesn't imply `@mandatory`\n\n### Removed\n\n- Reconnect for `hdb`\n\n## Version 2.8.0 - 2021-02-01\n\n### Added\n\n- Support for OData proxies (beta)\n- Support for OData cross-service references (beta)\n- Support upsert for to-one containment with foreign key in parent\n- Support for case-insensitive `bearer` prefix when forwarding token in service consumption\n- Support for filter on `null` values in service consumption\n- Server-side pagination for REST services\n- Input validation for typed parameters of actions/functions\n- Format assertion exception for UUIDs in MTX's `ProvisioningService.tenant` (old SAP Cloud Platform subaccount IDs aren't UUIDs)\n- Draft scenario all active is extended\n- Skip integrity checks via:\n  - `@assert.integrity: false` on entity and service level (was only on association level)\n  - `cds.env.features.assert_integrity = false` as global config (private `cds.runtime.skipIntegrity` will be removed)\n- Skip SAP HANA's localization feature (`WITH PARAMETERS ('LOCALE' = '<locale>')`) via `cds.env.features.with_parameters = false`\n- Deprecation warning for `req.run`\n\n### Changed\n\n- ETag added for expanded entities\n- Use `cds.log()` throughout (incl. odata-server)\n- Replace text keys with default text (i.e., w/o locale) before logging error\n- Read after write on draft activate doesn't read deep\n- On HTTP error (status >= 400) during remote service consumption: log details and throw gateway error\n- `accept=application/json,text/plain` is used as default `accept` header for remote service calls\n- Improved custom error message in case acquiring a client from the pool timed out\n- Metadata endpoints are protected by default if the respective service is protected. Deactivate metadata endpoint protection via `cds.env.odata.protectMetadata = false`.\n- Streamlined module names used in logging\n\n### Fixed\n\n- Aggregated-away properties in `$select`, `$expand`, and `$filter` now behave correctly\n- Exception when accessing texts for a renamed localized draft entity\n- Deep Update wrongly tried to create entries if there are nested `to-one` compositions\n- Navigation on singleton\n- Localized error messages if no authentication used\n- Fix draft with expand when ordering by draft-specific columns\n- Incorrect content type in batch response if no `Accept` header is provided\n- Input validation for enums using `falsy` values\n- Insert via navigation throws an error if the root of navigation doesn't exist\n- Filter virtual fields from columns and expand by READ\n- `auto-expand` of generated foreign keys when functions/actions return entities\n- Custom headers are normalized to lower case\n- Post-processing of arrayed elements in Database Service\n- Duplicated key condition in DELETE CQN\n- To be checked data for DELETE integrity checks in actions was wrong\n- Fixed missing `!=` comparator for query generation of remote services\n- CSN modification during resolve view\n- Clash of language-code-like namespaces (for example, `de.` or `fr.`) with localized entities\n- `hdb`'s error event invalidates client\n\n### Removed\n\n- Usage of deprecated `req.run`\n- Support for deprecated config `cds.auth.passport`. Use `cds.requires.auth` instead.\n- Default `$format` query option in case of `GET` requests to remote OData services\n\n## Version 2.7.10 - 2021-01-20\n\n### Fixed\n\n- Downport of fix \"CSN modification during resolve view\"\n\n## Version 2.7.9 - 2021-01-19\n\n### Fixed\n\n- Don't crash if release called without client\n\n## Version 2.7.8 - 2020-12-10\n\n### Fixed\n\n- Null pointer exception when using `$expand`, `$filter`, and `contains` in the same HTTP request\n\n## Version 2.7.7 - 2020-12-08\n\n### Fixed\n\n- In `hdb` driver, stored procedures without OUT parameters can now return values\n- Service consumption when using `.get('/')`\n\n## Version 2.7.6 - 2020-12-07\n\n### Fixed\n\n- Validate pool clients before use\n- Improved default pool configuration\n- Remove `req.run` deprecation warning\n\n## Version 2.7.5 - 2020-12-04\n\n### Fixed\n\n- Messaging incompatibility in combination with `@sap/cds@4.4.3`\n\n## Version 2.7.4 - 2020-12-02\n\n### Fixed\n\n- `filter-node-package` has to be a dev dependency\n\n## Version 2.7.3 - 2020-12-01\n\n### Added\n\n- Deprecation warning for private function `req.run`, which will be removed\n- Custom aggregates in `$apply` (beta)\n- Support for string keys with dots in value (e. g. `a.b.c`) when using keys as segments\n- `$filter`, `$groupby`, and `$orderby` works with path navigation to key for managed association to-one on SQLite\n\n### Changed\n\n- Logging is now done using `cds.log`\n- CREATE and UPDATE requests that aren't allowed due to `@restrict.where` are rejected with `403` instead of `404`\n- No usage of private `req._model` in generic handlers\n- Service consumption: Print Cloud SDK logs only in debug mode\n- Generated API for actions and functions on `ApplicationService` as now done on `Service`\n\n### Fixed\n\n- No integrity check for events\n- Race condition in data listener of messaging\n- External entities are now always automatically resolved\n- Skip integrity checks for virtual entities\n- Auto-expand of to-one association of `CREATE` or `UPDATE` requests\n- `tx.model` in REST requests\n- Expand to association with projection `as select from where`\n\n### Removed\n\n- `req.statements` isn't available anymore\n\n## Version 2.7.2 - 2020-11-20\n\n### Added\n\n- Support for tracing database statements with Dynatrace when using `@sap/hana-client` driver\n\n### Fixed\n\n- Problem with navigations that have `null` as value in payload\n\n## Version 2.7.1 - 2020-11-18\n\n### Changed\n\n- Transaction state handling moved to core\n\n### Fixed\n\n- Response in case of failed changesets in `$batch` requests\n- UPDATE/INSERT via navigation with foreign key in child\n\n### Removed\n\n- Private function `_ensureOpen` of `cds.DatabaseService`\n\n## Version 2.7.0 - 2020-11-18\n\n### Added\n\n- `@assert.range enum { ... }` for decimals\n- Draft: Lock active entity on edit action to prevent duplicate drafts\n- Set batch response header Content-Transfer-Encoding\n\n### Changed\n\n- Correlation ID at `req.headers['x-correlation-id']` in subrequests\n\n### Fixed\n\n- Resolving custom DELETE CQNs\n- Non-nullable values can't be set to `null` in UPDATE requests\n- Delete active entity with DELETE restriction\n- Calculation of HasDraftEntity doesn't involve secure annotations\n- POST/PATCH on composition of aspect didn't insert keys correctly\n- Check for different navigation properties with `$expand`\n- Streaming from nondraft entity in draft context\n- REST Adapter: `PUT` requests on collections are forbidden\n- affected rows in CREATE caused error with hdb\n- Navigating to composition of aspect with association as key caused error\n- Wrongly returned value for key calculation in expand caused for loop to break\n- TypeError by not connected database\n- Multiple messages in batch changeset\n\n### Removed\n\n- Support for `defaultLocale` on service level\n\n## Version 2.6.11 - 2021-01-20\n\n### Fixed\n\n- Downport of fix \"CSN modification during resolve view\"\n\n## Version 2.6.9 - 2020-11-26\n\n### Added\n\n- Internal (for mtx) parameter `poolOnly` to `HanaDatabase.disconnect()` for clearing generic pool entry in case of credentials update\n\n## Version 2.6.8 - 2020-11-16\n\n### Added\n\n- Support for tracing database statements with Dynatrace when using `hdb` driver\n\n### Changed\n\n- No separate logging of error message and stack in OData server\n- Not extended tenants reuse default OData service instance\n\n### Fixed\n\n- Fix for metadata document exceeding cache limit\n\n## Version 2.6.7 - 2020-11-11\n\n### Fixed\n\n- Previous fix broke service consumption of other systems\n\n## Version 2.6.6 - 2020-11-10\n\n### Fixed\n\n- Check `req.path` during DoS prevention\n- Headers handling in service consumption for SAP S/4HANA On-Premise systems\n\n## Version 2.6.5 - 2020-11-09\n\n### Fixed\n\n- Default sorting in combination with `$apply`\n\n## Version 2.6.4 - 2020-11-06\n\n### Fixed\n\n- i18n tests executed in cds-test\n\n## Version 2.6.3 - 2020-11-05\n\n### Fixed\n\n- Url and headers handling in service consumption\n\n## Version 2.6.2 - 2020-11-04\n\n### Fixed\n\n- Augment read after write data with returned values of virtual properties on draft activate\n\n## Version 2.6.1 - 2020-11-04\n\n### Fixed\n\n- Skip forbidden view check if association to view with foreign key in target\n\n## Version 2.6.0 - 2020-11-03\n\n### Added\n\n- Support for `$expand` on managed Composition and Association to-one in structured types\n- Support for CQN partials in `SELECT.orderBy()`\n- `messages_<locale>.properties` files looked for in all i18n folders (not just the first)\n- Structured types as key\n- Support for localization in custom handlers\n- `InsertResult` (beta):\n  - iterator that returns the keys of the created entries, for example:\n    - Example: `[...result]` -> `[{ ID: 1 }, { ID: 2 }, ...]`\n    - in case of `INSERT...as(SELECT...)`, the iterator returns `{}` for each row\n  - `affectedRows`: the number inserted (root) entries or the number of affectedRows in case of INSERT into SELECT\n  - `valueOf()`: returns `affectedRows` such that comparisons like `result > 0` can be used\n    - Note: `===` can't be used as it also compares the type\n- Authentication strategy `xsuaa` (only with `@sap/xssec^3`) that additionally provides access to saml attributes via `req.user.attr` (for example, `req.user.attr.familyName`)\n\n### Changed\n\n- SQL queries don't use placeholders for rows of LIMIT clause\n- Replaced `@sap/odata-server` dependency by own copy\n- On `PATCH` and `PUT`, an `UPDATE` event is followed by a `CREATE` event if there was no matching entity\n- On `PUT`, not provided properties are defaulted/ nulled\n- On HTTP requests, `req.data` is a copy to preserve the original payload\n- Additional properties in payload are preserved for entities with `@cds.persistence.skip` when served to `rest`\n- RemoteService: Ignore where clause of view definition during INSERT|UPDATE|DELETE instead of throwing error\n- Don't use SQL placeholders for numbers\n- Service-level `@requires` are checked in protocol adapter instead of ApplicationService (excluding metadata requests)\n- Additional translatable messages\n\n### Fixed\n\n- Streamlined debugging output for SQL statements\n- Integrity check for Associations in structured types\n- DateTime conversion for SAP HANA\n- Ensure `req.method` and `req.headers`\n- DatabaseService: Ignore where clause of view definition during INSERT|UPDATE|DELETE\n- Activate draft with UPDATE restriction\n- Add the correct backlink to composition tree in case of additional association from child to parent\n- `falsy` default values weren't inserted into the database\n- Always prepare for temporal data\n- Internal server error on views with parameters and join\n- Secure annotation in draft union scenario\n- Augment read after write data with returned values of virtual properties\n- `@restrict` with association paths and `$user.<attr>` in where\n- Result of deep insert\n- `UPDATE` statements in custom handlers on Application Service setting only falsy values or using only expressions like `{stock: {'-=': 1}}`\n\n## Version 2.5.6 - 2020-10-22\n\n### Fixed\n\n- Messaging: add data listener only once queue was put\n\n## Version 2.5.5 - 2020-10-19\n\n### Fixed\n\n- `$user.id` in `restrict.where` always treated as string\n\n## Version 2.5.4 - 2020-10-19\n\n### Fixed\n\n- Certificate issue when consuming remote services\n\n## Version 2.5.3 - 2020-10-16\n\n### Fixed\n\n- Don't fail in `cds deploy --to sqlite` if `sqlite3` isn't installed\n\n## Version 2.5.2 - 2020-10-09\n\n### Fixed\n\n- Don't fail in `cds deploy --dry` if `sqlite3` isn't installed\n\n## Version 2.5.1 - 2020-10-07\n\n### Fixed\n\n- Set temporal session contexts on SAP HANA\n- Multiple invocations of `req.on('failed', () => { ... })`\n\n## Version 2.5.0 - 2020-10-02\n\n### Added\n\n- Messaging: Transaction-coupled events will only be sent for successful requests\n  (can be disabled by setting outbox=false)\n- Support for @assert.notNull: false\n- Messaging: Support for non-normalized input in handler registration\n- Messaging: automatically generate headers.id\n- Support for navigating to association to-one in structured\n- Initial support for `cds.odata.flavors = { v2, v4, w4, x4 }`\n- Support custom timezone offset\n- Support for assertions in structured data\n- Support for annotation `@Capabilities.Readable`\n- Input validation for actions and functions\n- Support language-dependent sorting order for SAP HANA\n\n### Changed\n\n- Input processing: Performance improvements through templating mechanism used in single handler per layer\n- Input processing: Key propagation only on DB layer\n- Format of file-based messaging\n\n### Fixed\n\n- Outbound REST/OData errors in CQN translation\n- View resolution for views with static values\n- Skip transition by view annotated with @cds.persistence.table:true\n- Reading structured types via navigation\n- Filter on elements having the same name as in DraftAdministrativeData\n- Draft union scenario with filter on elements from DraftAdministrativeData\n- Resolving views for deep deletes\n- Key generation in some UPDATE queries\n- SAP HANA: cds.DateTime convert to UTC in draft case\n- Combining `$filter` query option and `$apply` using only filter transformation\n- Join with draft tables\n- Determine name of primary key of draft enabled entity in subselect\n- Improved error message for direct use of auto exposed entity\n- Empty structured types are now null\n- Structured properties with the same name as CQN properties failed to execute\n- Association as key caused wrongly generated SQL statement\n- Deep update with structured type caused wrongly generated SQL statement\n\n## Version 2.4.0 - 2020-09-11\n\n### Added\n\n- Structured types in `$orderby`, `$filter`, `$select`\n- Limited support for Association to-one in structured types\n\n### Changed\n\n- Messaging: The `queue` and `queueConfig` options are now a single object: `{ name, ...queueConfig }`\n- Messaging: The `file` option is now moved to top level\n- Messaging: The `prefix` option is removed\n\n### Fixed\n\n- Diff calculates the difference on database level\n- `sap-messages` header now uses unicode characters for special characters\n- `req.target` for bound operations\n- `INSERT.into(...).as(SELECT.from(...)` inside custom handlers\n- Integrity check for DELETE requests\n- `Serialization Error` for entities with composition of aspects in `containment` mode\n- Expand on entity with a backlink as a key\n\n## Version 2.3.1 - 2020-09-17\n\n### Fixed\n\n- Expand on entity with a backlink as a key\n\n## Version 2.3.0 - 2020-08-31\n\n### Added\n\n- Support for Continuation Local Storage (CLS)\n- Support for access of structured property values in Odata\n- Support for expand for external OData service in REST\n\n### Fixed\n\n- HTTP Status Code for `GET` requests on `navigation-to-many` in combination with `$filter`\n\n## Version 2.2.0 - 2020-08-26\n\n### Added\n\n- Path navigations with keys for managed to-one association in `orderby` work on SQLite e.g. `$orderby=author/id`\n- Support for `cds.PrivilegedUser`\n- Implicit sorting for OData singletons\n\n### Fixed\n\n- Deep update could potentially insert wrong data\n- Deep insert was also done on empty composition-to-many\n- POST via multiple navigations with OData containment activated\n- localized view with parameters\n- implicit sorting order\n- Custom SELECT CQN with join/union in draft enabled service failed for nondraft entities\n- `req.user.attr` access during @restrict processing with @sap/xssec^3\n\n## Version 2.1.9 - 2020-08-26\n\n### Fixed\n\n- hdb reconnect on idle timeout\n\n## Version 2.1.7 - 2020-08-17\n\n### Added\n\n- Composite-Messaging\n- Support for Message Queuing\n- Support for `@sap/xssec^3`\n- `@Common.numericSeverity` in error response\n- Support expand with `*` in QL API\n- Headers can be set with tx.emit on remote HTTP services\n- Propagate @cds.localized:false during deep reads\n- SAP HANA: support for service manager credentials\n\n### Changed\n\n- Messaging: The configuration is moved to top level (before it was in credentials)\n- Messaging: The payload type is now 'application/json'\n\n### Fixed\n\n- Messaging: Messages are only acknowledged if successful\n- Race conditions with messaging management\n- `orderBy` as an empty array\n- Join transaction during local API call\n- Support duplicate names of bound and unbound actions and functions in local API\n- Test read for UPSERT wasn't tenant aware\n- Prefer `cds.env.requires.uaa.credentials`\n- Error while activate with missing mandatory fields\n- Restore `req._.req.authInfo` for compatibility\n- OData V4 single property access in combination with mode `odata=structured`\n- empty string in functions like `tolower`, `toupper`\n\n## Version 2.1.6 - 2020-08-06\n\n### Fixed\n\n- Removal of key properties of contained entity\n- Flattening of to-one association if key is also a to-one association\n- No localization with `SELECT.forUpdate()`\n- Multilevel expand with composition backlink as key\n- Ignore association keys in select for deletion integrity check\n- POST via multiple navigations\n- `req.user.id = <clientId>` with JWT strategy and `client_credentials` flow\n- Transaction handling with integrity check and changesets in JSON batch\n\n## Version 2.1.5 - 2020-08-03\n\n### Added\n\n- Support for `@Capabilities.NavigationRestrictions`\n- Support queries to a model with nested projections to an external service\n\n### Fixed\n\n- `req._.req` in `SAVE` handler\n- Insert duplicate data during deep update\n- SAP HANA: prefer `this.options.credentials`\n- `$orderBy` in case of `DRAFT` with `Union`\n\n## Version 2.1.4 - 2020-07-31\n\n### Added\n\n- Support for structured OData\n- Support for arrayed elements\n\n### Fixed\n\n- Large numbers of expands (>26)\n- Reference integrity check for `DELETE`\n- Localized in combination with draft\n- Propagate @cds.localized:false during deep reads (currently limited to one expand)\n- Fetch specific credentials from multiple xsuaa bindings via `requires.uaa.vcap`\n- Static values in custom backlinks of compositions\n\n## Version 2.1.3 - 2020-07-28\n\n### Added\n\n- Synchronous API for streaming\n- Support calling SAP HANA stored procedures\n\n### Fixed\n\n- Streaming of null values and not found entities\n- Temporal session contexts on SAP HANA\n\n## Version 2.1.2 - 2020-07-24\n\n### Fixed\n\n- SAP HANA credentials handling\n\n## Version 2.1.1 - 2020-07-24\n\n### Fixed\n\n- SAP HANA pooling with instance manager\n\n### Removed\n\n- `req.isDraftChange`, `req.draft`, and `req.draftMetadata` in draft-related handlers\n\n## Version 2.1.0 - 2020-07-22\n\n### Added\n\n- `req.warn(code, msg, target, args)`\n- `req.data` returns an array in case of bulk operations\n- All services as subclasses of new `cds.Service`\n- Differentiation between \"Application Service\" (e.g., providing OData) and \"Persistence Service\" (e.g., database, remote)\n\n### Fixed\n\n- Retrieve performance information via `sap-statistics` header in case of batch requests\n- Direct user authentication challenges in case of `/$batch`\n- HTTP error codes from custom handlers aren't filtered anymore if in 300...500 range\n- following projection with undefined name in target entity\n- Lists and null values in `where` with fluent expressions\n\n### Changed\n\n- Streamlined `req.reject/error/info(code, msg, target, args)`: takes four individual params (number, string, string, array) or one object\n- Changed behavior by handler registration:\n  -- Handlers registered with entity = `*` aren't called by unbound events anymore.\n  -- Handlers registered without entity aren't called by bound events anymore.\n  -- Special case: Handlers registered in form .before/on/after(\\'\\*\\', handler) are called by bound and unbound events.\n- Expanding association from draft-enabled entity to draft enabled entities always provides active version of the expanded entity.\n- If you export a function in an `init.js` file, it will be called with the primary database, and its result is awaited.\n- REST: Since the service is now based on the `cds.Service` base class, all convenience functions (`create`, `post`, etc.) are streamlined.\n- Messaging: Only one queue per app is created, as opposed to one queue per app and external service.\n- Messaging: You can now directly connect to the (technical) messaging service through `await cds.connect.to('messaging')`, no topic names are generated here.\n- Messaging: If you want to link your own or external services to messaging, you need to model your events in CDS.\n- Messaging: If you want to provide custom topics for modeled events, you need to add the `@topic` annotation to the event.\n- Messaging: The `prefix` option in the service's credentials is prepended to events with a `@topic` annotation.\n- Messaging: The syntax to emit events with headers changed:\n  ```js\n  srv.emit({ event: 'yourEvent', data: { some: 'data' }, headers: { some: 'headers' } })\n  ```\n- Messaging: The default file for `file-based-messaging` is `~/.cds-msg-box`.\n- Streamlined handler registration: `srv.before/on/after(<event>, <entity>?, <handler>)`\n  - Event and handler are mandatory; entity must be omitted if unbound action/function (CREATE, READ, UPDATE, DELETE are considered to be bound)\n  - Event and entity may be arrayed\n  - `srv.before/on/after(*, <handler>)` matches all as shorthand\n- `INSERT` statements return an object or array of objects (in case of bulk) with the number of affected rows as result of `valueOf()`, as well as the keys of the inserted entities:\n  ```js\n  const res = await srv.run(\n    INSERT.into('Books').entries([\n      { ID: 1, title: 'one' },\n      { ID: 2, title: 'two' }\n    ])\n  )\n  res > 1 // > true\n  res.keys // > [{ ID: 1 }, { ID: 2 }]\n  ```\n\n### Removed\n\n- Support for run block (`tx.run(() => {})`)\n\n## Version 2.0.3 - 2020-06-19\n\n### Added\n\n- Custom translatable error messages\n- Support for containment in CRUD\n- Support for static values in custom on conditions for associations\n\n### Changed\n\n- on() function for joins doesn't support the simple conditions like on(x, =, y) anymore. Only fluent expressions and object predicates are supported.\n\n### Fixed\n\n- Enterprise Messaging: Received messages are correctly decoded\n- Reading single properties of draft enabled entities via navigations e. g. `/E0(ID=<uuid>,IsActiveEntity=false)/e1(ID=<uuid>,IsActiveEntity=false)/property`\n- Not supported transformation in `groupby` throws cryptic error\n- etag check only if OData request\n- Statements if path expression contains keys of type `cds.Timestamp`, `cds.DateTime` or `cds.Time`\n- `$filter` lambda `any` operator if no argument is provided\n- User attributes in `req.user.attr` merge `info.userInfo` and `info.userAttributes` (authentication strategy `JWT`)\n- User authentication challenges\n\n### Removed\n\n- Support for nested user attributes in `@restrict.where`, e.g., `$user.name.familyName`\n\n## Version 2.0.2 - 2020-06-10\n\n### Added\n\n- Support for XSUAA's user attribute value `$UNRESTRICTED`\n- Default to combination `[...];IEEE754Compatible=true;ExponentialDecimals=true` if IEEE754Compatible or ExponentialDecimals is omitted\n- Use custom authenticate middleware via `cds.env.requires.auth.impl`\n- Authentication strategy `dummy` (`cds.env.requires.auth.strategy = 'dummy'`) that creates super users (i.e., pass all authorization checks)\n- Support relative destination path in rest-client\n\n### Changed\n\n- CQN returned for `req.query` changed — for requests with path expressions, the returned CQN of `req.query` is changed to a simplified format. For `GET /Authors(150)/books` the CQN contains the path in `.from` instead of an `exists` clause in `.where`.\n\n```\n{ SELECT:  {  from: { \"ref\": [\n        {\n          \"id\": \"AdminService.Authors\",\n          \"where\": [ { \"val\": 150 } ]\n        },\n      \"books\"\n      ] } } }\n```\n\n- Authorizations as whitelist: if any restrictions exist for the target, all not explicitly allowed operations are forbidden (e.g., `@restrict: [{ grant: 'READ', ... }]` -> everything but `READ` is forbidden for all, including bound actions and functions)\n- Applicable `@requires` and `@restrict` definitions concatenated by AND\n- Reference to undefined XSUAA user attribute in `@restrict.where` results in forbidden\n- `req.event` for unbound actions and functions is provided without service prefix\n- Increased logging in production (temporarily until revised logging concept is implemented)\n- `cds.serve(..., { passport: [...] }` -> `cds.serve(..., { auth: [...] }`\n\n### Fixed\n\n- `INSERT.into.as(SELECT.from...)` with `SELECT` containing placeholders\n- Requests on a navigation to many with key provided returns 404 if the resource doesn't exist\n- POST/PATCH requests on `Composition of many` with backlink association as key\n- Path expressions on SAP HANA are now flat and not structured anymore\n- `$expand` on `Composition of many` with backlink association as key\n- Roles from scopes including \".\"\n- Ignore unknown arrayed column during input validation\n- Too early client release\n- Pool configurations with default values can be set to `0`\n\n### Removed\n\n- Support for annotation `@cds.persistence.name`\n- Deprecated SQL dialect `hdbcds`\n\n## Version 2.0.1 - 2020-05-20\n\n### Changed\n\n- Passport strategies whitelist: `mock` and `JWT`\n- Authentication not needed for calls to a service's root or metadata endpoints\n- Support for \"public\" entities and actions (i.e., no restrictions) in services without `@requires` but other entities and/or actions with `@restrict`\n\n### Fixed\n\n- `target` added to assert errors\n\n## Version 2.0.0 - 2020-05-20\n\n### Changed\n\n- Update major version number\n\n## Version 1.2.0 - 2020-05-19\n\n### Added\n\n- The timeout of the exclusive lock of drafts can now be configured using `cds.drafts.cancellationTimeout`\n- `req.params`: iterable with key-value pairs for the key predicates of the addressed resource\n\n### Changed\n\n- Slightly improved performance for `$expand`\n- Return key values (single key only) of created entries instead of number of affected rows\n- Annotations `@cds.onInsert` and `@cds.onUpdate` ignore values from the request\n- Processing of read-only values moved to initial before handler\n- Aligned handling of virtual, computed, read-only, immutable with java runtime\n- Allow deep insert on to one association with nonkey property, the nonkey property is silently ignored\n\n### Fixed\n\n- Resolved some performance issues with `@sap/hana-client`\n- `$filter=false or ...` is now possible\n- Custom handler registration in multi-tenant scenario\n- Alias in associations wasn't processed correctly in post-processing\n- `$search` is now applied on the query result of `$apply` as specified in OData V4 spec\n- `evictionRunIntervalMillisForPools` is now treated properly\n- Searching for `_` or `%` in `$filter` queries with `contains`/`startswith`/`endswith`\n- Insert of to-one associations with structured elements\n\n## Version 1.1.1 - 2020-04-28\n\n### Added\n\n- Support for `orderBy` in rest-client\n\n### Changed\n\n- `limit` in CQN is translated to placeholders in SQL\n- QL API: .where() is changed:\n  -- Where with two parameters like .where('x', 1) isn't allowed and should be replaced with .where('x', '=', 1).\n  -- Combinations with partial CQNs like .where({ref: ['x']}, '=', 1) aren't allowed. Use arrays of partial CQNs like .where([ {ref: ['x']}, '=', {val: 1} ]) instead.\n  -- Fluent expressions work as strictly alternating string/value lists (as documented). Partial CQN can be used here as value.\n- Per default, results are now ordered by keys of the entity\n\n### Fixed\n\n- `$filter=false or ...` is now possible\n- CREATE now returns `context.data` if not all non-UUID keys are provided\n  and no error is thrown in the database client\n- CANCEL and PATCH drafts now support multiple fields in where clauses\n- Handler registration for draft events in multitenancy scenario\n- Localize expanded entities\n- Composition and Association to one with expand in draft case\n- Disable local default pagination via `@cds.query.limit.default: 0`\n- Brackets in object predicates in where\n\n## Version 1.1.0 - 2020-04-23\n\n### Added\n\n- Support for CREATE operations with delegated key generation\n- `@cds.persistence.skip` annotated entities return HTTP code 501 in generic handlers\n- Introduced `@cds.localized:false` on entity-level for switching off automatic redirection to localized views\n- Server-side pagination on global, service, and entity-level via `@cds.query.limit`\n- Omitted key predicates of nested composition items are augmented, if possible\n- The exclusive lock of a draft automatically times out after 15 minutes\n- Static where annotations for RUD\n- Associations to one annotated with `@assert.integrity: false` are ignored on integrity checks\n- Support input validation annotations in ODATA\n\n### Changed\n\n- Object notation in `.where` of statements doesn't allow functions anymore\n- `context.diff()` ignores `@cds.persistence.skip` annotated entities\n- Always try to read from localized views (also by draft enabled entities)\n- In multitenant scenario, the CSN model is now always loaded from `@sap/cds-mtx`. Previously, it was only loaded if it was extended.\n- Use open source version of `@sap-cloud-sdk/core`\n- If a column or column alias is used multiple times in a SELECT query, the query is from now on rejected. Example: `SELECT.from(Foo).columns(['c1', 'c1'])`\n\n### Fixed\n\n- Reference integrity checks for foreign entities without stored keys\n- Calculation of `HasActiveEntity`\n- Update and Delete with where annotations\n- Aliases by navigation with complex where annotation\n- `req._.res` is express' ServerResponse\n- SQL Error in case of `$filter` using `ne` operator in combination with `$search`\n- Deep update with immutable fields in child entities\n- Draft union scenario in case of DraftAdministrativeData navigation\n- Transaction handling inside `$batch` requests\n- Multiple aliases in `SELECT.columns`\n- Use `hdb` if in direct dependencies of app (and `@sap/hana-client` isn't)\n- Mapping over a result propagates `$count`\n- Don't ignore rows with `null` column values in negated `$search` queries\n\n# Changelog History\n\nThe CDS Runtime module is the successor of `@sap/cds-services`, `@sap/cds-messaging`, `@sap/cds-rest`, `@sap/cds-hana`, `@sap/cds-sqlite`, and `@sap/cds-sql`. The changelogs of these components can be found contained within each corresponding npm package:\n\n- [cds-services](https://www.npmjs.com/package/@sap/cds-services)\n- [cds-messaging](https://www.npmjs.com/package/@sap/cds-messaging)\n- [cds-rest](https://www.npmjs.com/package/@sap/cds-rest)\n- [cds-hana](https://www.npmjs.com/package/@sap/cds-hana)\n- [cds-sqlite](https://www.npmjs.com/package/@sap/cds-sqlite)\n- [cds-sql](https://www.npmjs.com/package/@sap/cds-sql)\n",
      "downloadsCurrentMonth": 53683,
      "downloadsCurrentFortnight": 23853,
      "downloads365": 1312483,
      "downloadsFortnightGrowth": -20.04,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 291787 },
        { "yearMonth": "2021-08", "downloads": 188895 },
        { "yearMonth": "2021-09", "downloads": 87536 },
        { "yearMonth": "2021-10", "downloads": 76064 },
        { "yearMonth": "2021-11", "downloads": 79006 },
        { "yearMonth": "2021-12", "downloads": 71172 },
        { "yearMonth": "2022-01", "downloads": 76496 },
        { "yearMonth": "2022-02", "downloads": 44721 },
        { "yearMonth": "2022-03", "downloads": 47662 },
        { "yearMonth": "2022-04", "downloads": 52803 },
        { "yearMonth": "2022-05", "downloads": 55554 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T23:57:06.549Z" },
        { "version": "1.1.1", "date": "2020-06-11T23:57:06.926Z" },
        { "version": "modified", "date": "2022-04-06T21:36:28.101Z" },
        { "version": "1.2.2", "date": "2020-06-11T23:57:14.307Z" },
        { "version": "1.1.0", "date": "2020-06-11T23:57:21.728Z" },
        { "version": "2.1.5", "date": "2020-08-05T14:04:57.291Z" },
        { "version": "1.2.8", "date": "2020-08-18T10:33:51.082Z" },
        { "version": "2.1.7", "date": "2020-08-18T11:07:44.038Z" },
        { "version": "2.3.0", "date": "2020-09-03T07:21:22.722Z" },
        { "version": "2.3.1", "date": "2020-09-17T10:21:54.852Z" },
        { "version": "2.5.2", "date": "2020-10-14T07:35:27.350Z" },
        { "version": "2.5.3", "date": "2020-10-19T07:25:33.799Z" },
        { "version": "2.5.5", "date": "2020-10-21T10:38:16.055Z" },
        { "version": "2.5.6", "date": "2020-10-23T11:58:41.764Z" },
        { "version": "2.6.0", "date": "2020-11-04T14:01:39.575Z" },
        { "version": "2.6.2", "date": "2020-11-05T12:11:32.189Z" },
        { "version": "2.6.3", "date": "2020-11-05T15:41:32.559Z" },
        { "version": "2.6.6", "date": "2020-11-10T14:23:13.763Z" },
        { "version": "2.6.7", "date": "2020-11-12T07:04:58.632Z" },
        { "version": "2.6.8", "date": "2020-11-16T16:03:51.291Z" },
        { "version": "2.7.5", "date": "2020-12-04T14:25:40.042Z" },
        { "version": "2.7.6", "date": "2020-12-07T13:07:01.918Z" },
        { "version": "2.7.7", "date": "2020-12-08T10:44:44.025Z" },
        { "version": "2.7.8", "date": "2020-12-10T12:00:50.261Z" },
        { "version": "2.7.9", "date": "2021-01-19T16:49:44.240Z" },
        { "version": "2.6.11", "date": "2021-01-20T17:11:54.123Z" },
        { "version": "2.7.10", "date": "2021-01-20T17:45:22.813Z" },
        { "version": "2.8.1", "date": "2021-02-03T10:15:41.622Z" },
        { "version": "2.8.2", "date": "2021-02-03T10:18:00.585Z" },
        { "version": "2.8.3", "date": "2021-02-05T12:20:56.786Z" },
        { "version": "2.8.4", "date": "2021-02-15T15:12:20.797Z" },
        { "version": "2.8.5", "date": "2021-02-16T21:03:27.866Z" },
        { "version": "2.8.6", "date": "2021-02-17T16:02:17.355Z" },
        { "version": "2.9.1", "date": "2021-03-01T16:30:16.995Z" },
        { "version": "2.9.2", "date": "2021-03-02T14:44:18.105Z" },
        { "version": "2.9.3", "date": "2021-03-04T20:42:05.401Z" },
        { "version": "2.9.4", "date": "2021-03-08T12:41:16.700Z" },
        { "version": "2.9.5", "date": "2021-03-08T17:35:02.169Z" },
        { "version": "2.9.6", "date": "2021-03-12T14:12:46.433Z" },
        { "version": "2.9.7", "date": "2021-03-19T08:27:39.412Z" },
        { "version": "2.9.8", "date": "2021-03-29T19:22:57.272Z" },
        { "version": "2.9.9", "date": "2021-04-01T11:27:30.092Z" },
        { "version": "3.0.4", "date": "2021-04-07T10:07:16.596Z" },
        { "version": "2.8.7", "date": "2021-04-09T09:45:52.524Z" },
        { "version": "3.0.5", "date": "2021-04-09T09:49:12.387Z" },
        { "version": "2.9.11", "date": "2021-04-09T10:17:14.754Z" },
        { "version": "3.0.6", "date": "2021-04-14T07:21:58.629Z" },
        { "version": "2.9.12", "date": "2021-04-15T19:49:13.304Z" },
        { "version": "3.0.7", "date": "2021-04-15T19:58:30.448Z" },
        { "version": "3.0.8", "date": "2021-04-20T17:32:25.061Z" },
        { "version": "3.0.9", "date": "2021-04-29T13:33:39.089Z" },
        { "version": "3.1.0", "date": "2021-05-10T14:34:11.226Z" },
        { "version": "3.1.1", "date": "2021-05-20T16:33:14.489Z" },
        { "version": "3.1.2", "date": "2021-05-28T11:36:38.254Z" },
        { "version": "3.3.0", "date": "2021-09-27T13:05:01.280Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-runtime"
    },
    {
      "name": "cds-services",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T20:46:50.806Z",
      "updatedAt": "2022-04-06T21:36:28.559Z",
      "readme": "# @sap/cds-services\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-services`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n\n## Version 1.27.2 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.27.1 - 2020-03-23\n\n### Fixed\n\n- Alias was added twice to CQN in case of a request including navigations on a draft enabled entity\n\n## Version 1.27.0 - 2020-03-19\n\n### Added\n\n- Transaction uses one timestamp for all queries\n- Pool acquire timeout is set by default and can be configured in pool options\n- Ordered OData singletons (`... as select from <entity> order by <property>`)\n\n### Changed\n\n- $count=true triggers handlers only once now\n- `draftPrepare` action can be called on the entity set of child nodes of the draft enabled entity\n- Normalize user.id if an email address\n- Allow functions and properties as 2nd param in contains, startswith, endswith\n\n### Fixed\n\n- Entity is now correctly resolved if there are conflicting names\n- Where conditions from security annotations were appended twice when using $count=true\n- `req._.req` always contains the incoming request - also in `$batch` requests\n- Error in delete when fields are renamed in views\n- Using view by draft & localized\n- context.diff() returns changes also for `PATCH` of drafts\n- OData requests using `/$count` on navigation-to-many\n- Authentication-requirement detected if in multi tenant mode (i.e., `multiTenant: true`)\n- Integrity check of atomicity group\n- Where annotation in case of draft and navigations\n- `/$count` on parameterized views\n- Streaming from draft in case localized and where annotations\n- @mandatory: empty strings (whitespaces only = empty) are not allowed\n\n## Version 1.25.1 - 2020-02-26\n\n### Fixed\n\n- update of localized text entries replies with 403 if no changes are detected\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.25.0 - 2020-02-25\n\n### Added\n\n- Support for OData singletons\n- Streaming from draft\n- Navigations in aggregate expressions\n\n### Changed\n\n- use odata-server 1.5.2\n\n### Fixed\n\n- handling of virtual field in column generation\n- callstack exceeded in SELECT\n\n## Version 1.24.1 - 2020-02-21\n\n### Added\n\n- Support draft for localized texts (to be enabled by @sap/cds and @sap/cds-compiler)\n\n## Version 1.24.0 - 2020-02-20\n\n### Added\n\n- Support for OData `$apply` with `count distinct`\n\n### Changed\n\n- use odata-server 1.5.1\n\n### Fixed\n\n- Column generation for `SELECT.from()` queries without specifying `.columns()`\n  - `HasDraftEntity` was not properly calculated\n  - Virtual properties were not excluded\n- Where secure annotations with localized entities\n- Handling of `@cds.on.insert/update` annotated properties of draft-enabled entities\n- Keys in root element were not correctly calculated for deep operations\n- `@Core.MediaType` could not be used in entity annotated with `@cds.persistence.skip` \n\n### Removed\n\n- Annotation `@Search.fuzzinessThreshold`\n\n## Version 1.23.0 - 2020-02-05\n\n### Added\n\n- Support non-UUID field as ETags\n- Support draft and ETags\n- Support for complex where in annotations\n- Additional argument `target` for `req.info`\n\n### Changed\n\n- Direct access to auto-exposed entities in draft case\n- Errors normalized based on OData v4 standard\n- Messages (i.e., header `sap-messages`) normalized based on Fiori standard\n- Referential integrity checks are now executed before the commit\n- Result of create and update queries is read from the data source to include computed values (update: root only, i.e., w/o compositons, etc.)\n\n### Fixed\n\n- Race condition when there are erros when saving draft\n- Handling of where from @restrict annotation of draft enabled entity\n- Saving a draft will not ignore readonly fields anymore\n- Not having a connection for unauthorized users will not crash the server anymore\n- In mocked authorization, users don't need the `ID` property\n- Filtering using the `NE` operator handles null values properly\n- For insertable-only entities default values are correctly handled now\n- Immutable values are now ignored during PATCH or UPDATE requests\n- Batch input via REST\n- SELECT * by customer handlers will work also on Hana in case the columns are lowercase\n- Support \"userAttributes\" by Mocked Authentication, \"xs.user.attributes\" is deprecated and will\nbe removed in the next releases\n- Arbitrary users are allowed if fake user '*'= true exist by Mocked Authentication\n\n## Version 1.22.0 - 2019-12-11\n\n### Added\n\n- @sap/cds-ql merged into @sap/cds-services\n- Support for subselects and aliasing for remote service definitions\n- Support for `@cds.persistence.table`.\n- Actions/functions support $select and $expand query params in odata\n- Support cds annotation on insert and update with # (e.g @cds.on.update: #user)\n\n### Changed\n\n- Improve error messages for return type validation of custom operations\n- Draft removal is handled in `onDraftActivateEvent` instead of `onDraftActivate`\n\n### Fixed\n\n- Check whether service requires authentication\n- Independent passport configs per service\n\n## Version 1.21.2 - 2019-12-03\n\n### Fixed\n\n- Default values for patch\n\n## Version 1.21.1 - 2019-11-29\n\n### Added\n\n- Authentication strategy debug messages and error messages for erroneous authentication configurations\n\n### Fixed\n\n- Transform redirect properties in post processing\n\n## Version 1.21.0 - 2019-11-19\n\n### Added\n\n- Support for reading temporal data on HANA\n- Support ETag at odata-v4\n\n### Fixed\n\n- Key generation in deep update\n- Reading `DraftAdministrativeData` of an active entry without existing draft\n\n## Version 1.20.1 - 2019-10-30\n\n### Changed\n\n- Updated version of @sap/cds-ql to 1.20.1\n\n## Version 1.20.0 - 2019-10-29\n\n### Added\n\n- `req.method` property which contains the HTTP method\n- Return type validation for custom operations in rest\n- Support for redirected media properties using `@Core.IsURL`\n\n### Fixed\n\n- Requests to `$metadata`\n\n### Removed\n\n- `npm-shrinkwrap.json`\n- `req._.isPatch`\n\n## Version 1.19.1 - 2019-10-16\n\n### Changed\n\n- Improved error messages\n\n### Fixed\n\n- Empty user attributes in where conditions\n- Queries in custom handler executed twice\n\n## Version 1.19.0 - 2019-10-02\n\n### Added\n\n- Check of source for navigation-to-one in not Draft case\n- log function in default logger\n\n### Changed\n\n- Improved error messages\n- Use `@sap/odata-server@1.3.8`\n\n### Fixed\n\n- Draft service having column names from draft admin table\n- POST and PUT on views with renaming and excluding\n- Draft with custom `oncond` in backlink\n- Batch with multitenancy\n\n## Version 1.18.2 - 2019-09-19\n\n### Changed\n\n- Use `@sap/odata-server@1.3.7`\n\n## Version 1.18.1 - 2019-09-18\n\n### Added\n\n- Support of authorization restrictions with simple static where clauses (e.g. `$user.level = 3`) for actions/functions\n\n### Fixed\n\n- Draft activation by multiple views\n- Binary processing in rest adapter\n\n## Version 1.18.0 - 2019-09-09\n\n### Added\n\n- Support for `@assert.enum` annotation\n- Support for media content-type provided as property\n- Support for binary encoding in rest\n\n### Changed\n\n- Use `@sap/odata-server@1.3.5`\n\n### Fixed\n\n- READ with `@cds.api.ignore` annotation\n- Navigation on Entities with multiple keys did not work correctly\n- UPDATE and UPSERT requests with `@cds.on.update` and `@cds.on.insert` annotations\n- Logging of missing permissions if no authentication strategy is detected\n\n## Version 1.17.0 - 2019-08-21\n\n### Added\n\n- Error handling for streaming\n- Limited support for CREATE requests via navigations\n- Method `.transaction` to local client\n\n### Changed\n\n- CREATE with WHERE restriction is supported only with static checks, otherwise rejected\n- Extended error logs from custom handlers\n- `next()` returns the result of the subsequent handler\n- Use `@sap/cds-messaging` for sending/receiving events between services\n\n### Fixed\n\n- Expand entity with where restriction when clause references a user attribute with multiple values\n- Navigations in `get` requests using `cds.String` as key type\n- Deletion of active entries during draft activation\n- Checking security annotations in service and in entities\n- UUID generation for deep inserts/updates\n- Combination of `localized data` and `$count=true` in OData requests\n- `req.query` in case of bound actions and reached via navigation\n\n## Version 1.16.0 - 2019-07-23\n\n### Added\n\n- Batch Update in REST Adapter using an Array as request body\n- Content-Type for streaming using annotation\n- `DELETE` requests on an entity property sets the property to `null`\n- Integrity check for `DELETE` requests\n\n### Changed\n\n- Behaviour of mock authentication according to documentation\n- `cds.env` is used by authentication if passport not provided in options\n\n### Fixed\n\n- Draft actions for localized entities\n- Write localized data via deep update/insert\n\n## Version 1.15.0 - 2019-07-09\n\n### Added\n\n- Support for views with parameters\n- Support for `filter` transformation in `$apply`\n- Support for `/$value` on primitive properties\n\n### Changed\n\n- Rest adapter accepts non-modelled data fields in the request payload and exposes them in `req.data`; the fields are\n ignored in the generic handlers\n- Replaced `@sap/cds-ql` dependency with `uuid`\n\n### Fixed\n\n- Custom handlers by extended tenants\n- Generic handler lookup if multiple services in one `.cds` file\n- `$expand` with instance-based authorization\n- `result` parameter in AfterHandler has correct format (not always an array)\n  - `CREATE`: the created entity\n  - `UPDATE`: the updated entity\n  - `DELETE`: undefined\n  - for `actions` and `functions` it is the defined return type\n- `@cds.on.insert` and `@cds.on.update` could not be used at the same time\n- `@cds.on.insert` and `@cds.on.update` in deep insert / update\n\n## Version 1.14.0 - 2019-06-24\n\n### Added\n\n- Alternative mock strategy config\n- Support for value ranges annotations for REST adapter\n- Multiple authentication strategies\n\n### Changed\n\n- Handling of deep insert / update for associations\n- Use `@sap/odata-server@1.3.4`\n\n### Fixed\n\n- Bound actions for draft-enabled entities\n- Combination of `$apply` with other query parameters\n\n### Removed\n\n- Caching of metadata as odata already does it\n\n## Version 1.13.0 - 2019-06-07\n\n### Added\n\n- Method `diff` to calculate the actual changes in a `CUD`request or while saving a draft\n- Support authorization annotations for actions and functions\n- Support for default sort order using `@cds.default.order` or `@odata.default.order`\n- Support for writing binary stream through odata\n\n## Version 1.12.0 - 2019-05-24\n\n### Added\n\n- Support for localized in generic handlers (no compositions / associations)\n- Handler registration by path for autoexposed and redirected entities\n- Support for Rest parametric functions and actions\n\n### Changed\n\n- Renamed `Service.with` to `Service.impl`\n\n### Fixed\n\n- `falsy` values as default value\n- `req.info` in case of draft actions\n- Scopes are checked before custom before handlers\n\n## Version 1.11.1 - 2019-05-16\n\n### Changed\n\n- `service.options` is now a public property (previously private as `service._options`)\n\n## Version 1.11.0 - 2019-05-15\n\n### Added\n\n- read-only field annotations validation\n- Deactivate ResourceJsonSerializer in production\n- Validation for content type in rest adapter\n- Support for OData request path expressions à la `Authors/1`\n\n### Changed\n\n- Use `@sap/odata-server@1.3.3`\n\n## Version 1.10.2 - 2019-05-08\n\n### Added\n\n- Support for @Capabilities annotations\n\n### Changed\n\n- Improved performance by reducing calls to process.nextTick()\n\n### Fixed\n\n- Unbound actions and functions in REST\n\n## Version 1.10.1 - 2019-05-07\n\n### Added\n\n- error handling in case mtx errors\n\n### Changed\n\n- Handler registration using `.with` (as done in reuse scenarios)\n\n### Fixed\n\n- Using `$select=association` in odata-v4 adapter\n\n## Version 1.10.0 - 2019-05-03\n\n### Added\n\n- Support for reading streams in `odata v4`\n- Support for batch create in REST adapter\n- Support for combination of scopes and instance based authorization checks\n- Fiori Draft event `SAVE` as alias for `CREATE` and `UPDATE`\n\n### Changed\n\n- Improved performance\n\n## Version 1.9.0 - 2019-04-16\n\n### Added\n\n- 'mock' strategy accepts any user credentials if none configured\n- Support for pseudo role 'system-user'\n- Additional cases at security annotations\n- `sap-statistics=true` as query or header parameter will yield performance statistics\n- $top and $skip at rest adapter\n\n### Changed\n\n- Handlers for `failed` events must only have the error object as an argument\n- Handlers for `succeeded` and `done` events must have no argument at all\n- used new function notation in generated CQN\n- Reduction of round trips to data source by not using transactional blocks at reading requests\n\n### Fixed\n\n- Deep operations in REST adapter\n- Draft edit in case one composition has no entries\n\n## Version 1.8.1 - 2019-04-03\n\n### Fixed\n\n- Events are populated through `req.event`\n\n## Version 1.8.0 - 2019-03-29\n\n### Added\n\n- after handlers using `each` or `row` also work with keyword `async`\n\n### Changed\n\n- Generic `onCommit` or `onRollback` handlers end the transaction of potentially multiple db sessions in the request\ncontext\n- Merged client adapter into service\n\n### Fixed\n\n- Errors not of type Error are not recognized\n- `req.target` in case of a `READ` request of the `DraftAministrativeData` entity\n\n## Version 1.7.2 - 2019-03-25\n\n### Added\n\n- Element/Field annotated with `@mandatory` or `@FieldControl.Mandatory` is treated as not null\n- Added 'mock' strategy for passport\n- Complex cases at security annotations\n- When registering custom handlers for transactional draft events the target property of the `req` parameter now points to the draft\n\n## Version 1.7.1 - 2019-03-20\n\n### Fixed\n\n- Passport is registered correctly in case of `cds.serve('all')`\n- User is now set before it is needed\n\n## Version 1.7.0 - 2019-03-19\n\n### Added\n\n- `req.event` contains the type or name of the incoming request\n- Support for specifying a `target` in `req.error` and  `req.reject`\n- `req.info` to collect info messages in odata-v4. Eventually, they result in the `sap-messages` header.\n- Annotation `@Search.fuzzinessThreshold` to configure Fuzzy Search\n- Support for Extensibility\n- Event handlers for events `succeeded`, `failed` and `done` can be registered at the service event context\n- Support for OData `Arithmetic Functions`, `Date and Time Functions`, `String Functions`\n\n### Changed\n\n- before handlers are executed in parallel\n- `req.error` returns a generic error with all collected errors in `.details`\n- passport method is extracted to the package interface\n\n### Fixed\n\n- No SQL error in case key is generated by DB like done with sequences\n\n## Version 1.6.0 - 2019-02-25\n\n### Added\n\n- Support for `Lambda operators`\n\n### Fixed\n\n- CUD operation with association as key of entity\n\n## Version 1.5.2 - 2019-02-13\n\n### Added\n\n - Support for sql functions lower, upper, trim, length in $filter and $orderby\n\n### Changed\n\n- Sync functions at before and after handler are not wrapped in promise anymore\n- req.reject does not throw anymore\n- @sap/audit-logging only used in case the service is provided via VCAP_SERVICES\n- Unknown query parameters are not longer rejected at REST adapter\n\n### Fixed\n\n- OData version for $metadata\n- Multiple atomicity groups should not share same transaction block\n- Brackets in $filter now work correctly\n\n## Version 1.5.1 - 2019-02-12\n\n### Changed\n\n- @sap/audit-logging only used in case the service is provided via VCAP_SERVICES\n\n### Fixed\n\n- No integrity checks when running without db connection\n\n\n## Version 1.5.0 - 2019-02-07\n\n### Added\n\n- Set foreign keys for POST via `navigation-to-many` and modeled with `$self`\n- Support `content id` placeholders in odata v4 batch requests\n- Support complex cases at security annotations\n\n### Changed\n\n- Referential integrity checks do not run for associations with specified on conditions\n- Rest adapter now ignores query parameters\n- Minimum node version 8.9.0\n- `.data` and `.query` can be overwritten\n\n### Fixed\n\n- Insert with excluded properties having default values\n- Delete active documents in a draft-enabled service without a draft\n- Path segment `/$count` respects `$filter`\n\n## Version 1.4.0 - 2019-01-22\n\n### Added\n\n- When registering service handlers, entities can be given as a list\n- Support requests to /SiblingEntity in draft\n- Annotation `@cds.integrity.skip` to disable reference integrity checks (experimental!)\n\n### Changed\n\n- Replaced @sap/odata-v4 by @sap/odata-server\n\n## Version 1.3.0 - 2019-01-11\n\n### Added\n\n- Authorization filtering and user attributes as lists\n- Referential integrity checks\n\n### Fixed\n\n- No fallback for user identifier in case the user object is empty\n- Reading draft administrative data\n\n## Version 1.2.0 - 2018-12-21\n\n### Added\n\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\n\n### Changed\n\n- `context.draftMetadata` contains draft metadata\n- `context.isDraftChange` indicates only changes in drafts\n- Error messages to be more consistent\n\n### Fixed\n\n- On handler registration for custom handlers in draft\n- Draft children can be deleted without navigations\n- Reading all draft-enabled documents takes into account only own drafts\n\n### Removed\n\n## Version 1.1.0 - 2018-12-12\n\n### Added\n\n- Deep Document Calls (deep insert, deep update and cascade delete)\n- `context.draft` contains draftUUID in case of Create, Update or Delete\n- filter and orderby with navigation\n\n### Changed\n\n- improved error messages\n\n- Activating a draft now triggers the 'UPDATE' or 'CREATE' event\n\n### Fixed\n\n- Create Draft uses default values\n- draftActivate uses correct keys for update\n- $count in draft context now calculates correct result\n- db view with select\n- Support for navigation over draft with count\n- .code property of Errors in Custom handlers will not be overwritten\n\n## Version 1.0.0 - 2018-11-27\n\n### Added\n\n- Support for now function in $filter\n- Support for authorization annotations CREATE, UPDATE, DELETE\n- Conversion of cds.DateTime/Timestamp using UTC\n- Entity definition at service as select view\n\n### Changed\n\n- Update entry makes insert if the entry doesn't exist\n- Log messages are used directly instead of being wrapped\n- Bound functions now have a query value\n- Function next is implicitly executed in synchronous on-handlers\n- Improved error handling\n- Handler registration allows following variations:\n    - Array of events: e.g. ['READ', 'UPDATE']\n    - '*' wildcard for any entity event\n- next() throws error if called twice in same handler\n- Custom implementation must be provided via .with\n- Renamed service.definition to service.model\n- Renamed service.service to service.name\n- updated odata-v4 version to 1.8.0\n- Location header for draft actions is now relative\n\n### Fixed\n\n- POST on existing entity throws 'Bad Request'\n- $search and $filter in combination with some read draft cases\n- POST with navigation does not create a new key\n- Access restriction on service level\n- UPDATE sql statement generated wrong for entity with multiple keys\n- Access to user's locale\n- draftEdit action on entities without children\n- CREATE with not nullable elements\n\n## Version 0.12.0 - 2018-10-17\n\n### Added\n\n- Custom handlers can be registered and executed for bound functions and function imports\n- Added BeforeCreate and BeforeCreateDraft handlers to generate needed UUIDs\n\n### Changed\n\n- Removed translator in the insert based on where by instanced based authorization\n- Removed internal event rejections\n- Not found error message generalized for reading through navigation\n- Refactoring and changes due to updated dependencies\n\n## Version 0.11.0 - 2018-10-04\n\n### Added\n\n- Generic support for Create, Update, Delete on draft-enabled entities\n- Generic support for draftEdit, draftPrepare, draftActivate actions\n- Logger is available in handlers via context.log\n\n### Changed\n\n- Log warning if database connection is missing\n\n### Fixed\n\n- Service requests now return promises instead of thenables\n\n## Version 0.10.1 - 2018-09-18\n\n### Added\n\n- Generic support for Read on draft-enabled entities\n\n### Fixed\n\n- $user annotation works without authorization\n\n## Version 0.10.0 - 2018-09-17\n\n### Added\n\n- Delete Draft\n- Audit Logging of GDPR related events\n- Auto lookup of to be used CF/XSA services from environmental VCAP_SERVICES\n- OData to context.query for nested $filter, $orderby, $op and $skip at $expand\n- Custom types on top of associations\n\n### Changed\n\n- Default for maxPageSize increased to 1000 from 100\n\n### Fixed\n\n- Values for annotated columns (user/now) are included in the response\n\n## Version 0.9.2 - 2018-09-05\n\n### Changed\n\n- Improved npm-shrinkwrap\n\n## Version 0.9.1 - 2018-09-03\n\n### Added\n\n- Create draft\n\n### Removed\n\n- implicit dependency to @sap/cds-sql\n\n## Version 0.9.0 - 2018-08-28\n\n### Added\n\n- API to support the implementation of authorization restrictions\n- Local service client\n- Support for to-one-navigation in $filter\n- Support for annotation @Search.defaultSearchElement to restrict searchable columns in $search\n- Support for sap-language query parameter\n- Support authorization annotations\n- Hooks to add custom logic before and after rollback event\n- Audit Logging of security events\n\n### Fixed\n\n- Pagination in case of $expand\n- $select with managed associations as key\n\n## Version 0.8.1 - 2018-08-09\n\n### Added\n\n- Authentication using passport (including user/attr proxy)\n\n### Changed\n\n- Require submodules on demand\n\n## Version 0.8.0 - 2018-08-07\n\n### Added\n\n- OData Service: $search supports Unary and Binary Expressions without brackets\n- Registration of global handler using star symbol like \"this.on('*', () => {})\"\n- Registration of express middleware using this.use()\n- Improved FeautureNotSupported error message\n- context.reject supported for before, on and after handlers\n<!-- Was never documented publicly: - Support of context.run().then.run() shortcut -->\n\n### Changed\n\n- Updated version of @sap/odata-v4 to ^1.6.0\n\n### Fixed\n\n- Localization in case language is changed\n- Issue with not working $count when filtering active in custom hook\n\n## Version 0.7.0 - 2018-07-11\n\n### Added\n\n- Localization support for $metadata\n- Support for Compositions\n\n### Fixed\n\n- $search also considers foreign keys of managed associations, structured elements and complex types\n\n## Version 0.6.0 - 2018-07-02\n\n### Added\n\n- Multi tenancy support\n\n### Fixed\n\n- Columns are only added once to CQN in case of $expand in combination with $select\n\n## Version 0.5.0 - 2018-06-25\n\n### Added\n\n- Hooks\n  - An any handler can be registered and will be executed for any but COMMIT events\n  - Custom handlers can be registered for before COMMIT and after COMMIT events\n  - \"_\" property added to cds handler argument, which can contain adapter specific data like a request object\n\n- OData Service\n  - $filter supports (not) contains, startsWith, endsWith\n  - $filter supports combinations with and/or\n  - $select within $expand\n  - $apply supported with limited scope\n  - $search supported with limited scope\n\n### Changed\n\n- Hooks\n  - Undocumented OData specific properties removed from \"cds\" handler argument\n  - cds.target contains the unreflected entity instead of the reflected entity\n  - cds.error will collect errors and throw at the end of each block of .before, .on or .after handlers\n  - Second call to next() at a on handler will be ignored and not break the sequence\n\n### Fixed\n\n- Support navigation over entities with multiple keys\n\n### Removed\n\n- In case of a SerializationError the details are only logged and not provided in the response anymore\n\n## Version 0.4.1 - 2018-05-03\n\n### Changed\n\n- Updated version of @sap/cds-ql to 0.4.1\n\n## Version 0.4.0 - 2018-05-02\n\n### Added\n\n- service factory\n- cds used via injection\n\n- Hooks\n  - Support annotations @insertonly and @readonly\n  - Support reject registration for CSN entities\n  - Support reject registration with multiple entity parameters\n\n### Changed\n\n- default logger uses matching methods from console object instead of console.log\n- packages are loaded on demand at Services.js and OData.js instead of required in any case\n- adapted error message in case of 501\n\n## Version 0.3.0 - 2018-04-16\n### Added\n\n- service factory\n  - service.entities is set\n\n- OData Service\n  - Support for $expand=*\n  - Support for $select=*\n\n- Hooks\n  - CSN entities can be used instead of strings to register a handler\n  - .on can be registered with CQN instead of function as handler\n  - .on supports registering N handlers\n  - .on handlers can use a second argument next()\n  - .on can be finished by returning a value\n  - .after with convenience wrappers for each|row argument\n  - .after can now work asynchronously\n\n\n### Changed\n\n- server side paging is enabled by default and set to 100, to disable it set maxPageSize to false.\n\n- refactored service factory\n  - removed option to compile CSN on the fly, only CSN accepted as input format\n  - option to set the URL path is removed\n  - Multi service CSN can be used\n\n- refactored Service class\n  - OData service instantiation is now split in constructor, createODataService and getMiddleWare\n\n- OData Service\n  - Renamed parameters in handler context object (target replaces entity and getEntity)\n  - More expressive error messages\n  - Crash Node.js instance on unhandled error\n\n### Fixed\n\n- limit property is only added to CQN if necessary\n- .reply() is able to handle null values\n\n## Version 0.2.0 - 2018-03-16\n### Added\n\n- option to enable debug mode for odata-v4\n- default logger with option to register custom logger\n- support for server side paging\n- support for cds.serve, which is a Fluent API-style method to read service definitions from the given model(s) and construct services\n- usage of npm-shrinkwrap\n\n### Fixed\n\n- $filter in combination with to many association\n",
      "downloadsCurrentMonth": 3746,
      "downloadsCurrentFortnight": 1623,
      "downloads365": 31707,
      "downloadsFortnightGrowth": -23.55,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 3641 },
        { "yearMonth": "2021-08", "downloads": 3262 },
        { "yearMonth": "2021-09", "downloads": 3204 },
        { "yearMonth": "2021-10", "downloads": 2602 },
        { "yearMonth": "2021-11", "downloads": 1979 },
        { "yearMonth": "2021-12", "downloads": 1927 },
        { "yearMonth": "2022-01", "downloads": 1798 },
        { "yearMonth": "2022-02", "downloads": 1315 },
        { "yearMonth": "2022-03", "downloads": 1850 },
        { "yearMonth": "2022-04", "downloads": 2760 },
        { "yearMonth": "2022-05", "downloads": 3937 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T20:46:50.806Z" },
        { "version": "1.27.1", "date": "2020-06-11T20:46:51.253Z" },
        { "version": "modified", "date": "2022-04-06T21:36:28.559Z" },
        { "version": "1.19.1", "date": "2020-06-11T20:46:58.497Z" },
        { "version": "1.5.2", "date": "2020-06-11T20:47:05.107Z" },
        { "version": "1.11.1", "date": "2020-06-11T20:47:11.838Z" },
        { "version": "1.7.2", "date": "2020-06-11T20:47:19.696Z" },
        { "version": "1.5.0", "date": "2020-06-11T20:47:26.367Z" },
        { "version": "1.14.0", "date": "2020-06-11T20:47:38.085Z" },
        { "version": "1.22.0", "date": "2020-06-11T20:47:49.184Z" },
        { "version": "0.11.0", "date": "2020-06-11T20:47:56.128Z" },
        { "version": "1.18.2", "date": "2020-06-11T20:48:02.944Z" },
        { "version": "0.9.0", "date": "2020-06-11T20:48:10.027Z" },
        { "version": "0.9.2", "date": "2020-06-11T20:48:16.686Z" },
        { "version": "1.21.0", "date": "2020-06-11T20:48:23.219Z" },
        { "version": "1.0.0", "date": "2020-06-11T20:48:30.579Z" },
        { "version": "1.17.0", "date": "2020-06-11T20:48:37.410Z" },
        { "version": "1.25.1", "date": "2020-06-11T20:48:44.064Z" },
        { "version": "0.10.1", "date": "2020-06-11T20:48:51.497Z" },
        { "version": "1.27.2", "date": "2020-08-18T10:34:10.811Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-services"
    },
    {
      "name": "cds-sidecar-client",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T23:35:05.306Z",
      "updatedAt": "2022-04-06T21:36:28.734Z",
      "readme": "# @sap/cds-sidecar-client\nCLI for extensibilty support for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap).\nIntended to be used as part of [@sap/cds-dk](https://www.npmjs.com/package/@sap/cds-dk) only.\n\nSee the [extensibility documentation](https://cap.cloud.sap/docs/advanced/extensibility#extend-saas-applications) for more details.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\n",
      "changelog": "# Changelog\n\n## Version 1.1.23 - 2021-08-25\n\n### Fixed\n\n- Re-enabled compatibility with compiler v1\n\n## Version 1.1.21 - 2021-06-28\n\n### Fixed\n\n- Fix subdomain determination with CF-CLI v7\n- Fix sending username and password for basic auth\n- Fix various requests\n\n## Version 1.1.20 - 2021-06-22\n\n### Fixed\n\n- Interpret various HTTP responses properly.\n- Token is now correctly obtained.\n\n## Version 1.1.19 - 2021-06-16\n\n### Fixed\n\n- Include compiled sources in published cds-sidecar-client package.\n\n## Version 1.1.18 - 2021-06-07\n\n### Changed\n\n- Replace vulnerable 'Got' dependency with 'Axios'.\n- To facilitate debugging, display a few start and end characters of certain secrets in DEBUG output\n  (applies to params that are not user-generated, i.e. short-lived and/or comprising many characters).\n\n## Version 1.1.17 - 2021-05-27\n\n### Fixed\n\n- Compatibility with CF-CLI v7: automatic determination of running apps and relevant CF space for `login`\n- Error on login with username and password (basic auth)\n- Error due to NPM binary not being found on Windows\n\n### Changed\n\n- On SAP Business Application Studio, disable keyring storage as it is unsupported (switch to plain-text automatically)\n- Hide secret data in token-request URL from log output\n\n## Version 1.1.16 - 2021-05-04\n\n### Fixed\n\n- Bug where 'keytar' module path was not correctly determined\n\n## Version 1.1.15 - 2021-04-28\n\n### Fixed\n\n- Compatibility with CF-CLI v7\n\n## Version 1.1.14 - 2021-03-29\n\n### Added\n\n- Compatibility with CDS Compiler v2.\n\n## Version 1.1.13 - 2021-02-26\n\n### Added\n\n- Include original server error message in case of HTTP errors.\n\n## Version 1.1.11 - 2020-11-27\n\n### Added\n\n- `login`, `extend` and `activate` now also support clientid/clientsecret as parameters. This is\nneeded when extending multitenant applications provided as as reusable services (see [CP documentation](https://controlcenter.ondemand.com/index.html#/knowledge_center/articles/2316430f7d804820934910db736cefbf)).\n\n## Version 1.1.8 - 2020-08-26\n\n### Added\n\n- Login/logout: Enable entering the passcode interactively if not given\n\n### Fixed\n\n- Activate: Output additional information in case of error on job-result retrieval\n- Login/logout: Determine running CF apps according to actual number of instances\n- Login/logout: Clarify error messages\n\n## Version 1.1.7 - 2020-08-17\n\n### Fixed\n- The optional `keytar` package is now resolved if it's installed globally.  See the [documentation](https://cap.cloud.sap/docs/guides/extensibility#save-authentication-token-for-simplified-workflow) for more.\n\n## Version 1.1.6 - 2020-08-03\n\n### Added\n\n- Login/logout: Support saving authentication token to desktop keyring (needs additional user-installed Node.js module)\n- Login/logout: Automatic token refresh without the need to provide passcode again\n- Login/logout: Suggest app URLs from Cloud-Foundry org and space currently logged in to (if applicable) if no app URL is supplied\n- Login/logout: Determine missing subdomain from Cloud Foundry if possible\n- Login/logout: Option to clear all invalid settings (where project folder does not exist)\n\n### Changed\n\n- Login/logout: Improved logging\n- Login/logout: Renamed command-line options for clarity\n- Login/logout: Changed location of settings files to adhere to platform standards\n\n### Fixed\n\n- Activate: Corrected exclusion of files from upload\n\n\n## [1.1.4] - 2020-07-23\n\n- JWT tokens for user authentication are no longer saved by default.\n- Provide `login` and `logout` commands to fetch/refresh, provide, and delete authentication tokens and project settings,\n  thus simplifying usage of `extend` and `activate` commands\n- Changed API of `extend` and `activate` commands for reasons of unification\n\n\n## [1.1.3]\n- Activate command now uses asynchronous API to handle long-running jobs\n\n## [1.1.2]\n- Bug fixes\n\n## [1.1.1]\n- Fix for template download: never download templates by default if extension is active\n- Fix for folder determination: use subdomain as folder if no folder was specified\n\n## [1.1.0] - 23.08.2019\n### Added\n- Support of I18N files for extensions added\n- Support of template files\n- Support of custom file up- and download\n- Support of passcode authentication\n### Changed\n### Fixed\n### Removed\n\n## [1.0.0] - 19.07.2019\nInitial release version",
      "downloadsCurrentMonth": 11648,
      "downloadsCurrentFortnight": 4894,
      "downloads365": 633616,
      "downloadsFortnightGrowth": -27.54,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 148311 },
        { "yearMonth": "2021-08", "downloads": 127734 },
        { "yearMonth": "2021-09", "downloads": 130509 },
        { "yearMonth": "2021-10", "downloads": 57202 },
        { "yearMonth": "2021-11", "downloads": 16231 },
        { "yearMonth": "2021-12", "downloads": 14658 },
        { "yearMonth": "2022-01", "downloads": 14000 },
        { "yearMonth": "2022-02", "downloads": 12451 },
        { "yearMonth": "2022-03", "downloads": 11901 },
        { "yearMonth": "2022-04", "downloads": 11204 },
        { "yearMonth": "2022-05", "downloads": 11909 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T23:35:05.306Z" },
        { "version": "1.1.1", "date": "2020-06-11T23:35:05.747Z" },
        { "version": "modified", "date": "2022-04-06T21:36:28.734Z" },
        { "version": "1.1.3", "date": "2020-06-11T23:35:12.430Z" },
        { "version": "1.1.0", "date": "2020-06-11T23:35:20.027Z" },
        { "version": "1.1.6", "date": "2020-08-05T14:55:23.702Z" },
        { "version": "1.1.7", "date": "2020-08-19T11:41:39.739Z" },
        { "version": "1.1.8", "date": "2020-09-02T18:18:50.745Z" },
        { "version": "1.1.9", "date": "2020-10-14T07:14:20.104Z" },
        { "version": "1.1.10", "date": "2020-11-04T14:15:58.954Z" },
        { "version": "1.1.11", "date": "2020-12-04T14:35:18.552Z" },
        { "version": "1.1.12", "date": "2020-12-18T13:19:46.682Z" },
        { "version": "1.1.13", "date": "2021-03-01T19:54:24.667Z" },
        { "version": "1.1.14", "date": "2021-04-07T09:41:47.012Z" },
        { "version": "1.1.16", "date": "2021-05-10T08:14:33.799Z" },
        { "version": "1.1.21", "date": "2021-07-12T07:10:07.969Z" },
        { "version": "1.1.23", "date": "2021-08-26T14:19:37.266Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-sidecar-client"
    },
    {
      "name": "cds-sql",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T22:19:08.710Z",
      "updatedAt": "2022-04-06T21:36:28.934Z",
      "readme": "# @sap/cds-sql\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-sql`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.24.1 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.24.0 - 2020-03-19\n\n### Added\n\n- Support for different columns combinations in INSERT.entries\n- Support for $count in SELECT CQN\n- Support String objects in the annotation expressions\n- .setTransactionTimestamp in BaseClient\n- check for @cds.persistence.skip for deep operations\n\n### Changed\n\n- Use || for concat (works for HANA and sqlite)\n\n### Fixed\n\n- Using view by draft & localized \n- Quote alias in orderBy to work on HANA\n- Expand from not draft enabled entity to draft enabled entity\n- `where` and `orderBy`clauses containing navigations in combination with expand are correctly translated to SQL\n\n## Version 1.23.2 - 2020-02-25\n\n### Fixed\n\n- Missing alias for orderBy caused column ambiguously defined error\n\n## Version 1.23.1 - 2020-02-21\n\n### Added\n\n- Support for set and data in UPDATE CQN\n- Support draft for localized texts \n- Support for with and data in UPDATE CQN\n\n## Version 1.23.0 - 2020-02-19\n\n### Changed\n\n- Convert all search queries using `contains` to `like`\n\n### Fixed\n\n- Searching for `_` or `%` in `$search`\n\n## Version 1.22.0 - 2020-02-05\n\n### Changed\n\n- Managed fields are not removed anymore if they dont belong to operation (e.g. modifiedAt in INSERT, createdAt in UPDATE)\n- `null` is a valid value for a managed field (e. g. if `null` is provided for `@cds.on.insert`, `null` will be inserted to DB)\n\n### Fixed\n\n- Expand with composition to one for draft enabled entity\n\n## Version 1.21.0 - 2019-12-10\n\n### Fixed\n\n- post-processing for columns with function calls\n\n## Version 1.20.1 - 2019-11-29\n\n- Error message when ambiguous naming of alias and entity property occurs in SELECT query\n\n### Changed\n\n- Minor improvements\n\n## Version 1.20.0 - 2019-11-19\n\n### Fixed\n\n- Managed fields were not generated when values are null\n- Read of active entity with navigation and orderBy with draft specific column (e.g `HasActiveEntity`)\n\n## Version 1.19.1 - 2019-10-30\n\n### Fixed\n\n- Expand adding foreign keys twice\n\n## Version 1.19.0 - 2019-10-29\n\n### Changed\n\n- Improved deep update\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.18.1 - 2019-10-16\n\n### Fixed\n\n- Problems with deep update of a composition of one\n- Unhandled promise rejections by expand\n\n## Version 1.18.0 - 2019-10-02\n\n### Fixed\n\n- Problems with backlinks with custom on condition\n\n## Version 1.17.1 - 2019-09-18\n\n### Changed\n\n- Improved error messages\n- Improves SQL Builder for `.where` clauses\n\n## Version 1.17.0 - 2019-09-09\n\n### Fixed\n\n- Expand-to-one in draft context\n- Expand with multiple orderby elements using window function\n- `UUID` generation for `INSERT` statements\n\n## Version 1.16.0 - 2019-08-21\n\n### Fixed\n\n- Missing sub-select columns in case of UNIONs (e.g. when expanding on the DraftAdminTable)\n- UUID generation in custom built deep inserts/updates\n\n## Version 1.15.0 - 2019-07-23\n\n### Added\n\n- `getDraftCompositionTree` to get draft specific composition tree\n\n### Fixed\n\n- Deep Operations with custom on-Condition without backlink\n\n## Version 1.14.0 - 2019-07-09\n\n### Fixed\n\n- Combination of `expand` with instance-based authorization\n\n## Version 1.13.0 - 2019-06-24\n\n### Added\n\n- Struct Mapper checks subselect for matching columns\n\n## Version 1.12.0 - 2019-05-24\n\n### Changed\n\n- Deep insert/update for to-many associations is not allowed\n\n### Fixed\n\n- Property mapper now works for fully-specified columns in SELECT statements\n\n## Version 1.11.1 - 2019-05-16\n\n### Fixed\n\n- Cases with multiple brackets during `onCond` generation\n\n## Version 1.11.0 - 2019-05-15\n\n### Fixed\n\n- Annotate elements with both `@cds.on.insert` and `@cds.on.update`\n\n## Version 1.10.0 - 2019-05-03\n\n### Added\n\n- Support for composition to-one using `$self`\n- Service functions `update`, `read`, `insert`, `delete` and `create`\n\n### Fixed\n\n- Expand with compound keys and orderby where order column is not requested\n- Deeply nested expands\n\n## Version 1.9.0 - 2019-04-16\n\n### Fixed\n\n- Cascading `Delete CQN` generation in case of transitive model\n\n## Version 1.8.0 - 2019-03-29\n\n### Changed\n\n- Minor improvements\n- alphabetical aliases instead of md5 in case of expand\n\n## Version 1.7.0 - 2019-03-19\n\n### Added\n\n- Support for 'list' in function arguments\n- Support for ```from: { ref: [] }``` in DeleteBuilder\n- Support for Compositions with custom on condition (no and/or)\n\n### Fixed\n\n- Expanding of on active draft documents lists without $filter\n- Expand of entities with compound key might return duplicate results\n\n## Version 1.6.0 - 2019-02-25\n\n### Added\n\n- Support for 'func' as defined in cqn spec\n- Support for 'list' in expressions\n- Support for deep insert with recursive entities\n\n### Changed\n\n### Fixed\n\n- Recursion in composition tree\n- Added brackets in oncond\n- Fixed is null / is not null in oncond\n- Falsy values at expanded elements\n- Fixed expand with selected column 'IsActiveEntity'\n\n## Version 1.5.1 - 2019-02-12\n\n### Added\n\n- Support for sql functions lower, upper, trim, length in $filter and $orderby\n\n## Version 1.5.0 - 2019-02-06\n\n### Added\n\n- Support for ```INSERT into ... SELECT ...```\n\n### Changed\n\n- Minimum node version 8.9.0\n- Improve expand performance\n\n## Version 1.4.0 - 2019-01-22\n\n### Added\n\n- Construct SQLs from CQN which includes placeholder\n- Support draft scenario 'Locked by another user'\n\n## Version 1.3.0 - 2019-01-11\n\n### Added\n\n- Support for compound keys\n\n### Changed\n\n- Improve inline detection\n\n## Version 1.2.0 - 2018-12-21\n\n### Added\n\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\n- Reversed cascade delete\n\n## Version 1.1.0 - 2018-12-12\n\n### Added\n\n- Support Deep Document CQNs\n- Support for inline\n- Post processing with CQN that uses select *\n\n### Fixed\n\n- Expand in combination with left outer joins\n\n## Version 1.0.3 - 2018-11-27\n\n### Changed\n\n- Throw root cause instead of CqnParseError\n- Throw root cause instead of SqlError\n\n### Fixed\n\n- Binary generated wrong SQL\n- Complex CQN with draft and expand for Hana\n- Expand modifies copy instead of original CQN\n- Expand with missing columns\n- Expand in combination with limit\n- Post processing of DateTime and Boolean\n\n## Version 0.12.0 - 2018-10-17\n\n- Refactoring and changes due to updated dependencies\n\n## Version 0.11.0 - 2018-10-04\n\n### Added\n\n- Expanding of drafts entries at list pages\n- Expanding of drafts entries at object pages\n\n## Version 0.10.0 - 2018-09-17\n\n### Added\n\n- Support of now/user annotations in structured type\n- Support of expand in combination with contains at where\n- Support of LIMIT/OFFSET, ORDER BY and WHERE at expanded items\n- Custom types on top of associations\n- Support columns: ['*'] at CQN\n\n## Version 0.9.2 - 2018-09-05\n\n### Added\n\n- SQL generation for SELECT statements that include UNION\n\n### Changed\n\n- Improved npm-shrinkwrap\n\n### Fixed\n\n- Postprocessing breaks without CSN\n\n## Version 0.9.1 - 2018-08-28\n\n(Preparation for Release)\n\n## Version 0.9.0 - 2018-08-28\n\n### Changed\n\n- .getColumns includes annotations\n- .deploy of BaseClient uses CDS-Compiler to do database setup\n\n### Fixed\n\n- SQL generation in case of CREATE statements using structured elements containing managed associations\n- Postprocessing of expand to many in plain mode\n\n## Version 0.8.1 - 2018-08-09\n\n### Changed\n\n- Require submodules on demand\n\n## Version 0.8.0 - 2018-08-07\n\n### Added\n\n- Support for exists in combination with expand\n- Support column annotations '@cds.on.insert', '@cds.on.update', '@odata.on.insert' and '@odata.on.update'\n- Post processing of complex and structured types\n- Support for unary and binary expressions in contains\n- Support for CQN partials at .where\n\n### Changed\n\n- Renamed SELECT.elements to SELECT.columns\n- SQL Error provides info about the executed query and values in logs\n\n### Fixed\n\n- Deep expands with more than 10 levels\n- Expand to composition and further to one association\n- Structured types at expand could lead to ambiguity\n\n## Version 0.7.0 - 2018-07-11\n\n### Added\n\n- CREATE supports type cds.Composition\n- Expand supports type cds.Composition\n- Support for structured elements\n\n## Version 0.6.0 - 2018-07-02\n\n### Added\n\n<!-- Was never documented publicly: - Shortcut for running queries with run().then.run() -->\n\n### Fixed\n\n- SQL generation in case of combination of navigation and expand in SELECT statements\n\n## Version 0.5.0 - 2018-06-25\n\n### Added\n\n- custom builders can now be provided via options in SQL Builder\n- support create with views\n- added SQL Error to hide the internal information from other errors\n- support structured elements\n- support for complex types in Create Builder\n- BaseClient has method .deploy to easily create database artifacts from csn model\n- support for SQL function contains by converting it using like\n- support execution of blocks of statements\n\n### Changed\n\n- quotation in SQL generation is now configurable (default is plain)\n- support for latest CQN spec changes\n\n### Fixed\n\n- column generation for managed associations\n- CREATE statement with managed association as key\n- resolve $self for expand\n- 1:1 associations can be null\n\n## Version 0.4.0 - 2018-05-02\n\n### Added\n\n- BaseClient has methods .run & .foreach & .isValid\n\n### Changed\n\n- support for latest CQN spec changes\n\n## Version 0.3.0 - 2018-04-16\n\n### Added\n\n- support CREATE statements\n\n### Fixed\n\n- auto-generated columns in expand=* requests\n\n## Version 0.2.0 - 2018-03-16\n### Added\n\n- usage of npm-shrinkwrap\n\n### Changed\n\n- improved performance for expand in case of one-to-many relations\n\n### Fixed\n\n- ambiguous column name when having multiple expands on same entity\n",
      "downloadsCurrentMonth": 7731,
      "downloadsCurrentFortnight": 3354,
      "downloads365": 48635,
      "downloadsFortnightGrowth": -23.37,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 4905 },
        { "yearMonth": "2021-08", "downloads": 4274 },
        { "yearMonth": "2021-09", "downloads": 4213 },
        { "yearMonth": "2021-10", "downloads": 3369 },
        { "yearMonth": "2021-11", "downloads": 2010 },
        { "yearMonth": "2021-12", "downloads": 1937 },
        { "yearMonth": "2022-01", "downloads": 1801 },
        { "yearMonth": "2022-02", "downloads": 1746 },
        { "yearMonth": "2022-03", "downloads": 4817 },
        { "yearMonth": "2022-04", "downloads": 6582 },
        { "yearMonth": "2022-05", "downloads": 8058 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T22:19:08.710Z" },
        { "version": "1.11.1", "date": "2020-06-11T22:19:09.129Z" },
        { "version": "modified", "date": "2022-04-06T21:36:28.934Z" },
        { "version": "1.5.0", "date": "2020-06-11T22:19:15.883Z" },
        { "version": "1.24.0", "date": "2020-06-11T22:19:22.849Z" },
        { "version": "1.7.0", "date": "2020-06-11T22:19:34.189Z" },
        { "version": "1.23.2", "date": "2020-06-11T22:19:40.247Z" },
        { "version": "1.5.1", "date": "2020-06-11T22:19:47.439Z" },
        { "version": "0.11.0", "date": "2020-06-11T22:19:53.539Z" },
        { "version": "0.9.1", "date": "2020-06-11T22:19:59.414Z" },
        { "version": "1.16.0", "date": "2020-06-11T22:20:05.620Z" },
        { "version": "1.21.0", "date": "2020-06-11T22:20:16.570Z" },
        { "version": "1.20.0", "date": "2020-06-11T22:20:22.627Z" },
        { "version": "0.10.0", "date": "2020-06-11T22:20:28.661Z" },
        { "version": "1.18.1", "date": "2020-06-11T22:20:35.859Z" },
        { "version": "0.9.2", "date": "2020-06-11T22:20:41.978Z" },
        { "version": "1.0.3", "date": "2020-06-11T22:20:50.212Z" },
        { "version": "1.13.0", "date": "2020-06-11T22:20:56.300Z" },
        { "version": "1.17.1", "date": "2020-06-11T22:21:03.399Z" },
        { "version": "1.24.1", "date": "2020-08-18T10:34:26.764Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-sql"
    },
    {
      "name": "cds-sqlite",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T22:01:39.907Z",
      "updatedAt": "2022-04-06T21:36:29.105Z",
      "readme": "# @sap/cds-sqlite\n\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-sqlite`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\n\n## Version 1.24.1 - 2020-08-12\n\n### Fixed\n- README and LICENSE\n\n## Version 1.24.0 - 2020-03-19\n\n### Added\n\n- Single timestamp per transaction\n- default timeout 5s for acquiring client from pool\n\n### Changed\n- deleted concat handling (done in cds-sql)\n\n## Version 1.23.1 - 2020-02-26\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.23.0 - 2020-02-19\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.23.0\n\n## Version 1.22.0 - 2020-02-05\n\n### Added\n\n- Allow setting the [journal mode](https://www.sqlite.org/draft/pragma.html#pragma_journal_mode) via credentials.journalMode\n\n### Changed\n\n- Pool options can once again be overwritten\n\n## Version 1.21.0 - 2019-12-10\n\n### Changed\n\n- Pool options always set to default\n\n## Version 1.20.1 - 2019-11-29\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.20.1\n\n## Version 1.20.0 - 2019-11-19\n\n### Added\n\n- Conversion of hana's `seconds_between` function to `strftime` for sqlite\n\n## Version 1.19.1 - 2019-10-30\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.19.1\n\n## Version 1.19.0 - 2019-10-29\n\n### Removed\n\n- `npm-shrinkwrap.json`\n\n## Version 1.18.1 - 2019-10-16\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.18.1\n\n## Version 1.18.0 - 2019-10-02\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.18.0\n\n## Version 1.17.1 - 2019-09-18\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.17.1\n\n## Version 1.17.0 - 2019-09-09\n\n### Added\n\n- Streaming into sqlite\n\n## Version 1.16.0 - 2019-08-21\n\n### Changed\n\n- Signature of the Client's constructor\n\n## Version 1.15.0 - 2019-07-23\n\n### Added\n\n- Support multi tenancy for file based database\n\n### Fixed\n\n- Streaming supports `null` values\n\n## Version 1.14.0 - 2019-07-09\n\n### Added\n\n- Named binding parameters\n- Support files as db in tenant manager\n\n## Version 1.13.0 - 2019-06-24\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.13.0\n\n## Version 1.12.0 - 2019-05-24\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.12.0\n\n## Version 1.11.1 - 2019-05-16\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.11.1\n\n## Version 1.11.0 - 2019-05-15\n\n### Changed\n\n- Bulk inserts are now traced\n\n## Version 1.10.0 - 2019-05-03\n\n### Added\n\n- Mitigation for loosely typed columns and imported data\n- service related functions\n- Streaming support via `client.stream()`\n\n## Version 1.9.0 - 2019-04-16\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.9.0\n\n## Version 1.8.0 - 2019-03-29\n\n### Added\n\n- Support for odata method functions\n\n## Version 1.7.0 - 2019-03-19\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.7.0\n\n## Version 1.6.0 - 2019-02-25\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.6.0\n\n## Version 1.5.1 - 2019-02-12\n\n### Changed\n\n- Updated version of @sap/cds-sql to 1.5.1\n\n## Version 1.5.0 - 2019-02-06\n\n### Changed\n\n- Minimum node version 8.9.0\n- Improve expand performance\n\n## Version 1.4.0 - 2019-01-22\n\n### Added\n\n- `.execute` supports placeholders in CQN\n\n## Version 1.3.0 - 2019-01-11\n\n### Changed\n\n- Use latest version of @sap/cds-sql\n\n## Version 1.2.0 - 2018-12-21\n\n### Added\n\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\n\n## Version 1.1.0 - 2018-12-12\n\n### Added\n\n- Support Deep Document CQNs\n\n## Version 1.0.3 - 2018-11-27\n\n### Added\n\n- credentials.database can be used instead of parameters host and url\n\n### Changed\n\n- Throw db error instead of wrapping it in Sql Error\n- Throw an error if database is not defined instead of fallback to memory\n\n### Fixed\n\n- Bulk Insert with $user / $now\n- Post processing of Binary, Boolean, DateTime and Integer64\n\n## Version 0.10.0 - 2018-10-17\n\n- Refactoring and changes due to updated dependencies \n\n## Version 0.9.0 - 2018-10-04\n\n### Changed\n\n- Updated version of @sap/cds-sql to 0.11.0\n\n## Version 0.8.0 - 2018-09-17\n\n### Fixed\n\n- CQN queries with contains and expand (limitation: expanded columns cannot be part of contains)\n\n## Version 0.7.1 - 2018-09-05\n   \n### Changed\n\n- Improved npm-shrinkwrap\n\n## Version 0.7.0 - 2018-08-28\n\n### Changed\n\n- API documentation updated\n\n## Version 0.6.1 - 2018-08-09\n\n### Changed\n\n- Require submodules on demand\n\n## Version 0.6.0 - 2018-08-07\n\n### Added\n\n- cds.Timestamp and cds.DateTime converted into ISO time format when reading\n- Support for abstract placeholders #now and #user\n\n### Fixed\n\n- SQL error hides internal error messages and provides details in log\n\n## Version 0.5.0 - 2018-06-25\n\n### Added\n\n- support execution of blocks of statements\n- support plain mode of SQL name mapping\n \n### Changed\n\n - Added SQL Error to hide the internal information from other errors\n\n### Fixed\n\n- CDS injection\n\n## Version 0.4.0 - 2018-05-02\n\n### Changed\n\n- connect options aligned to spec\n- support for latest CQN spec changes\n\n## Version 0.3.0 - 2018-04-16\n\n### Added\n\n- support CREATE statements\n\n## Version 0.2.0 - 2018-03-16\n\n### Added\n\n- usage of npm-shrinkwrap\n\n### Changed\n\n- improved performance\n",
      "downloadsCurrentMonth": 7746,
      "downloadsCurrentFortnight": 3374,
      "downloads365": 42642,
      "downloadsFortnightGrowth": -22.83,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 3644 },
        { "yearMonth": "2021-08", "downloads": 3272 },
        { "yearMonth": "2021-09", "downloads": 3210 },
        { "yearMonth": "2021-10", "downloads": 2609 },
        { "yearMonth": "2021-11", "downloads": 1999 },
        { "yearMonth": "2021-12", "downloads": 1918 },
        { "yearMonth": "2022-01", "downloads": 1798 },
        { "yearMonth": "2022-02", "downloads": 1429 },
        { "yearMonth": "2022-03", "downloads": 3949 },
        { "yearMonth": "2022-04", "downloads": 6518 },
        { "yearMonth": "2022-05", "downloads": 8060 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T22:01:39.907Z" },
        { "version": "1.11.1", "date": "2020-06-11T22:01:40.311Z" },
        { "version": "modified", "date": "2022-04-06T21:36:29.105Z" },
        { "version": "0.9.0", "date": "2020-06-11T22:01:46.521Z" },
        { "version": "1.5.0", "date": "2020-06-11T22:01:52.417Z" },
        { "version": "1.24.0", "date": "2020-06-11T22:01:58.429Z" },
        { "version": "1.17.1", "date": "2020-06-11T22:02:04.360Z" },
        { "version": "1.5.1", "date": "2020-06-11T22:02:10.362Z" },
        { "version": "1.18.1", "date": "2020-06-11T22:02:17.488Z" },
        { "version": "1.16.0", "date": "2020-06-11T22:02:23.576Z" },
        { "version": "1.21.0", "date": "2020-06-11T22:02:29.617Z" },
        { "version": "1.20.0", "date": "2020-06-11T22:02:35.740Z" },
        { "version": "1.7.0", "date": "2020-06-11T22:02:41.674Z" },
        { "version": "0.8.0", "date": "2020-06-11T22:02:47.867Z" },
        { "version": "1.23.1", "date": "2020-06-11T22:02:54.209Z" },
        { "version": "0.7.0", "date": "2020-06-11T22:03:00.173Z" },
        { "version": "1.0.3", "date": "2020-06-11T22:03:06.100Z" },
        { "version": "1.13.0", "date": "2020-06-11T22:03:13.487Z" },
        { "version": "0.7.1", "date": "2020-06-11T22:03:20.308Z" },
        { "version": "1.24.1", "date": "2020-08-18T10:34:48.952Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds-sqlite"
    },
    {
      "name": "cds",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-11T22:48:33.267Z",
      "updatedAt": "2022-05-24T12:26:19.491Z",
      "readme": "# @sap/cds\n\nThe API package for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap).\n\nSee the [API documentation](https://cap.cloud.sap/docs/node.js/api) for more details.\n\n## License\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\n",
      "changelog": "# Change Log\n\n- All notable changes to this project are documented in this file.\n- The format is based on [Keep a Changelog](http://keepachangelog.com/).\n- This project adheres to [Semantic Versioning](http://semver.org/).\n\n\n## Version 5.9.6 - 2022-05-24\n\n### Fixed\n\n- Ignored requests in batch requests\n- `pool` module for logger facade is separated from `hana` database logger. Timeout error by acquiring client from pool is now enhanced with `_poolState` providing current pool attibutes.\n- Multiple errors did not have correct HTTP response status code\n- `POST|PUT|PATCH` requests with `charset` directive in `Content-Type` header (e.g. `Content-Type: application/json; charset=utf-8`) no longer issues an error \"Invalid content type\" in REST adapters\n- Call hana procedure:\n  + accepted are any symbols in a procedure name if it is delimited with a double quotation (`\"`)\n  + fixed results for table output parameters when using `@sap/hana-client`; **limitation**: output parameters in a `CALL` statement must follow the same order used in a stored procedure definition\n- `@odata.context` considers `cds.env.odata.contextAbsoluteUrl` when requesting an OData Service\n\n## Version 5.9.5 - 2022-05-09\n\n### Fixed\n\n- `HDB_TCP_KEEP_ALIVE_IDLE` config\n- A combination of `!=` operator and `or` in `where` clauses of `@restrict` annotations or when adjusting `req.query` in custom handlers (OData services only)\n- Programmatic calls to bound actions/functions do have keys in `req.data` again if compat flag `cds.env.features.keys_in_data_compat` is set\n\n## Version 5.9.4 - 2022-05-02\n\n### Fixed\n\n- Error messages are improved if no `passport` module was found or if no `xsuaa` service binding is available\n- Issue fixed for `srv.get()`. It was returning `TypeError` in plain REST usage for external services, e.g. `srv.get('/some/arbitrary/path/111')`\n- Allow unrestricted services to run unauthenticated, removing the `Unable to require required package/file \"passport\"` error. Totally not recommended in production.  Note that though this restores pre 5.9.0 behavior, this will come again starting in 6.0.\n- Audit logging of sensitive data in a composition child if its parent is annotated with `@PersonalData.EntitySemantics: 'Other'` and has no data privacy annotations other than `@PersonalData.FieldSemantics: 'DataSubjectID'` annotating a corresponding composition, for example:\n  ```js\n    annotate Customers with @PersonalData : {\n      DataSubjectRole : 'Address',\n      EntitySemantics : 'Other'\n    } {\n      addresses @PersonalData.FieldSemantics: 'DataSubjectID';\n    }\n    annotate CustomerPostalAddress with @PersonalData : {\n      DataSubjectRole : 'Address',\n      EntitySemantics : 'DataSubject'\n    } {\n      ID @PersonalData.FieldSemantics : 'DataSubjectID';\n      street @PersonalData.IsPotentiallyPersonal;\n      town @PersonalData.IsPotentiallySensitive;\n    }\n  ```\n\n## Version 5.9.3 - 2022-04-25\n\n### Fixed\n\n- Since 5.8.2 `req.target` for requests like `srv.put('/MyService.entity')` is defined, but `req.query` undefined (before `req.target` was also undefined). This was leading to accessing undefined, which has been fixed.\n- Custom actions with names conflicting with methods from service base classes, e.g. `run()`, could lead to hard-to-detect errors. This is now detected and avoided with a warning.\n- Typed methods for custom actions were erroneously applied to `cds.db` service, which led to server crashes, e.g. when the action was named `deploy()`.\n- Invalid batch requests were further processed after error response was already sent to client, leading to an InternalServerError\n- Full support of `SELECT` queries with operator expressions (`xpr`)\n\n\n## Version 5.9.2 - 2022-04-07\n\n### Fixed\n\n- i18n translation for errors did not work correctly in some cases\n- Normalization in custom `getRestrictions`\n- Throw exception by `INSERT` into HANA queries if number of provided rows deviates from number of affected rows returned by hdb to prevent data losses\n- Handler detection for extended services\n- Speed-up in localization handling\n- Draft: navigation via an association to many from a non-draft enabled entity to a draft-enabled entity\n- Limited support of `SELECT` queries with operator expressions (`xpr`)\n\n## Version 5.9.1 - 2022-03-31\n\n### Fixed\n\n- Function arguments might be escaped too often\n- URL encoding for remote services for CQN queries\n- `cds serve` during development again redirects URLs with for UI apps in a folder with the same name as a service, so `/foo/webapp` would redirect to `/foo`.  This got broken in 5.8.3.\n- Endless loop in localization handling\n- Ensure service impl while extending entity from the service\n- Post-processing of custom draft queries\n- No minifying of CSN artifacts for Java build\n\n## Version 5.9.0 - 2022-03-25\n\n### Added\n\n- Enable custom audit logging implementation by subclassing or prepending `cds.AuditLogService`\n- Log authentication/authorization traces, for example, authentication strategy, and access control decisions to facilitate troubleshooting in debug mode.\n- Bound functions and actions calls with odata-v2 from remote service\n- Beta support for procedure calls with table output data (SAP HANA only)\n  + Both hdb and `@sap/hana-client` currently do not support parameter metadata for table output. To provide the functionality anyways, CAP must fetch the metadata itself. As this is not CAP's expertise, the feature is only beta.\n  + All parameters must be named or unnamed, that is `CALL EXAMPLE_PROC(PARAM_1 => ?,PARAM_2 => ?)` or `CALL EXAMPLE_PROC(?,?)`\n- Alpha `cds.ApplicationService.getRestrictions(definition, event, user)`, which returns the applicable restrictions for the current request as follows:\n  + `null`: unrestricted access\n  + `[]`: no applicable restrictions -> no access\n  + `[{ grant: '...', to: ['...'], where: '...' }, ...]`: applicable restrictions with grant normalized to strings\n    + That is, `grant: ['CREATE', 'UPDATE']` in model becomes `[{ grant: 'CREATE' }, { grant: 'UPDATE' }]`\n  + Promise resolving to any of the above (needed for CAS override)\n- Internal model provider service can be used for obtaining dynamic csn including features and key user extensions\n- Support insert of SQL snippets for HANA migration tables using @sql.append and @sql.prepend annotations.\n- Support for the `@odata.draft.enclosed` annotation on associations targeted via navigation — previously only supported for `$expand`\n- Pseudo role `internal-user` for technical user tokens acquired from own XSUAA instance\n- Include globally-installed cds-dk version in output of `cds version`.\n- Include version of cds-mtx in output of `cds version`, if available.\n- Feature toggle support in `cds build` for cloud deployments. Create language bundles and parsed CSN for all features.\n\n### Changed\n\n- Cleaned up `cds.env.requires` towards a consistent usage:\n  + Moved all entries of `cds.requires` to `cds.requires.kinds` → `cds.requires` is empty now by default, but has `cds.requires.kinds` as prototype, so e.g. `cds.requires.sql` will still return a match.\n  + Added support for db-specific  `cds.requires.db.deploy-format` → deprecating `cds.hana.deploy-format` (which is still supported for compatibility)\n  + Introduced `cds.requires.kinds.hana-cloud` as `{kind:hana, deploy-format:hdbtable}` → to be used by default for production\n  + Changed `cds.requires.audit-log` to be consistent to all other; also got moved to `cds.requires.kinds.audit-log`, so it is no longer activated by default.\n  + Added support for `cds.requires.foo: true` with `foo` being a preset/prototype entry in `cds.requires.kinds` → allows to more easily switch on pre-configured services.\n- Update-managed properties (`@cds.on.update`) are always updated\n  + Example: `UPDATE('Books').set({}).where({ ID: 1 })` leads to new modifiedAt and modifiedBy\n  + Does not apply to nested entities that are only preserved by specifying their primary keys in the data\n  + Deactivate during two month grace period via compact feature flag `cds.env.features.update_managed_properties = false`\n- Response no longer contains keys neither technical draft properties (e.g. `HasDraftEntity` or `InProcessByUser`) in expanded data if they were not requested explicitly when using `cds.Service` API\n  + Example:\n    ```js\n    > await srv.read('Authors', a => { a.name, a.books(b => { b.title }) }).where({ ID: 1 })\n    // -> \"old behaviour\" result\n    [{ name: 'Emily Brontë', books: [{ title: 'Wuthering Heights', ID: 201 }] }]\n    // -> \"new behaviour\" result\n    [{ name: 'Emily Brontë', books: [{ title: 'Wuthering Heights' }] }]\n    ```\n  + Technical draft properties are not automatically fetched also on a root level\n  + Deactivate during two month grace period via compat feature flag `cds.env.features.auto_fetch_expand_keys = true`\n- Access control is checked in generic handlers (rather than handlers materialized on app startup)\n- Expand restriction check moved to pre-before phase\n- The active state of an entity is read instead of the draft state when navigating from a draft entity to a draft-enabled entity via an association.\n- Authentication middleware is always mounted (used to be only for restricted services)\n- Fiori preview now uses the Horizon theme\n- 'Preview' links in generic index.html page no longer get the word _preview_ appended automatically, allowing for more flexible naming.  Link providers should make sure to add the _preview_ word if necessary.\n- Don't throw error in GraphQL adapter if update mutation filter does not match any entries (to be consistent with delete mutations)\n- Remote call of unbound action/function returns octet-stream instead of string by default\n- Default pool's behaviour has been changed from `FIFO` (queue) to `LIFO` (stack). Can be changed in pool configuration.\n- `cds run/serve` now gracefully shuts down the HTTP server before exiting.  Custom handlers for signals like `SIGTERM` or `SIGINT` can now be processed.\n- `cds build` no longer creates `COMMENT` statements for HANA if doc comments are present in CDS models.  The statements caused superfluous table migrations during HANA deployments.\n\n### Fixed\n\n- Logging of failed requests to remote services was incompatible to Elasticsearch\n- `cds serve --project <dir>` didn't serve static web resources from `<dir>`\n- `cds serve -p <dir>` was meant to be a shortcut for `cds serve --project <dir>`\n- Messaging: Use correct kind for logging\n- Incorrect return values for update-managed properties (`@cds.on.update`) of child entities that were not changed in request\n- `$filter` with navigation to-one eq null\n- Calculation of `DraftIsProcessedByMe` when navigating to `DraftAdministrativeData`\n- Inbound streaming with media type annotated as `@Core.Computed`\n- Pass column expression into `SELECT()` (example: `SELECT('SUBSTRING(locale,0,2) as loc').from(<entity>)`)\n- Annotation `@cds.api.ignore` ignores key in new parser\n- Inconsistencies in actions and functions API\n- Opening root transaction in `srv.run` if none exists\n- Glitches in handling of `req.user.tenant` and `req.user.locale`\n- Flattened keys in URL are resolved correctly if they are unique in new REST adapter\n- Actions and functions in REST adapter\n- Empty string as key does not work in new parser\n- Requesting property of an entity caused error in new parser\n- The SQLite CSV import now imports `\"true\"` and `\"false\"` as strings instead of Booleans\n- Fixed loading mechanism for custom build task handlers\n- `req.diff()` for `UPDATE` on a view with renamed property in `orderBy`\n- `$user.<attr>` for managed properties (`@cds.on.insert`/`@cds.on.update`)\n- GraphQL `__typename` meta field if it is the only selected field of an association/composition\n- Command shortcuts like `cds c` are now handled properly if executed in an NPM script\n- ETag is not included in expanded entities using `$select`, for example: `Books(1)?$expand=author($select=ID)`\n- `cds.compile.to...` no longer crashes if called with a CSN that has a dangling ref\n- Requests to remote services via navigation path without explicit `$select`, but having `$expand` query option\n- `cds.compile` correctly supports reserved namespaces like `cds.foundation`.\n- `cds.compile.to.serviceinfo` now uses the correct configuration for the base URL paths for Java services\n- `cds deploy --to sqlite` correctly localizes texts in deployed views. Before not all localized texts have been correctly resolved.\n- `cds deploy --to hana` reports missing org or space info with better message.\n\n### Removed\n\n- Redundant locale implementation\n\n## Version 5.8.4 - 2022-03-17\n\n### Fixed\n\n- `UPDATE` singleton entity does not require to provide singleton keys in a payload\n- CQN queries with operator expressions (`xpr`) in ON-conditions of unmanaged associations and compositions\n\n## Version 5.8.3 - 2022-03-01\n\n### Fixed\n\n- `queries` property for application defined destinations of remote services\n- `cds serve --watch` no longer fails if `@sap/cds-dk` is installed only globally\n- `cds serve` during development longer redirects URLs with similar path segments from different services, like `/service/one` and `/service`\n- `cds deploy --to sqlite` now ignores a `_texts.csv` file again if there is a language-specific file like `_texts_en.csv` present\n- Using logical blocks (surrounded with `(` and `)`) in ON-conditions of unmanaged associations and compositions\n- Skip \"with parameters\" clause if no order by clause or all columns in the order by clause are not strings when using parametrized views on hana\n- Limited support for binary data in OData\n  + Using of `base64` string values in `WHERE IN` on hana\n  + `base64url` values in `@odata.context` annotation\n- `cds.context` is set in GraphQL adapter\n- Using payloads with `@odata.type` annotating primitive properties no longer crashes the application. `#` in type value may be ommitted. Example:\n  ```json\n  {\n    \"ID\": 201,\n    \"title@odata.type\": \"#String\",\n    \"title\": \"Wuthering Heights\",\n    \"stock@odata.type\": \"Int32\",\n    \"stock\": 12\n  }\n  ```\n- Unicode support for i18n bundles\n\n## Version 5.8.2 - 2022-02-22\n\n### Fixed\n\n- Crash if error does not have a stack in kibana logging\n- Allow short names for bound operations in odata-server\n- Performance issue during deep operations\n- Resolving views with parameters\n- Expanding association-to-many within draft union scenario\n- Erroneous invalidation of deep `INSERT|UPDATE|DELETE` operations if root entity has managed to-one association to non-writable view\n- Handling of falsy results when sending requests to remote services\n- Resolving foreign key propagations for views with union\n\n## Version 5.8.1 - 2022-02-11\n\n### Fixed\n\n- Use single transaction for update mutations in GraphQL adapter\n- ODATA to CQN parser returned not selected keys in `@odata.context`\n- Draft: `$expand` with special draft columns in `$orderBy` for active entities\n- Reading distinct values of draft enabled entity\n- Handling of LOB data on HANA\n- Fix streaming draft by navigation\n- Empty to-many arrays are not removed from req.data for inserts\n- `$filter` query option in structured mode (OData flavors `w4` and `x4`)\n  + Using JSON-stringified objects no longer occasionally crashes an application\n  + Filtering on a structured element with `ne null` condition also selects data having some `null` properties within\n- Rest: `Content-type` header is set to `text/plain` for primitive data types in response (except for `Boolean`)\n\n## Version 5.8.0 - 2022-01-27\n\n### Added\n\n- Custom `server.js` don't have to export `cds.server` anymore -> we use that by default now.\n- In `cds.requires`: Support to replace primitive values with objects\n- Support filter functions on renamed properties from external service\n- Results of database queries use `big.js` for values of type `cds.Decimal` and `cds.Integer64` if enabled via `cds.env.features.bigjs`\n- Support lambda in `$filter` in `$expand`\n- Support for `GET` requests on service root in REST adapter (old and new)\n- Support for `HEAD` requests in REST adapter (old and new)\n- New hook `req.before('commit')`\n- Draft (Access control for bound actions): Only the user that is the owner of the draft can execute its bound actions.\n- Check that all keys are provided in REST adapter\n- Restrict access to all services via `cds.env.requires.auth.restrict_all_services = true`\n  + That is, all unrestricted services (i.e., w/o own `@requires`) are treated as having `@requires: 'authenticated-user'`\n- Threshold for automatically sending GET requests as `$batch` (beta, cf. @sap/cds@5.6.0) can be configured per remote service via `cds.env.requires.<srv>.max_get_url_length` (if not configured on service, the global config applies)\n- Limited support for binary data in OData\n  + In payloads, the binary data must be a base64 encoded string\n  + In URLs, the binary data must have the following format: `binary'<url-safe base64 encoded>'`, e.g., `$filter=ID eq binary'Q0FQIE5vZGUuanM='`\n  + The use of binary data in some advanced constructs like `$apply` and `/any()` may be limited\n  + On SQLite, the base64 encoded string is stored in the database\n  + It’s strongly discouraged to use binary data as keys. See \"Primary Keys — Best Practices\" in the documentation.\n- Support for OData annotation `@Core.ContentDisposition.Type` with `attachment` as the default value\n- Support for returning custom stream objects in custom handlers (beta):\n  + Example:\n    ```js\n    return {\n      value: instanceof Readable || null,\n      $mediaContentType = 'image/jpeg',\n      $mediaContentDispositionFilename = 'foo.bar', // > optional\n      $mediaContentDispositionType = 'inline' // > optional\n    }\n    ```\n\n### Changed\n\n- `cds deploy --to hana` now uses `cf curl` instead of `cf` command natively\n- Event Mesh: In multitenancy mode, messaging artifacts are also deployed for provider accounts (unless the service option `deployForProvider` is set to `false`)\n- Status code in case of multiple errors (rules apply in order):\n  + If all errors have the same status code, that status code is used\n  + If there is at least one 5xx status code, the resulting status code is 500\n  + If there is at least one 4xx status code, the resulting status code is 400\n  + If none of the rules apply, the resulting status code is 500\n- Ignore the `If-Match` HTTP request header for `UPDATE`/`DELETE` requests whose target entities are not annotated with the `@odata.etag` annotation.\n- I18n template strings now are replaced in EDMX documents such that they can occur multiple times.  For example, the `{i18n>key1} - {i18n>key2}` template results in `value1 - value2`, while previously only the first string was replaced, leading to `value1 - {i18n>key2}`.  This is helpful for the [`Template` strings of `UI.ConnectedFields`](https://github.com/SAP/odata-vocabularies/blob/ac9fe832df9b8c8d35517c637dba7c0ac2753b0f/vocabularies/UI.xml#L168).\n\n### Fixed\n\n- At Node.js runtime, the `development` configuration profile is no longer active if `CDS_ENV` is set to `production` and `NODE_ENV` is undefined\n- Enterprise Messaging: The user is now privileged for AMQP\n- `cds.spawn` also works with synchronous functions\n- Foreign keys in parent are set to `null` when deleting composition of one\n- `cds version` now always prints the version of `@sap/cds-dk`, especially if `cds version` was called from within an npm script, i.e. not from `cds-dk`'s CLI.\n- Better error message in case destination of Remote Service isn’t found\n- Differentiate between draft already exists and entity locked\n- OData adapter: roll back transaction before rethrowing standard error in case of atomicity group\n- Results of actions/functions do not ignore custom data when using `$expand` query option\n- `req.data` is available in custom error handler in case of deserialization error thrown by legacy OData server\n- Joining entities with renamed foreign keys (limited to single-level projections)\n- Requests with draft and `$expand=*` caused problems in some cases\n- `cds serve` during development longer redirects URLs with similar path segments like `/browse/123/browse/` to e.g. `/browse/`\n- Post-processing for renamed columns in expand\n- Deploy to SAP HANA: passing of options to `hdi-deploy` via `HDI_DEPLOY_OPTIONS` now possible\n- Keys as path segments in beta OData to CQN parser\n- OData V2 Remote Service (`\"kind\": \"odata-v2\"`):\n  + Request data properties of types `cds.Date`, `cds.DateTime`, and `cds.Timestamp` are converted accordingly to OData V2 specification\n  + Response data properties of types `cds.Decimal`, `cds.DecimalFloat` (deprecated) and `cds.Integer64` are handled properly when using `Accept` header with `IEEE754Compatible=true/false` and `ExponentialDecimals=true/false` format parameters\n\n## Version 5.7.6 - 2022-02-23\n\n### Fixed\n\n- `draftActivate` action does not return children if not requested\n\n## Version 5.7.5 - 2022-01-14\n\n### Fixed\n\n- Instance-based restriction for activation of draft-enabled entities using `or` in restriction\n- Messaging: Duplicate handler execution if application service registered events twice\n- Post of a deeply nested sub-entity with structured parent keys\n- Negating lambda expressions in OData using the `not` operator\n- Event Mesh: Redelivery count when using AMQP\n- OData requests using lambda expressions on localized data\n- `cds.db.exists` wrongly generated a `SELECT * FROM ...` for OData flavor x4\n- Return localized texts on draft activate\n- Unicode characters in unquoted search terms in beta OData to CQN parser\n\n## Version 5.7.4 - 2021-12-22\n\n### Fixed\n\n- Complex `@restrict.where: 'exists [...] or (... or ...) or ...'` in draft union scenario no longer crashes the application\n- Sanitization of null values for `cds.RemoteService`\n- Handling of boolean values in draft union scenario with `$expand` query option\n- `_4odata` flag in CQN stays non-enumerable when forwarding to another application service\n- Handling of type references on properties of associations in `cds.minify`\n\n## Version 5.7.3 - 2021-12-16\n\n### Fixed\n\n- Message Queuing now accepts `amqp` options\n- OData requests using lambda expressions with `contains` function\n- Result of OData query option `$count=true` when using `$apply`\n- `$filter` with navigation to-one equals value crashes\n- `$skiptoken` query option allows using arbitrary symbols except of `&` with beta OData URL to CQN parser (`cds.env.features.odata_new_parser`). In this non-integer value case, the value won’t be parsed into CQN.\n- Function names in `$filter` can now be case insensitive (as per OData 4.01)\n- `$count` in `$expand` caused server to crash\n\n## Version 5.7.2 - 2021-12-09\n\n### Fixed\n\n- Instance-based restriction for activation of draft enabled entities\n- `.columns('*')` on projections of remote services using renamed properties\n- GraphQL filters on nested fields are now applied correctly\n- Performance degradation during the processing of `where exists`\n- Read drafts via navigation with complex filter expression\n\n## Version 5.7.1 - 2021-12-06\n\n### Fixed\n\n- Draft (OData flavors `w4`, `x4`, and `v4` with structs): Flags `HasActiveEntity`, `HasDraftEntity`, and `IsActiveEntity` are now included in the HTTP response for GET requests.\n- Instance-based restriction on entities using localized fields in draft\n- Results of actions/functions do not ignore nested data if query options are present\n\n## Version 5.7.0 - 2021-12-03\n\n### Added\n\n- Deferred emitting via persistent outbox, enabled through service `outbox` of kind `persistent-outbox`\n- Support for compiler-generated referential constraints (beta)\n  + Activate via `cds.env.features.assert_integrity: '<preset>'`\n  + Available presets:\n    + `off`: no database constraints and no runtime checks\n    + `app`: runtime checks by default\n    + `db`: database constraints by default\n  + \"by default\": if not excluded, the runtime check or database constraint applies\n  + \"opt-in\": if included, the runtime check or database constraint applies\n  + Behavior can be overridden via `@assert.integrity: <true/false/'RT'/'DB'>` on property, entity, or service level (lowest applies)\n- Allow `--with-mocks` in production via `cds.env.features.with_mocks = true`\n- Set media type from content-type header while inbound streaming\n- Support for navigations with `$count` in `$filter`, for example `GET Entity?$filter=toMany/$count gt 0`\n- Draft: Generate UUIDs for request payloads to which extra data items are added (without the UUID keys) in a custom application handler.\n- Generate GraphQL schema via `cds compile -2 gql` (alpha)\n- Log requests to remote services if the respective log level is set to `debug`\n- Beta OData URL to CQN parser (`cds.env.features.odata_new_parser`):\n  + Support for `$skiptoken` query option\n  + Limited support for `$apply` query option\n    + Supported are the following transformations and their combinations: `aggregate`, `groupby`, `topcount`, `bottomcount`, `filter`, `search`\n    + Not supported:\n      + Transformations `topsum`, `bottomsum`, `toppercent`, `bottompercent`, `expand`, `concat`, `compute`, `identity`\n      + `rollup` and `$all` in `groupby` transformation\n      + Filter function `isdefined`\n      + Custom aggregation methods, arithmetic operators (`add`, `sub`, `mul`, and so on), and keyword `from` in `aggregate` transformation\n      + OData vocabulary for Data Aggregation, `@Aggregation.default` annotation\n    + Out of scope:\n      + Draft handling\n- Out-of-the-box audit logging for draft enabled entities\n- Support for `@sap/instance-manager`'s hybrid mode\n  + Enable via `cds.env.features.hybrid_instance_manager`\n  + Respective version of `@sap/instance-manager` required\n- `cds.minify()` (alpha) as static method\n- Annotation `@open` for actions in new Rest Adapter\n- Audit logging (`cds.env.features.audit_personal_data`) supports annotation `@PersonalData.EntitySemantics: 'Other'` and allows an arbitrary composition of entities with respect to `@PersonalData.EntitySemantics` annotations\n\n### Changed\n\n- `if-match` and `if-none-match` headers are  ignored for entities without etags\n- Improve response time of `SELECT` queries that check referential integrity by adding an upper bound `LIMIT 1`\n- Leaner implementation for `sap-statistics`\n- Leading and trailing whitespaces are allowed for `$search` query parameter\n- Insert / Update of Composition of one with empty object is not allowed for non UUID keys\n- Search behavior of whitespaces changed as follows:\n  + Searches for plain whitespace, for example, `\"$search= \"` matches the complete data set.\n  + Searches for whitespace surrounded by double-quotes, for example, `$search=\" \"` matches all entries containing whitespaces.\n- In single-tenant mode, the default SQLite database is used, regardless of `context.tenant`\n- `cds build` for Node.js projects now copies `package-lock.json` files into the staging folder (usually `gen/srv`). This allows the execution of `npm ci` there.\n- Relaxed UUIDs in beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n- Authentication strategies `dummy` and `mock` no longer require `passport`\n- In production, debug logs of `cds.DatabaseService` and `cds.RemoteService` have sanitized values\n  + Deactivate via `cds.env.log.sanitize_values = false`\n\n### Fixed\n\n- Path resolution for references in sub-selects\n- Where exists without infix filter, e.g., `@restrict.where: 'exists author'`\n- `@restrict.where: 'exists [...]'` in draft union scenario\n- Select query with path exists predicates, for example, `WHERE EXISTS books[year = 2000].pages[wordcount > 1000]`\n- Proper registration of audit log event handlers\n- Draft: Generate foreign keys for request payloads to which extra data items are added in a custom application handler.\n- `cds build` correctly merges `hdbmigrationtable` files that have multiple new migration versions defined.\n- `cds.test` converts response data of failed requests to JSON to prevent lost error details\n- Instance-based restriction for draft enabled entities\n- Delete requests for localized with compositions\n- Ignore input for static and calculated fields during draft activate\n- Clear extension map entry on error during CSN fetching\n- Do not ignore errors during diff calculation\n- Requests to mocked remote service when using custom service name with `.service` property\n- Rollback on already backrolled or committed transactions are ignored\n- Rollback handling in spawned background job\n- `cds.spawn()` throws error if passed option is an instance of `cds.EventContext`\n- Delete `timestamp` from options passed to `cds.spawn()` (transactions create their own timestamp)\n- Type error during programmatic action/function call if no params defined\n- Fully qualified bound actions/ functions in beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n- Draft handling: `GET` requests with navigation via `SiblingEntity` and expand to-one\n- No audit log if sensitive data not selected\n- Kibana formatter: do not log authorization header value\n- Audit logging (`cds.env.features.audit_personal_data`) no longer crashes the application\n  + when using the same entity as a composition child in different parent entities\n  + when accessing a not existing entity\n\n### Removed\n\n- Deprecated feature flags `cds.env.runtime.skipWithParameters` and `cds.env.features.skip_with_parameters`. Use `cds.env.features.with_parameters` instead.\n\n## Version 5.6.4 - 2021-11-23\n\n### Fixed\n\n- Preserve log level in Kibana formatter\n- RFC 3986 compliant segment recognition in beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n- Support for `$skiptoken` OData query option when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n- OData requests with `$skip` and without `$top` query option to services with defined default limit (`cds.query.limit.default`)\n- Creating entities with binary keys. Currently, the binary keys may be provided only as Node.js `Buffer` instances using a custom handler.\n- Requests with a payload containing nested arrayed elements no longer crash the application\n\n## Version 5.6.3 - 2021-11-15\n\n### Fixed\n\n- `cds run` does not fail if `cds.requires.multitenancy` is explicitly set to `false`\n- Calculation of `DraftIsCreatedByMe` or `DraftIsProcessedByMe` when expanding or navigating to `DraftAdministrativeData`\n- Nested `any` in `$filter` query option\n- Crash on draft activate after draft edit for not existing composition of one if no explicit DB service is defined\n- Typescript definition of `srv.delete` no longer leads to a duplication error\n\n## Version 5.6.2 - 2021-11-08\n\n### Fixed\n\n- Handle arrayed elements using templating mechanism\n- OData requests to `$count` endpoint of ETag enabled entity\n- `cds.test` does no longer crash if executed in `cds repl` on a remote service call\n- Crash on draft activate after draft edit for not existing composition of one\n- Ensure request correlation (with default server)\n- `<entity>.texts` points to real text entity\n- Draft union with expand to to-one and to-many\n- No columns in draft lock statement (i.e., use `SELECT 1`)\n\n## Version 5.6.1 - 2021-11-02\n\n### Fixed\n\n- UAA credentials lookup\n- Revert return type validation for `cds.String` for compatibility with older `@sap/cds-mtx` versions\n- Messaging: Ill-defined incoming AMQP messages will not crash the app\n- `cds compile -l` does no longer crash if called without `--to` option\n\n## Version 5.6.0 - 2021-10-29\n\n### Added\n\n- New REST protocol adapter (beta)\n  + Makes use of the beta OData URL to CQN parser. Hence, almost all OData requests are supported (see limitations below).\n  + Activate via `cds.env.features.rest_new_adapter = true`\n  + Out of scope (compared to OData protocol adapter):\n    + OData query option `$apply`\n    + Batch requests (with or without atomicity groups)\n    + Draft handling\n- New GraphQL protocol adapter (alpha)\n  + Serves single endpoint for all services based on `served` event at `/graphql` (subject to change).\n  + Activate via `cds.env.features.graphql = true`\n  + Required additional dependencies: `@graphql-tools/schema`, `express-graphql`, and `graphql`\n  + Not meant for productive use! For example, authentication and authorization are out of scope.\n- Support of the following features when using beta OData URL to CQN parser (`cds.env.features.odata_new_parser`):\n  + REST-style URLs (example: `GET /Foo/1`)\n  + `$expand=*` query option on different nested expand levels (`$levels` isn’t yet supported)\n  + Draft handling\n  + Structured keys\n  + Streaming\n  + Navigation to primitive properties without `$value` query option\n- Optimized Search: Support `$filter` query option in combination with optimize `$search` and localized data (when the environment variable `cds.env.features.optimized_search` is set to `true`)\n- `GET` requests support static values in ON-conditions of composition parents when using unmanaged backlinks\n- `destinationOptions` can be configured for Remote Services\n  + Example:\n    ```json\n      {\"cds\":{\"requires\":{\n        \"S4\": {\n          \"destinationOptions\": {\n            \"selectionStrategy\": \"subscriberFirst\",\n            ...\n          }\n        }\n      }}}\n    ```\n- `forwardAuthToken` can be configured for Remote Services\n  + Example:\n    ```json\n      {\"cds\":{\"requires\":{\n        \"credentials\": {\n          \"url\": \"...\",\n          \"forwardAuthToken\": true\n          }\n        }\n      }}}\n    ```\n- File to store private project settings `.cdsrc-private.json` (shouldn’t be checked in source code management)\n- Read additional configuration from JSON files or directory structures using `CDS_CONFIG` env variable\n- Missing typescript definitions for services' `.send` shortcuts `get`, `put`, `post`, `patch`, and `delete`\n- Build VCAP_SERVICES env variable dynamically for compatibility (`cds.env.features.emulate_vcap_services`)\n- GET requests to Remote OData Service are automatically sent as `$batch` if the generated URL is too long\n  + Can be configured via `cds.env.remote.max_get_url_length` (beta, default: 1028).\n- Provide ETag in response headers in case of `prefer: return=minimal`\n- Kibana formatter: log the user's id via `cds.env.log.user = true` (beta)\n  + Consider the data privacy implications!\n- Experimental support for uiflex running locally on sqlite by setting `cds.requires.extensibility.kind = uiflex`\n- Minified `cds.model` (deactivate via `cds.env.features.skip_unused = false`)\n\n### Changed\n\n- Query API: Specified keys are now part of the target path, e.g. `SELECT.from('Books', 1)` will move the key condition into `SELECT.from.ref`.\n  + Deactivate during two-month grace period via compat feature flag `cds.env.features.keys_into_where = true`\n- Removed duplicate integrity checks\n- Optimized search: Optimize queries for non-localized elements\n- OData to CQN parsing changed to enable remote service consumption. As a side effect, application code in `srv.on('READ', handler)` custom handlers relaying on CQN might need to be adapted. The following has changed:\n  - Previously, columns in `req.query.SELECT.columns` were always defined. Now, in case there is no `$select` and `$expand` query options in the OData query, `req.query.SELECT.columns` is `undefined`.\n  - Previously, if the `$expand` query option was specified in the OData query, all elements of the expanded navigation property were listed explicitly in the CQN query. Now, an `*` (asterisk) is listed instead.\n- Non-specified columns are resolved at database layer\n- `cds deploy` no longer enforces the presence of SAP CommonCryptoLib (checked with env variable `SECUDIR`) on Windows since it uses now the built-in security libraries\n- Target keys are not included in the body when sending `PATCH` requests to external services\n\n### Fixed\n\n- Audit logging of non-string values\n- Query API compilation error when keys start with `{`\n- Handling of wrong Edm.DateTimeOffset values\n- Using UUIDs in search with beta OData URL to CQN parser (`cds.env.features.odata_new_parser`)\n- Runtime exception for READ requests with deeply nested navigation and structured keys, for example:\n`GET foo/Bar/b708ad6c-2dd4-40d5-91c0-2e3eacf306d2/Info/sales(a='1010',b='10',c='00')/functions(functionName='error')`\n- The check for the minimum Node.js version now properly enforces version 12.18, i.e. aborts server startup.\n- `cds.test` fails with a clearer error message if the server wasn't started at all\n- Audit logging for modification of personal or sensitive data when using same entity as a composition child in different parent entities\n- Deleting an entity defined with managed composition of one, whereas a dependent entity is defined as having an independent managed association to its composition parent no longer crashes the application\n- Audit logging for entities having arrayed elements\n- Filtering for `cds.Date` on Remote OData V2 services\n- Crash when `rollup` function was used in groupBy in OData requests\n- Or for $filter with IsActiveEntity=true for access to active entities\n- Reading draft-enabled entity with `$expand` targeting non-draft associations\n- Delete with sub-select\n- Runtime exception when streaming property annotated with `@Core.MediaType: 'application/json'`\n- Reading streams via navigation when entity containing large data is a part of a draft-enabled composition tree\n- Read draft entity with nested exists restriction\n- Activate draft of entity having `to-one` and `to-many` compositions\n- Caching issue that causes the OData `omit-values` preference in `Prefer` HTTP headers to misbehaves\n- Deletion of draft instances if multiple draft enabled entities are used within one service\n- Queries with `contains` filter targeting a remote OData v2 service\n- Schema evolution support for nested CDS entities in `cds build`\n- I18n texts with quotes and other special characters get escaped correctly if they appear in XML and JSON documents\n- Execution of plain SQL statements on SQLite\n- `Content-Disposition` header is now URL encoded\n\n### Removed\n\n- Usage of `@sap/xsenv` is superseded with `cds.env` in node.js cds-runtime\n- `@odata.on.insert/update` and `#user/now` are deprecated and will be removed in the next major version. Use `@cds.on.insert/update` and `$user/now` instead.\n\n## Version 5.5.5 - 2021-10-20\n\n### Fixed\n\n- Action parameters set to null\n- Restrictions with \"where exists\" clause and filter on ambiguous fields\n- Nulled user attribute in restrictions with \"where exists\" clause\n- Wait for all queries to settle during deep operation\n\n## Version 5.5.4 - 2021-10-12\n\n### Fixed\n\n- Backwards compatibility for `cds.tx({ user: new User ({ tenant, locale }) })`\n- Transaction API fix: `cds.tx ({ tenant }, tx => { ... })` instead of `cds.tx (tx => { ... }, { tenant })`\n- Writable and reliable `query._target`\n- `req.target` in REST with navigations in URL\n\n## Version 5.5.3 - 2021-10-06\n\n### Fixed\n\n- Resolving of views for view definitions using aliases\n- `cds.test` in `cds repl` no longer yields an error with the `beforeEach` function not found\n- Aliasing in case of draft union when expanding more than one `to-one` association\n- Resolving of views if intermediate views are defined in database namespace\n\n## Version 5.5.2 - 2021-09-29\n\n### Fixed\n\n- `$expand` requests with virtual fields with the same name in root and child\n- Requests expanding `DraftAdministrativeData` when compound keys are used\n- `SELECT.columns` with an empty array as argument\n- Queries with complex lambda filters\n\n## Version 5.5.1 - 2021-09-24\n\n### Added\n\n- Support for casting SQL function input\n\n### Fixed\n\n- Typo in `DELETE` method of `cds.test`\n- View resolving for intermediate queries\n- Result post-processing for renamed expands\n- Don't use placeholder values for `null`\n\n## Version 5.5.0 - 2021-09-23\n\n### Added\n\n- Support for minified models\n- Messaging: Support for string payloads\n- Messaging: Webhooks use 'application/json' as the default content type\n- Messaging: If senders don't use `data` as a property of the payload, then the whole payload is interpreted as `data`\n- Messaging: Support for `$namespace` placeholer in queue name\n- Support for deletable singletons with `@odata.singleton.nullable`\n- Remote requests set the `accept-language` header according to the original request or the user's locale\n- Support for choosing data source names different from names of respective service definitions.\n  + Example:\n    ```json\n      {\"cds\":{\"requires\":{\n        \"S4\": {\n          \"model\": \"...\", \"service\": \"API_BUSINESS_PARTNER\"\n        }\n      }}}\n    ```\n- When calling `cds.tx()` to create new transactions, this now automatically inherits the current event context from `cds.context`. In case that creates issues set `cds.env.features.cds_tx_inheritance = false` to restore the former behaviour. You can still overwrite individual context settings, for example:\n    ```js\n    const tx = cds.tx() // inherits tenant and user\n    const tx = cds.tx({ // inherits tenant\n      user: new cds.User.Privileged\n    })\n    ```\n- Method `cds.tx()` now allows to pass a function which will be executed within a new managed transaction, with `tx.commit/rollback()` handled automatically. For example:\n    ```js\n    await cds.tx (tx => {\n      await tx.insert (...)\n      await tx.read (...)\n    })\n    ```\n    is equivalent to:\n    ```js\n    const tx = cds.tx ()\n    try {\n      await tx.insert (...)\n      await tx.read (...)\n      await tx.commit()\n    } catch {\n      await tx.rollback()\n    }\n    ```\n- Method `cds.tx({user})` now allows specifying a user as a plain string, for example:\n    ```js\n    cds.tx ({ user:'me' })\n    ```\n    is equivalent to:\n    ```js\n    cds.tx ({ user: new cds.User('me') })\n    ```\n- Newly introduced method `cds.spawn()` allows correctly and conveniently spawning background jobs from within event handlers. Thereby ensuring a detached fully-managed ACID transaction set as `cds.context` for each execution of the background job, inheriting the current event context from the outer `cds.context` by default. Usage options:\n    ```js\n    cds.spawn (async ()=>{\n      await INSERT.into ('Ticker') ...\n    })\n    ```\n    ```js\n    cds.spawn (async ()=>{\n      await INSERT.into ('Ticker') ...\n    },{ after: 111 /* ms */ })\n    ```\n    ```js\n    let n=0, handle = cds.spawn (async ()=>{\n      await INSERT.into ('Ticker') ...\n      if (++n>9) clearTimeout (handle)\n    },{ every: 111 /* ms */ })\n    ```\n    ```js\n    cds.spawn (async ()=>{\n      await INSERT.into ('Ticker') ...\n    },{ // inherits tenant\n      every: 111 /* ms */,\n      user: new cds.User.Privileged\n    })\n    ```\n- Default server is CORS-enabled for all origins if not in production\n- Default lock acquire timeout for `SELECT FOR UPDATE` via `cds.env.sql.lock_acquire_timeout`\n- Optimized search: Support `groupby` for localized data (when the environment variable `cds.env.features.optimized_search` is set to `true` on SAP HANA)\n- Out-of-the-box audit logging for deep structures without own association to data subject\n  + limited to one data subject per role per composition tree\n- Support for reading streams via `GET /<Entity>(<ID>)/$value`\n- Draft choreography: support of navigation with `SiblingEntity`\n- Support for where exists with infix filters in `@restrict`\n- Support annotation `@Capabilities.ExpandRestrictions.NonExpandableProperties`\n- `@Core.ContentID` added to OData error responses if `content-id` header is specified\n- New OData URL to CQN parser (`cds.env.features.odata_new_parser`):\n  + support of navigation to primitive properties using `$value`\n  + support of `not` operator with string functions (`contains`, `startswith`, `endswith`)\n- Support for default values for virtual fields\n- Payload for non-writable navigation targets removed from `req.data`\n- `cds build` supports i18n message bundles for Java and Nodejs apps and a default CSN format option for Java\n- View resolving considers renaming of foreign keys and `excluding` names when `columns` are explicitly provided in CQN\n- Resilient acquire for SAP HANA via `cds.env.requires.db.connection_attempts = <number>` (alpha; hard max of 3 enforced)\n\n### Changed\n\n- Messaging: Webhooks will always generate tokens\n- Messaging: In multitenancy mode, messaging artifacts are only deployed to subscribers (unless the service option `deployForProvider` is set to `true`)\n- Messaging: Incoming messages without corresponding handlers aren’t acknowledged\n- If a service executes a query targeting a projection on one of its entities, the query is resolved along with projections to an entity known by the executing service. The result is post-processed to reflect the expected result of the incoming query. The reason is that no handlers of the executing service were executed as they didn’t know the query target.\n  + Deactivate during two-month grace period via compat feature flag `cds.env.features.resolve_views = false`\n- Use `@sap/cds-compiler`'s `smartId` function to determine whether a reference needs to be quoted.\n  + Allows the use of non-word characters in column names, for example `entity Foo { ![bar/bz]: String; }`.\n  + Support for columns with spaces with feature flag `cds.env.features.spaced_columns`.\n  + Note: Restrictions in other layers (example: OData's simple identifier schema) still apply.\n  + Note: Expressions in references (example: `ref: ['foo as bar']`) currently works but were never intended to and will be removed in future versions.\n- Clear draft data based on their draft UUID instead of via deep delete\n- Support `@sap/cds-compiler`'s changes for DB constraints: managed and unmanaged compositions of one behave like associations. This means that only `$self`-managed composition of one gets `DELETE CASCADE` constraint. Since all other \"2one\" cases require extra `DELETE` handled by the runtime, that constraint is ignored.\n- Value with regards to date and time functions aren’t converted to strings in the OData protocol adapter\n- No placeholders for `LIMIT` to enable statement caching during pagination\n- Arrayed elements stringified in DB layer\n- Return values of handlers will have precedence over database reads\n- Error of a failed request to a Remote Service contains now the response payload if available\n- Configuring ad-hoc destinations via `credentials.url` is now allowed in `NODE_ENV=production`\n- New OData URL to CQN parser (`cds.env.features.odata_new_parser`):\n  + CQN for `$select` and `$expand` columns\n\n### Fixed\n\n- `SELECT.from (Foo, f => f.bar('*').where(...))` resulted in a runtime exception\n- Preserved locales are now considered when accessing database tables\n- Integrity checks for compositions by draft enabled entities\n- Constant columns must not be quoted anymore, i.e. `{ val: \"'myValue'\", as: \"myColumn\"}` must be changed to `{ val: \"myValue\", as: \"myColumn\" }`\n- Accidental `tx.run()` after prior `tx.commit/rollback()` lead to acquired connections not returned to pool. This is detected and disallowed now. In case that creates issues set `cds.env.features.cds_tx_protection = false` to restore the former behaviour.\n- Structured keys are correctly resolved with pegjs-based parser\n- Template processing for columns with spaces in their name\n- Deep delete with recursions in composition tree (with limited recursion depth)\n- Draft edit with recursions in composition tree (with limited recursion depth)\n- `emit` for messaging services now also works in custom express middlewares\n- `req.query` is a CQN object (previously array with one entry) in case of batch insert in REST adapter\n- HasActiveEntity flag with expand\n- `compile.to.serviceinfo` now honors default Java endpoint paths if none are configured in `application.yaml`\n- `PATCH` request to a non-existent entity annotated with the `@PersonalData` annotation\n- `req.diff()` while deep updating via composition\n- Convert data type of elements in sub-entities (to one association) when forwarding responses to external services\n- Update children of a composition of many (`INSERT > DELETE`) with `PATCH/PUT` having at the same time another association to one composition child respects foreign key constraints.\n- Handling of virtual fields used in the `$filter` query option of navigation requests\n- Copy texts in default language from active to draft table on draft edit\n- Optimized search: Escape double quotation marks and backslashes (when the environment variable `cds.env.features.optimized_search` is set to `true`)\n- Update for multiple rows\n- Expand during draft union\n- Validate content type for `$batch` requests\n- Support for `SELECT` statements in `where` clauses when resolving views\n- `INSERT.rows()` doesn’t silently fill in `INSERT.entries` anymore &rarr; use `INSERT.entries()` to do so instead.\n- `UPDATE(Foo).with({foo:{'=':'bar'})` erroneously produced:\n  ```js\n  {UPDATE:{..., with:{foo:{ref:['bar']}}}} //> wrong\n  ```\n  instead of:\n  ```js\n  {UPDATE:{..., data:{foo:'bar'}}} // correct\n  ```\n  &rarr; to produce the ref, use one of:\n  ```js\n  UPDATE(Foo).with ({foo:{ref:['bar']}})\n  UPDATE(Foo).with `foo=bar`\n  ```\n- `UPDATE.with` property stays undefined until actually filled with data\n- Differentiate between require and initialize error of audit logging client\n- The built-in model tree-shaking erroneously deleted explicitly modeled `.texts` entities\n- Actions and functions with `Integer` response type in REST services\n- Occasional drop of conditions in `WHERE` depending on the value when using structured types\n- `PATCH` fixed for singletons and when having a keyless, for example, managed to-one navigation path\n- Internal server error when forwarding a query to an external service whose target entity doesn’t contain keys\n- Nested where exists in `@restrict` via navigation (CRUD-only; beta)\n- Expand to one in draft union\n- Patch to auto exposed entity through composition of aspect from SAP Fiori Elements\n- Diff for delete in draft\n- Streaming requests on views with joins no longer crash the application\n\n### Removed\n\n- Direct usage of body-parser\n- Queries constructed from `cds.ql` do not have the _internal_ property `cqn` anymore\n- Inofficial variant `SELECT({'expand(foo)':['a','b']})` is not supported anymore\n  &rarr; use one of these official APIs for expands instead:\n  ```js\n  SELECT(x => { x.a, x.foo (f =>{ f.b, f.c }) })\n  SELECT(['a',{ref:['foo'], expand:['b','c']}])\n  ```\n- Inofficial variant `SELECT.orderBy('foo','desc')` is not supported anymore\n  &rarr; use one of these official APIs instead:\n  ```js\n  SELECT.from(Foo).orderBy({foo:'desc'})\n  SELECT.from(Foo).orderBy('foo desc')\n  ```\n- Inofficial variant `SELECT.orderBy('foo, bar desc')` is not supported anymore\n  &rarr; use one of these official APIs instead:\n  ```js\n  SELECT.from(Foo).orderBy({foo:1,bar:-1})\n  SELECT.from(Foo).orderBy('foo','bar desc')\n  SELECT.from(Foo).orderBy `foo, bar desc`\n  ```\n- Inofficial variant `SELECT.where({ or: [{ foo: 'bar' }, { foo: 'baz' }] })` is not supported anymore\n  &rarr; use one of these official APIs instead:\n  ```js\n  SELECT.from(Foo).where({ foo: 'bar', or: { foo: 'baz' } })\n  SELECT.from(Foo).where `foo='bar' or foo='baz'`\n  ```\n- Usage of SQL window functions during expand on SAP HANA\n- Hidden symbol for where clause elements originating from `@restrict`\n- Error masking gate keeper for `cds.env.log.levels.cli`\n\n## Version 5.4.6 - 2021-09-18\n\n### Added\n\n- Support for nested where exists in `@restrict` (CRUD-only; beta)\n\n### Fixed\n\n- Inverse transition mapping calculation\n- Skip empty structures during deep update\n\n## Version 5.4.5 - 2021-09-15\n\n### Fixed\n\n- Processing of null elements during deep update\n- Performance issue during template processing\n\n## Version 5.4.4 - 2021-09-09\n\n### Fixed\n\n- For drafts, the query parameter `$top=0` in combination with `$count=true` now returns the correct `@odata.count` value\n- Deep delete with composition of one with structured key in target\n- Implicit delete of child with structured key\n- Update of deeply nested entity with structured key\n- Order by join column during draft union\n- Skip calculated properties while following projections\n- The `with parameters` clause is now correctly handled in sub-selects if the locale parameter exceeds three characters\n- Statement already finalized error on SQLite\n\n## Version 5.4.3 - 2021-08-16\n\n### Fixed\n\n- Skip calculated properties while following projections\n- Unrestricted subclauses in `@restrict.where`\n- Safe access to `cds.env.log.levels.cli`\n\n## Version 5.4.2 - 2021-08-11\n\n### Fixed\n\n- Where condition in draft union in case of multiple keys\n- Handling of nulled properties in Service Consumption\n- Requests to Remote Services returning `text/html` result in an error\n- View resolving is more robust for path expressions\n- Skip foreign properties (e.g., mixins via associations) while following projections\n- UPDATE entity with composition to aspect with structure type property\n\n## Version 5.4.1 - 2021-08-03\n\n### Fixed\n\n- Erroneously added Brazilian Portuguese (`pt_BR`) removed from the list of normalized locales\n\n## Version 5.4.0 - 2021-08-02\n\n### Added\n\n- Messaging: Support for format `cloudevents`\n- Messaging: Support for `@topic`\n- Messaging: Support for `subscribePrefix` and `publishPrefix`\n- Support for `ReadByKeyRestrictions` annotations\n- Support for OData `omit-values` preference in `Prefer` HTTP header\n- Object variant of service methods\n- Brazilian Portuguese (`pt_BR`) is now on the list of [normalized locales](https://cap.cloud.sap/docs/guides/i18n#normalized-locales)\n- Support for actions and functions on Remote Service\n\n### Changed\n\n- In multitenant `enterprise-messaging`: If a tenant subscribes, the messaging artifact generation is awaited. In your provisioning service configuration, make sure to set `onSubscriptionAsync` to `true` and `callbackTimeoutMillis` to more than 10 minutes.\n- In `enterprise-messaging`: Messages are sent via HTTP\n- Computed values are preserved during draft activate\n- Messaging: No more topic manipulation per default\n- For consistency reasons `cds build` now determines the default model path using cds resolve\n- Match XSUAA's user attribute value `$UNRESTRICTED` case insensitive\n- CDS build now uses new CDS logging facade to allow for consistent logging behaviour across the different CDS modules\n\n### Fixed\n\n- Disable persistency check for requests without a target\n- Expand at draft edit\n- Remove restriction for `$search` queries not accepting brackets\n- Select query with infix filter in custom handler\n- Order by on same named properties of different associations in draft\n- Allow to call bound actions and functions of read-only entities\n- Writing draft-enabled entities with composition of aspects (a.k.a. managed compositions)\n- Expand to autoexposed association/composition in draft case\n- `cds.parse.xpr()` always returns an array\n- Allow boolean options in `cds build` CLI\n- Integrity check in case of bulk query execution\n\n### Removed\n\n- Messaging: The topic prefix `topic:` is deprecated\n- Messaging: No default headers for format not equal to `cloudevents`\n\n## Version 5.3.3 - 2021-07-28\n\n### Fixed\n\n- Validation of arrayed parameters of actions and functions\n- Skip not-to-be-audited entities in composition tree\n- In draft, `<entity>.texts` can be used without explicit exposure\n\n## Version 5.3.2 - 2021-07-16\n\n### Added\n\n- `enterprise-messaging`: Experimental support to send messages via HTTP (`emitPerHTTP: true`)\n\n### Changed\n\n- Aligned Node.js and Java auditlog APIs\n- `enterprise-messaging`: No topic manipulation for outbound events beginning with a different namespace\n\n### Fixed\n\n- Call `init()` and register custom handlers for every new `cds.ApplicationService` created in extensibility scenarios\n- Structured keys for deep operations in OData flavor `x4`\n- Wrong user in messaging requests coming from webhooks\n- Improvements in log formatter for Kibana:\n  + Remove redundant metadata information\n  + Add information from `req.headers`\n  + Treat error-like objects like errors\n  + Custom fields (alpha)\n- Minor fix for *optimized search* on SAP HANA\n\n## Version 5.3.1 - 2021-07-12\n\n### Changed\n\n- Task `@sap/cds-runtime/lib/messaging/deploy.js` moved to `@sap/cds/tasks/enterprise-messaging-deploy.js` after module merge\n- Parse OData lambda expression on collection of scalars with equals operator (i.e., `.../any(d:d = \"<val>\")`) to CQN with `contains` (pegjs-based parser only)\n\n### Fixed\n\n- Improved error message in case custom `server.js` doesn't export a function\n- Kibana formatter: `stacktrace` as array of strings\n- Bootstrapping for feature toggles\n- Deep operations for certain composition constellations\n- Aliasing on SQL layer for OData `ne` operator\n- Fixed scope issues in manual deployment for messaging\n- Projections with infix filters and cardinality changes are safely ignored during `CREATE`/`UPDATE`\n- Resolving of views if underlying projection has explicit aliases\n\n## Version 5.3.0 - 2021-07-07\n\n### Added\n\n- `cds serve` and `cds deploy` now also load `.ts` Typescript files if started with [`ts-node`](https://www.npmjs.com/package/ts-node)\n- Log formatter for Kibana (beta) via `cds.env.features.kibana_formatter`\n- First version of the `AuditLogService` (beta)\n  + Supported events: `dataAccessLog`, `dataModificationLog`, `configChangeLog`, and `securityLog`\n  + Usage: `const AuditLogService = await cds.connect.to('audit-log'); await AuditLogService.emit/send('<event>', <data>)`\n  + Out-of-the-box audit logging for modification of personal data and access to sensitive personal data via `cds.env.features.audit_personal_data`\n- Support for deep updates with compositions of one in `UPDATE(...).with(...)`\n- Support for logical events in `composite-messaging`\n- Initial support for generating OData V2 queries\n- Preserve `DraftAdministrativeData_DraftUUID` if OData v2 client (indicated by `@sap/cds-odata-v2-adapter-proxy`)\n- Use placeholder values for numbers with `cds.env.features.parameterized_numbers` (alpha)\n- Support for argument-less SQL functions (e.g., `current_date`)\n- Performance optimization: Resolve localized texts for `$search` queries at runtime (alternative to localized views resolution) to avoid the performance overhead of the SQL `coalesce` function in filter operations. To enable this *experimental feature* for SAP HANA, you can set the `cds.env.features.optimized_search` environment variable to `true`\n- Performance optimization: Optimize `$search` queries using the `CONTAINS` predicate instead of the `LIKE` predicate in the `WHERE` clause of a `SELECT` statement. To enable this *experimental feature* for SAP HANA, you can set the `cds.env.features.optimized_search` environment variable to `true`\n- OData lambda expressions in `$filter`:\n  + Basic support of structured types (`cds.env.odata.flavor = x4`) on SAP HANA\n  + Support of navigation paths on SAP HANA, for example, `GET /Books?$filter=author/books/all(d:d/stock gt 10)`\n\n### Changed\n\n- Custom build tasks are no longer restricted to `@SAP` namespace.\n- CDS build tasks of type `fiori` are no longer copying files located in the UI module folder into the deployment staging folder.\n- Leaner error messages for unsuccessful remote service calls\n- Incoming messages now contain a privileged user\n- `SELECT.where(...)` generates CQN with list of values for `in` operator\n- Always use flag `u` during input validation via `@assert.format`\n- Intermediate CQN format for lambda expressions with preceding navigation path\n- Better error messages for draft enabled entities\n\n### Fixed\n\n- Projecting data works also for projections where one field maps to multiple entries\n- `SELECT` queries without user-specified columns only modify draft columns if the entity is draft-enabled.\n- Generated `index.html` erroneously showed entries for `contained` entities from managed compositions.\n- Use OData simple identifier format for links to entity sets in generated `index.html`.\n- `cds build` logged duplicate compilation errors for the identical `.cds` file, but with different relative path names.\n- `cds serve` no longer tries to redirect Fiori URLs starting with `$` to service URLs.\n- `cds build` now supports `HANA Table data properties files` in SaaS applications. These files haven’t been copied into the sidecar folder.\n- `cds deploy --dry` generates DROP/CREATE DDL statements with an order that also H2 can handle, i.e. with dependant views dropped before basic views.\n- `cds build` now correctly handles symbolic links for nodejs projects on Windows.\n- `cds build` now correctly filters CDS source files when building SaaS applications.\n- Deploy endpoint for messaging artifacts includes the needed roles\n- Detection of mocked services and forced resolving of views\n- `POST/PATCH/PUT` requests on `Composition of many` with association as key and custom `on` conditions\n- `$expand` on entities with `.` in name\n- Filter on external service when using `ne null`\n- Primitive property access of Singletons defined without keys via URL like `/Singleton/name`\n- Expand and navigation in draft-enabled entity with composition of aspects\n- `@Core.ContentDisposition.Filename` instead of `@Core.ContentDisposition`\n- Select query with `$count` with combination with `$search`\n- Parsing of `Timestamp`, `DateTime` and `Date` values in OData request when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\n- Reset temporal session contexts\n- Caching of runtime aspects\n- Handling of foreign keys as well as an input validation when using nested associations as keys\n- Transaction handling in case of multiple changesets\n- Hana procedure call with output parameter\n- Skip foreign key propagation if target is annotated with `@cds.persistence.skip`\n- Values misidentified as operators in `$search`\n- Ensure UTC valus are written to DB\n- Etag handling in case of action with `$select`\n- Fix draft related issues in odata2cqn\n- Where clause in `@restrict` gets duplicated if `$search` query option is used\n\n## Version 5.2.0 - 2021-05-31\n\n### Fixed\n\n- Virtual fields are not filtered out before application service handlers\n- Clarification: the minimum required Node.js version is 12.18.  Versions < 12.18 might not work.\n- `cds build` supports validation of `extension-allowlist` which is replacing `entity-whitelist` or `service-whitelist` with cds-mtx 2.0. Warnings are no longer returned if neither entity-whitelist nor  service-whitelist is defined.\n- `cds compile -2 sql/edmx` erroneously wrote excessive compiler output to stderr\n- Resolve the correct `enterprise-messaging-shared` credentials from VCAP_SERVICES by default\n- `cds compile --to sql` now completes the last SQL statement with a proper semicolon\n\n## Version 5.1.5 - 2021-05-21\n\n### Added\n\n- `cds build` adds `engines.node` version to `package.json` if not present, in order to match the minimum required node version of CDS.\n- Generate an invocation context identifier (`cds.context.id`) if none can be derived\n\n### Changed\n\n- Better support for UI tools to get metadata for projects with both a Node.js and Java server\n\n### Fixed\n\n- Match locales in all upper-case (for example `ZH-CN` instead of `zh-CN`)\n- Key elements got lost in `cds.linked` when using type refs referring to other key elements\n- Tree shaking erroneously removed types `Foo` when only referred to by type refs like `bar : Foo:bar`\n- Fixed an error in transaction handling, that lead to db connections not released in rare cases\n- SQL names option gets properly propagated\n- No longer erroneously exclude entities explicitly marked with `cds.persistence:{table, skip:false}`, as in [cap/samples/suppliers](https://github.com/SAP-samples/cloud-cap-samples/blob/6b08826af51651f6b31fce8454fbadd23c634b85/suppliers/srv/mashup.cds#L46)\n\n## Version 5.1.4 - 2021-05-12\n\n### Fixed\n\n- Error when using complex type references, as in:\n```swift\nentity Foo { bar: Tic:tac.toe; }\nentity Tic { tac: Composition of { toe:String } }\n```\n\n## Version 5.1.3 - 2021-05-12\n\n### Fixed\n\n- `cds` does not check for the min. Node.js on BAS, for now\n\n## Version 5.1.2 - 2021-05-12\n\n### Fixed\n\n- `cds compile --for odata` now honors the OData version again\n- `cds compile --for odata` now honors the SQL naming mode (`sql.names`) again\n- `cds serve` does not run in an infinite bootstrap loop if `cds.server()` is called in `server.js`\n\n## Version 5.1.1 - 2021-05-07\n\n### Fixed\n\n- `cds build` is now always adding `.hdbview, .hdbtable, .hdbconstraint or .hdbindex` plugin mappings to `.hdiconfig` to avoid that deployment is failing in case such files exist in an already deployed container, but are no longer generated.\n- `cds compile --dest <dir>` no longer crashes creating the destination folder\n\n## Version 5.1.0 - 2021-05-05\n\n### Added\n\n- Custom error handler via `srv.on('error', function (err, req) { ... })` (beta)\n  + Synchronous modification of passed error only\n- `cds.log.format()` for custom log formatting\n\n### Fixed\n\n- `cds build` now correctly handles `message.properties` files used for Nodejs runtime messages if these files have been defined in an i18n content folder located at project root.\n- Nodejs custom handlers are now correctly resolved if a dedicated destination folder has been configured for the build task.\n- Now, the `.csv` file reader correctly closes open file descriptors to avoid memory leaks during `cds build`.\n\n### Changed\n\n- Clean up obsolete compiler option `snapi`.\n- `cds build` is no longer validating Nodejs custom service handlers that have been registered using service `@impl` annotation.\n\n## Version 4.6.6 - 2021-05-05\n\n### Fixed\n\n- Now, the `.csv` file reader correctly closes open file descriptors to avoid memory leaks during `cds build`.\n- Fixed i18n handling causing `cds build` to fail with error message `bundle is not iterable`.\n- Nodejs custom handlers are now correctly resolved if a dedicated destination folder has been configured for the build task.\n\n## Version 5.0.7 - 2021-04-21\n\n### Fixed\n\n- Internal test stabilizations\n\n## Version 5.0.6 - 2021-04-16\n\n### Fixed\n\n- `cds build` no longer fails with `TypeError: x.startsWith is not a function` in some situations\n\n## Version 5.0.5 - 2021-04-15\n\n### Changed\n\n- Internal errors are no longer decorated with `Please report this`.  People interpreted the text as to only include the stack trace in error reports and to omit other valuable context information.\n\n### Fixed\n\n- `cds build` now correctly creates the deployment layout for multitenant applications (sdc folder contents) that have dedicated folder paths configured for db, srv, and app modules.\n- `cds deploy --to sqlite` now ignores a `_texts.csv` file again if there is a language-specific file like `_texts_en.csv` present\n- `cds env` no longer fails to parse `.env` files with JSON values containing `=` characters\n\n## Version 5.0.4 - 2021-04-07\n\n### Fixed\n\n- `cds build` no longer fails with a `task.apply is not a function` error when used in an npm script.\n\n## Version 5.0.3 - 2021-04-06\n\n### Fixed\n\n- `cds.compile` got thoroughly cleaned up and enhanced as the single API to compile models\n- `cds.compile.to.cdl` was missing in 5.0.2\n- `cds build` no longer uses reflected CSN which caused odata and EDMX transformation to fail.\n  As a consequence language specific EDMX files were missing.\n\n### Removed\n\nThe following undocumented, internal functions have been removed.\nIn case you spotted and used them, please replace as given below.\n\n- `cds.compile.cdl` &rarr; use `cds.compile` instead\n- `cds.compile.to.parsed.csn` &rarr; use `cds.parse` instead\n- `cds.compile.to.xtended.csn` &rarr; use `cds.compile` instead\n- `cds.compile.to.inferred.csn` &rarr; use `cds.compile` instead\n- `cds.compile.to.hdi` &rarr; use `cds.compile.to.hdbtable` instead\n- `cds.compile.to.hana` &rarr; use `cds.compile.to.hdbcds` instead\n- `cds.compile.to.xsuaa` &rarr; still available in CLI thru `cds compile -2 xsuaa`\n- `cds.compile.to.serviceinfo` &rarr; still available in CLI thru `cds compile -2 serviceinfo`\n- `cds.compile.to['edmx-v2']` &rarr; still available in CLI thru `cds compile -2 edmx-v2`\n- `cds.compile.to['edmx-v4']` &rarr; still available in CLI thru `cds compile -2 edmx-v4`\n- `cds.compile.to['edmx-w4']` &rarr; still available in CLI thru `cds compile -2 edmx-w4`\n- `cds.compile.to['edmx-x4']` &rarr; still available in CLI thru `cds compile -2 edmx-x4`\n\n\n## Version 5.0.2 - 2021-03-30\n\n### Added\n\n- Ensure correlation id and set intermediate `cds.context` in default `server.js`\n\n### Fixed\n\n- `cds build` no longer aborts for CAP Java SDK based projects with `compiler version 2 not supported` message.\n\n## Version 5.0.1 - 2021-03-25\n\n### Added\n\n- `cds.load.properties` and `cds.parse.properties` to load and parse content in .properties format\n- `cds.load.csv` and `cds.parse.csv` to load and parse csv content\n- `CDL`, `CQL`, and `CXL` as new global methods for tagged template strings generating [CSN], [CQN], or [CXN] objects\n- Fluent API classes provided through `cds.ql` also support tagged template strings now in these methods: `SELECT`, `SELECT.from`, `SELECT.where`, `UPDATE`, `UPDATE.with`, `UPDATE.where`, `INSERT.into`, `DELETE.from`, `DELETE.where`\n\nExample:\n```js\nlet Authors = SELECT `ID` .from `Authors` .where `name like ${'%Brontë%'}`\nlet Books = SELECT `ID,title` .from `Books` .where `author_ID in ${Authors}`\nawait UPDATE`Books`.with`x = x-${amount}`.where`ID=${ID}`\n```\n\n### Changed\n\n- Minimum required Node.js version is now 12.  Support for Node.js 10 is dropped.\n- `req.timestamp` is a Date object now; was a UNIX epoch integer before, i.e., Date.now()\n\n### Fixed\n\n- Fixed race conditions in `cds.serve` leading to broken services\n- Fixed typos in API type definitions\n- Fixed `cds.reflect.forall` for CSN extensions\n- Fixed orphaned `_texts` proxies, causing init from csv to fail with \"no such table\" errors\n\n## Version 5.0.0 - 2021-03-19\n\n### Added\n\n- MTX APIs are now automatically served when `cds.requires.multitenancy` exists. This renders an application-level server start script for multitenancy unnecessary.\n- Auto-connect to a live reload server started by `cds watch`\n- `cds.parse` now offers tagged template strings. E.g. const {CDL,CQL,CXL} = cds.parse; CQL`SELECT from Books where stock > 111`.\n- `cds.log` now supports config options for Loggers and log levels via `cds.env.log`\n- `cds.entity.draft` as a stable way to read from draft data\n- `cds.linked` now correctly links, events, action params and results, which were not linked before\n- `cds.env.features.skip_unused = 'all'` removes all definitions from csn which are not reachable by defined services. Especially when using comprehensive reuse models, like ODM, this significantly reduces both, memory consumption as well as excess tables and views in databases\n\n### Changed\n\n- Upgraded major version of dependency `@sap/cds-compiler`\n- `cds.requires.db.multiTenant` is deprecated. Multitenancy can now be enabled by adding a `cds.requires.multitenancy` configuration.\n- `cds deploy --to hana` no longer adds a driver for SAP HANA to `package.json`.  This can be done with `cds add hana`.\n- `cds deploy --to hana` no longer adds configuration for SAP HANA to `package.json`.  This can be done with `cds add hana`.\n- `cds deploy --to hana` drops support for the classic CAP Java runtime, i.e. longer writes credentials for SAP HANA to `connection.properties`.\n- Fiori preview now [loads and shows data initially](https://sapui5.hana.ondemand.com/1.84.0/#/topic/1cf5c7f5b81c4cb3ba98fd14314d4504) in its list page\n- I18n template strings now are replaced in EDMX documents such that they retain their surrounding string.  For example, the `\"{i18n>key1} - {i18n>key2}\"` template results in `\"value1 - value2\"`, while previously the first match replaced the entire string, leading to `\"value1\"`.  This is helpful for the [`Template` strings of `UI.ConnectedFields`](https://github.com/SAP/odata-vocabularies/blob/ac9fe832df9b8c8d35517c637dba7c0ac2753b0f/vocabularies/UI.xml#L168).\n- CDS drops compiler v2 support for classic CAP Java runtime projects. `cds build` returns an error if compiler version 2 is used. For further details regarding migration to CAP Java SDK runtime see https://cap.cloud.sap/docs/java/migration.\n\n### Fixed\n\n- `cds.connect.to` no longer returns `undefined` in concurrent cases where `connect` is called again while a datasource is about to be connected.\n- `cds.log` formerly wrote log and debug output to stderr, now writes that to stdout\n- `cds.server` now accepts port `0` as a number\n- Race conditions in `cds.serve` and `cds.connect` lead to wrong Service instances to lost handler registrations\n\n### Removed\n\n- Compiler non-snapi support &rarr; see `cds.env.features.snapi` option\n- In recent releases we added methods `cds.compile.to.hdbtabledata` and `cds.compile.to.hdbmigration`, intentionally undocumented, as they were meant to be private. Nobody should ever have used these methods, hence nobody should be affected by their removal.\n\n## Version 4.6.5 - 2021-03-12\n\n### Fixed\n\n- `cds build` now correctly parses `.hdbtablemigration` files on Windows\n- `compile --to serviceinfo` no longer crashes for Spring configuration in multi-root `yaml` files\n\n## Version 4.6.4 - 2021-03-01\n\n### Fixed\n\n- Fix call to `to.hdi.migration` compiler API\n- `cds build` for SAP HANA now correctly passes `sql_mapping` options to new hdimigration compiler API.\n\n## Version 4.6.3 - 2021-02-26\n\n### Added\n\n- [beta] `cds build` for SAP HANA now provides schema evolution support for multitenant application extensions.\n\n### Fixed\n\n- `cds compile --to serviceinfo` returns better results for Java projects\n- `cds.connect.to('srv-missing')` called twice with `srv-missing` not configured, would have failed with an error on the first call, but got stuck in the Promise chain for all subsequent calls.\n- `.after` handlers are called with result based on request, e.g., array for collection and object for entity, instead of always array\n  - Deactivate during two month grace period via compat feature flag `cds.env.features.arrayed_after = true`\n\n## Version 4.6.1 - 2021-02-11\n\n### Added\n\n- [beta] `cds build` for SAP HANA now supports the generation of `hdbmigrationtable` design-time artifacts for big volume tables allowing for schema evolution capabilities. Model entities annotated with `@cds.persistence.journal` will be deployed as `hdbmigrationtable` artifacts instead of `hdbtable`.\n\n## Version 4.5.3 - 2021-02-19\n\n### Fixed\n\n- `cds deploy` and `build` now refer to the latest HDI deployer which supports Node.js 14\n\n## Version 4.5.2 - 2021-02-17\n\n### Fixed\n\n- `cds serve --with-mocks` now also works in `production` environment if `cds.features.mocked_bindings` is true.  Previously, mocks were always disabled in `production`.\n- `cds serve` now only fires the `listening` event once\n- `cds build` redacts cds configuration data in log messages\n\n## Version 4.5.1 - 2021-02-01\n\n### Fixed\n\n- Update `@sap/cds-runtime` dependency\n\n## Version 4.5.0 - 2021-02-01\n\n### Added\n\n- `cds.server` provides an option to switch off automatically generated `index.html` served at `/`:\n  Do that in a custom `server.js`:\n  ```js\n  const cds = require('@sap/cds')\n  // ...\n  module.exports = (o) => cds.server({ ...o, index:false })\n  ```\n- The default `index.html` now honors the system's setting for dark mode.\n- Former package `@sap/cds-reflect` is now embedded in `@sap/cds`\n\n### Changed\n\n- Fiori preview is now disabled if `NODE_ENV` is `production`, to avoid any runtime overhead there.  You can enable it with configuration `cds.features.fiori_preview: true`.\n\n### Fixed\n\n- `cds build` now correctly supports multitenant applications defining multiple database modules, e.g. one database for tenant related data and one for shared data.\n- `cds deploy --to hana` does no longer fail with an invalid service name error if '.' is used in the MTA ID.\n\n## Version 4.4.10 - 2021-01-18\n\n### Changed\n\n- `cds build` for SAP HANA now only filters csv files if it's needed, e.g. if they contain comment lines.\n\n## Version 4.4.9 - 2021-01-12\n\n### Fixed\n- `cds build` for SAP HANA no longer fails sporadically with `ENOENT` when writing CSV files.\n\n\n## Version 4.4.8 - 2021-01-07\n\n### Fixed\n\n- Add missing setter for `user.locale`\n\n## Version 4.4.7 - 2020-12-18\n\n### Fixed\n\n- `cds build` for Java now also creates a default edmx file (the one w/o language suffix) if the `cds.i18n.languages` array is configured with a set of languages.  Runtime systems expect this file.\n- `cds build` now skips empty lines in CSV files when preparing SAP HANA deployment.  This doesn’t happens if the build target folder is `.`, because there CSV files are sources that are not touched.\n- `cds build` for SAP HANA now writes CSV files more reliably, avoiding sporadic `ENOENT` errors.\n\n## Version 4.4.6 - 2020-12-08\n\n### Fixed\n\n- Compat `.emit()` for synchronous events with object as first parameter\n\n## Version 4.4.5 - 2020-12-07\n\n### Fixed\n\n- Revert of _cds serve --at / now can overwrite the default /index.html route_, which caused problems in some applications\n\n## Version 4.4.4 - 2020-12-04\n\n### Added\n\n- `cds.User.default` allows to override the default user, e.g. to be `cds.User.Privileged` in tests. By default this is `cds.User.Anonymous`.\n\n### Changed\n\n- `cds compile` and `build` now do a faster localization of edmx files.  If there are no text keys inside these files, the content is no longer duplicated in memory.\n- `cds serve --at /` now can overwrite the default `/index.html` route\n\n\n## Version 4.4.3 - 2020-12-03\n\n### Fixed\n\n- `srv.on` can now be used for async events w/o having to call `next` in each handler\n- `srv.emit` constructs instances of `cds.Event` from given arguments, as intended\n- `srv.send` constructs instances of `cds.Request` from given arguments\n- Revert of: `cds build` filters `i18n` files for nodejs staging builds\n\n## Version 4.4.2 - 2020-12-01\n\n### Added\n\n- `cds.context` always allows access to the current request context when running in Node v12.18 and higher. It uses Node.js' `async_hooks` API for so-called continuation-local storage, and supercedes the need for `srv.tx(req)` in custom handlers.\n- Custom functions/actions can now be implemented with plain JavaScript methods in subclasses of `cds.Service`\n\n### Changed\n\n- `cds.unfold` was long-term deprecated, and removed now &rarr; use `cds.compile`\n- `cds.config` was long-term deprecated, and removed now &rarr; use `cds.env`\n- `cds.session` was long-term deprecated, and removed now &rarr; use `cds.db`\n\n## Version 4.4.1 - 2020-11-27\n\n### Fixed\n\n- When two services `Foo` and `FooBar` were defined, with one services's name being a substring of the other service's name,\n  it may have happened that the same EDMX, i.e. that of `FooBar`, was erroneously returned for both.\n- On Windows, the index page now shows normalized links to embedded html pages, i.e. `foo/bar.html` instead of `foo\\bar.html`.\n- `cds build` now consistently uses build target folder `'.'` as default for Java projects - also if custom build tasks have been defined.\n- Requests that contain `*` as `Accept-Language` header value do no longer fail.\n\n## Version 4.4.0 - 2020-11-18\n\n### Changed\n\n- Propagate correlation id header to subrequests\n\n### Fixed\n\n- `cds.debug` now reacts on the `DEBUG` environment variable set in a `.env` file\n- `cds build` filters `i18n` files for nodejs staging builds\n- Language headers with values `en-US-x-[saptrc, sappsd]` are now mapped to user locale `en-US-[saptrc, sappsd]`.\n- Messages are kept in their respective request (i.e., not propagated to the request's context, if exists)\n- Log requests in atomicity groups\n- `cds build` now creates correct custom handler path for nodejs projects in WebIDE fullstack.\n\n## Version 4.3.2 - 2020-12-18\n\n### Fixed\n\n- use `@sap/cds-runtime~2.6`\n\n## Version 4.3.1 - 2020-11-20\n\n### Fixed\n\n- `cds build` now creates correct custom handler path for nodejs projects in WebIDE fullstack.\n\n## Version 4.3.0 - 2020-11-03\n\n### Added\n\n- Helper function `cds.utils.uuid` to generate a UUID\n- Support `SELECT[...].limit(0, ...)`\n- `hdbtabledata` generation can be disabled using `cds build` task option `skipHdbtabledataGeneration`.\n\n### Changed\n\n- Optimized `cds build` performance when creating OData EDMX output.\n\n### Fixed\n\n- `cds build` now classifies the severity of compile messages the same way as the low-level compiler. As a consequence, messages with severity _warning_ might now be classified as _error_.\n- Now, cds CLI logs errors based on _log-level_ setting.\n- `cds compile --to sql` no longer creates SQLite-specific views if in `hana` SQL dialect\n- The `node-cf` build task of `cds build` now also filters `./` file dependencies from package.json in the build output.\n\n\n# Version 4.2.8 - 2020-10-27\n\n### Fixed\n\n- `cds compile --to edmx --dest` creates files with `.xml` ending again.\n\n\n# Version 4.2.7 - 2020-10-26\n\n### Fixed\n\n- SAP Fiori Elements preview finds the `express` package again in the case where no `express` is installed in the application's `node_modules`.\n\n\n# Version 4.2.6 - 2020-10-26\n\n### Fixed\n\n- `cds run` finds the `express` package again in the case where no `express` is installed in the application's `node_modules`.\n\n\n# Version 4.2.5 - 2020-10-23\n\n### Fixed\n\n- `cds compile --to edmx-v2` and `edmx-v4` now again write to the folder given with `--dest`.\n\n\n# Version 4.2.4 - 2020-10-16\n\n### Fixed\n\n- `cds compile --to edmx-v2/4` no longer crashes\n- `cds watch` no longer shows an error in absence of model files\n- `cds build` no longer fails with an error about module './old/compile'\n- Stack trace of some errors have been improved\n- The `.hdiconfig` file created by `cds build` now includes SAP HANA artifact types from undeploy.json\n\n# Version 4.2.3 - 2020-10-12\n\n### Fixed\n\n- Leading `#` comments in CSV files sporadically caused `cds build` to fail on Windows with error `EPERM: operation not permitted`.\n- Method `req.user.is()` returns boolean\n\n# Version 4.2.2 - 2020-10-07\n\n## Added\n\n- `cds.env.odata.containment` to use OData v4 Containment NavigationProperties feature\n- `cds.env.odata.structs` to preserve struct elements as ComplexTypes in OData EDMX instead of flattening\n- `cds.env.odata.refs` which uses NavigationProperties in OData EDMX instead of adding foreign keys\n- `cds.env.odata.proxies` to add proxy EntityTypes for external Association targets\n- `cds.env.odata.flavors` which contain presets for the afore-mentioned flags\n- `cds.env.odata.flavor` to choose from the afore-mentioned presets\n- `cds.load` option `plain` replacing former option `clean` (which still is silently supported for compatibility).\n- `cds.get` now supports option `flavor` with values: `files` | `sources` | `parsed` | `resolved` | `compiled`.\n- `sap.common.Currencies`, `Countries`, and `Languages` now have their `code` element annotated with `@Common.Text` pointing to the `name`.  In SAP Fiori's value list with fixed values, this will show the `name` rather than the code itself.  As before, this only has an effect if `@Common.TextArrangement` is set to `#TextOnly` on the entity the code list is used as `ValueList` for.\n\n## Changed\n\n- Replaced `cds.PrivilegedUser` with `cds.User.Privileged`\n- `cuid` in `@sap/cds/common` is now defined as an `aspect` to align it with the other definitions.  The previous definition as `abstract entity` is equivalent and was only needed for historic reasons.\n- `cds deploy --to sqlite` now skips columns from csv files if the header value is empty.  This allows for ad-hoc 'disabling' of columns.  For SAP HANA, the generated `hdbtabledata` files now also skip empty columns, restoring the behavior from cds 3.\n- `cds deploy --to sqlite` has aligned its escaping rules for parsing csv data with SAP HANA's `hdbtabledata`.  A `\"` character can be escaped by another `\"` as before, but only if contained in a quoted string, i.e. `\"A\"\"B\"` leads to `A\"B`, while `A\"\"B` stays `A\"\"B`, and `\"\"` results in an empty string.\n\n## Fixed\n\n- A `manifest.yml` file is now also generated for nodejs applications if a sqlite database is used.\n- `cds build` did not correctly validate custom service handler implementations, warnings have been logged by mistake.\n- The default memory size for nodejs applications has been increased in `manifest.yml` to avoid out-of-memory issues for cloud native deployments.\n- `cds build` is now correctly creating external CSN output for Java multi-tenant applications.\n\n# Version 4.1.10 - 2020-09-11\n\n## Added\n\n- Much like SQLite deployment, `cds deploy --to hana` and `cds build` can now cope with leading `#` comments in csv files, i.e. the comments get removed before deployment.\n- `cds deploy` now can handle empty strings in CSV values (use `\"\"`)\n\n## Fixed\n- `cds v` and `cds --version` now work again when called from `npm run` or `npx`.\n\n\n# Version 4.1.9 - 2020-09-02\n\n## Added\n\n- `cds.PrivilegedUser`, e.g., for transactions with super user\n\n# Version 4.1.8 - 2020-09-02\n\n## Changed\n\n- The `node-cf` build task of `cds build` now removes file dependencies in `package.json` in the build output.  These are anyways not resolvable on CF, but are handy at build time to [refer to other CDS modules](https://github.com/SAP-samples/cloud-cap-samples/blob/6fdd91b8c810d4367aa6dfc0a91e06dc467686ed/bookshop/package.json#L6).\n- `cds deploy --to sqlite` can now cope with leading `#` comments in csv files\n- `cds version --all` now includes `@sap/cds-sidecar-client`\n\n## Fixed\n\n- `cds.entities` w/o namespace parameter now works properly when running out of a compiled model (aka `csn.json` aka 'on Cloud Foundry').\n- `cds deploy --to hana` now also handles SAP HANA Cloud services on trial, which are created by the `hana` broker (in contrast to the `hanatrial` broker which still provisions older SAP HANA instances).\n- `cds deploy --to hana` no longer uses `cf marketplace`, which has changed its parameters in CF CLI v7.\n- SAP Fiori Elements preview's html no longer provokes Javascript errors in the SAP Fiori client.\n- For DB services of kind `sql` the service implementation is now set correctly in the cds configuration.  Previously, `sql` services got a `sqlite` implementation even if they were set to `hana` in production.\n- Custom event handlers that do not register with a path (only with event and function) no longer crash the runtime\n- In Typescript typings, the API declaration for `cds.load` and the `bootstrap` event is now fixed.\n\n# Version 4.1.7 - 2020-08-17\n\n## Added\n\n- Shortcut to class `cds.ApplicationService` in cds facade\n- Shortcut to class `cds.DatabaseService` in cds facade\n- Shortcut to class `cds.RemoteService` in cds facade\n- Shortcut to class `cds.MessagingService` in cds facade\n- Shortcut to class `cds.Event` as new base class of `cds.Request`\n\n## Fixed\n\n- Race condition on two parallel `cds.connect` to same service\n- **`cds deploy --no-save`** extends the list of files it does not modify to `package.json`, `default-env.json` and `connection.properties`\n- **Add meaningful error message if hdi-deploy cannot be loaded** &mdash; during `cds deploy --to hana`.\n\n# Version 4.1.6 - 2020-08-07\n\n## Added\n\n- `req.notify()` as a new varient besides `req.info()`, which should display as toaster notifications on Fiori elements or other UIs.\n\n## Fixed\n\n- `req.target` for unbound actions/functions is now `undefined` again, as documented\n- Handlers registered with `srv.on(<CRUD>, 'Some/path', ...)` were never invoked\n- Queries to remote services via `srv.on(..., ()=> other.read('Something'))` weren't sent to remote\n\n# Version 4.1.5 - 2020-07-31\n\n## Removed\n\nThe following changes affect undocumented internal implementations, and hence should not affect CAP-based projects.\nNevertheless, they are listed here for your reference.\n\n- `db.disconnect()` &rarr; no replacement; no need to disconnect before shutdown.\n- `db.run(()=>{})` &rarr; use `cds.run([...multiple queries])` instead.\n\n\n## Changed\n\n- **Most CLI commands have moved** to `@sap/cds-dk`.  Make sure to install the latest version with `npm i -g @sap/cds-dk`.\n\n- **Default OData version** in `cds configuration` is now `v4`. For `Node.js` projects and `Java` projects using new stack the cds configuration of `odata.version = 'v4'` is no longer required. For `Java` projects using old Java stack, OData v2 will still be used.\n\n- **Always do `await cds.connect.to()`** &mdash; in former versions `cds.connect.to()` returned some magic thenables, meant to ease the [_Promise Hell_](https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513); now it always returns plain-standard Promises. Likely you never used this undocumented former behaviour, but in case: Just ensure to always call `cds.connect` with `await`.\n\n- **Deprecated `cds.connect()`** &mdash; please prefer `cds.connect.to('db')` instead, which has the very same effect but is more in line with the notion of potentially working with multiple database services.\n\n- **Deprecated `cds.hana.syntax` configuration**.  Use `cds.hana.deploy-format`=`hdbtable` instead to switch deployment from `hdbcds` to `hdbtable` for SAP HANA Cloud.\n\n- **Faster generation of `hdbtabledata` files** from csv data.  It no longer tries to check the existence of element or column names.  Such checks are anyways done during SAP HANA deployment.  This behavior is now symmetrical to SQLite deployment.\n\n- **Removed legacy cds build system** &mdash; the fallback using `cds.features.build.legacy` is no longer supported.\n\n- **`cds deploy --to hana` changes kind** to `hana` only if it is not already `sql`.\n\n- **Consistent default naming scheme for applications and services deployed to CF** across the following `cds` commands `build`, `deploy`, `init` and `add`. For an application named `myapp` the SAP HANA deployer app name is `myapp-db-deployer`, the SAP HANA DB service name is `myapp-db`. `cds build` now generates the application manifest file with a different name `manifest.yml`.\n\n- **`cds build`** no longer creates service metadata for the UI service binding by default. For SAP Web IDE Full-Stack compatibility a corresponding metadata.xml is still generated.  A `fiori` build task has to be defined otherwise.\n\n- **`cds build` creates `hana` build results only** if either a corresponding build task has been configured or if kind `hana` or kind `sql` has been defined. A `production` build is required for the latter. A fallback is used for Web IDE Fullstack and legacy build configs.\n\n## Added\n\n- **Common `cds.service.factory`** &mdash; `cds.serve` and `cds.connect` now use a common `cds.service.factory` to construct instances of `cds.Service`, as well as adding custom-provided handlers and implementations. This applies the same consistent ways to register new implementations via `cds.env.requires` options, model annotations `@impl` and `@kind`, or the well known `.cds`/`.js` sibling files mechanism.\n\n- **Common `cds.Service` base class** &mdash; `cds.Service` is the newly introduced common base class for all connected or provided services &mdash; i.e. all service instances contructed thru `cds.service.factory`. It provides uniform consumption APIs, as well as event handling APIs and capabilities for all services.\n\n- **Custom `cds.Service` subclasses** &mdash; besides providing `cds.service.impl` functions as of before, custom service implementations can now return subclasses of `cds.Service`, thereby plugging into the framework even more.\n\n- **New `srv.after('each', row => ...)`** &mdash; the former technique to register per-row handlers `srv.after('READ', each => ...)` broke when code was minified. The new method using pseudo event `'each'` is minifier-safe.\n\n- **New `srv.prepend(srv => ...)`** &mdash; use `srv.prepend(...)` to register event handlers to be executed _before_ the already reistered handlers. For example, extensions of reused implementations sometimes need to use this.\n\n- **Reflect `srv.events`** &mdash; base class `cds.Service` provides a new getter `srv.events` to reflect on declared events in the service definition, similar to the already existing `srv.entities`, `srv.types` and `srv.operations`.\n\n- **Experimental `cds.ql(req)`** &mdash; event handlers can now use the like of `const {SELECT} = cds.ql(req)` to ensure transaction-managed and tenant-isolated execution of queries, instead of `srv.tx(req)`. **Note** though, that this is an **experimental** feature, which might change or be removed in future versions.\n\n- **Using `await` in `cds repl`** &mdash; we now support using `await` directly on `cds repl` prompt inputs. This feature is provided through [Node's _--experimental-repl-await_ option](https://nodejs.org/api/repl.html#repl_await_keyword).\n\n- **CLI shortcut `--odata <v2|v4|x4>`** &mdash; the newly introduced general CLI option _**--odata** <v2/v4>_ acts as a shortcut to _--odata-version <v2/v4>_. In addition, _--odata **x4**_ acts as shortcut to _--odata-version v4 --odata-format structured  --odata-containement true_.\n\n- **`cds build --production`** &mdash; builds the project using the `production` profile - same when `NODE_ENV` or `CDS_ENV` environment variable is set to `production`. This will create HANA deployment artifacts if `kind: \"sql\"` has been defined.\n\n- **`cds build --for <hana|java-cf|node-cf|mtx> --opts <...>`** &mdash; now supports execution of auto-created or configured build tasks. Individual properties can be overwritten by passing corresponding CLI options, defaults are used otherwise. For example, `cds build --for hana --dest target --opts model=[data,srv,app]`. **Note:** The parameter `options-model` has been deprecated use `--opts model=[...]`instead.\n\n- The set of languages that is honored for the `i18n.json` language pack can now be configured through `i18n.languages`.  Default is still `all`, which means the sum of language files found next to models.\n\n## Fixed\n- SAP Fiori Elements preview is now working again with the latest version of SAP UI5.\n\n- **Use latest SAP CommonCryptoLib help** &mdash; when SAP CommonCryptoLib is missing during `cds deploy --to hana`.\n\n- `sql_mapping` is only written to `csn.json` if the classic Java runtime and no default naming is used.\n\n- SAP Fiori Elements dev support in `cds run` now also honors `/v2` URLs.  These are installed by default by the `@sap/cds-odata-v2-adapter-proxy`.\n\n- npm scripts that wrap around cds-dk commands like `cds watch` now also work on Windows.  Previously they couldn't find the cds command.\n\n- When extracting the base model of a multi-tenant application `cds build` now ensures that only files having project scope are copied, a warning is logged otherwise.\n\n- `cds build` now no longer crashes if exactly one custom language is given in `options.lang` of the `java-cf` build task.\n\n- `cds compile` now fails with a non-zero exit code in case of compilation errors.\n\n# Version 3.35.0 - 2020-05-08\n\n## Changed\n- The new compiler implementation, a.k.a SNAPI, is now the default.  Can be disabled with `cds.features.snapi=false`.\n\n# Version 3.34.3 - 2020-06-19\n\n## Changed\n\n- Faster generation of `hdbtabledata` files from csv data.  It no longer tries to check the existence of element or column names.  Such checks are anyways done during SAP HANA deployment.  This behavior is now symmetrical to SQLite deployment.\n\n# Version 3.34.2 - 2020-05-30\n\n## Changed\n\n- Use `cds.hana.deploy-format`=`hdbtable` instead of `cds.hana.syntax` to switch deployment from `hdbcds` to `hdbtable` for SAP HANA Cloud.\n- `cds run` now supports relative `dataSource` URLs in SAP UI5 manifests again, so that UI5 apps can be served w/o approuter.  This support is only active in development mode.\n- `cds deploy --to hana` changes kind to `hana` only if it is not already `sql`\n\n## Fixed\n\n- The `UI.Identification` annotation for `sap.common.CodeList` got a correct value, pointing to its `name` element.\n- Configuration `requires.<foo>.credentials.destination` is now preserved again when running with `VCAP_SERVICES`.  In version 3.34.1 it was cleared.\n- Entities annotated with `@cds.persistence.skip:if-unused` (like `sap.common.Languages`) now again are skipped when compiling to SAP HANA output.  This got broken in previous versions when using the new compiler APIs.\n- `sql_mapping` is again written to `csn.json` as it's required by classic Java runtime.\n- `default-env.json` is now read even in production, which is in line with the behavior of other modules that honor this file.  Real prod environments like CF will still overwrite these defaults.\n- `cds build` caused error `invalid option` &mdash; when passing command line options like `log-level`, `src` or `for`.\n\n# Version 3.34.0 - 2020-04-27\n\n## Added\n\n- `cds version` option `-ls` prints an `npm ls` subtree.\n- `cds serve` / `run` now also accept package names as arguments, e.g. `cds serve --project @capire/bookshop`.\n- `cds compile` option `--parse` provides minimal, parsed-only CSN output.\n- New Node.js method `cds.compile()` allows compiling CDS sources in-process.\n- `cds build` now supports cds configuration `requires.db.kind:\"sql\"` which allows seamless production deployments using HANA db and development deployments using sqlite db.\n- Default maximum query size limit of 1000 (overridable via `@cds.query.limit.max`).\n- Improved error message during `cds deploy` on Windows when `SAP CommonCryptoLib` is missing.\n- `cds build` now checks that `entity-whitelist` and `service-whitelist` have been defined for SaaS applications - a warning is reported otherwise. `cds build` will fail if invalid entries exist.\n- Parameter `--vcap-file` lets `cds deploy --to hana` use an existing `default-env.json` file for the deployment credentials, instead of always creating new credentials from Cloud Foundry. Note that this is a beta feature.\n- `cds build --log-level` allows to choose which messages to see, default log level is `warn`.\n- Labels of `@sap/cds/common` texts are now available in many languages\n\n## Changed\n\n- Node.js method `cds.parse()` has been changed to now truely return parsed-only models, with extensions not applied yet.\n**Note:** If you'need the former (erroneous) behaviour, please use `cds.compile` for that from now on.\n- Node.js method `cds.get()` now returns parsed-only models; same as `cds.parse()`.\n- `cds serve` / `run` / `watch` now reduce logging of details for the bound DB on connect, leading to less clutter.\n- Precision for `validTo` and `validFrom` defined in the `temporal` aspect in `@sap/cds/common` changed from `DateTime` to `Timestamp`.\n- Some administrative fields of SAP Fiori draft documents are now hidden on the UI.  The rest got labels.\n- Renamed cds configuration setting `features.messageLevel` to `log-level` to be consistent with command line option, e.g. `cds build --log-level`.\n\n- `cds extend` and `cds activate` commands have been moved to `@sap/cds-dk`. `cds disconnect` has been moved there under a different name.\n\n## Fixed\n- `cds build` - improvements in the area of error handling and error reporting.\n- `cds env` and Node.js runtime now properly complete configuration like `requires.db.kind.sql` with VCAP_SERVICES, so that in `production` an SAP HANA service is bound.\n- `cds build` now localizes edmx files properly if `cds.env.features.snapi` is turned on.\n- `cds deploy --to hana` no longer crashes if called with `NODE_ENV=production`.\n\n## Removed\n\n# Version 3.33.1 - 2020-03-24\n\n## Fixed\n- `cds build` now correctly supports options.model definitions of type string\n- Details navigation in Fiori preview works again since it's pinned to SAP UI5 1.73.  Actual cause still needs to be investigated.\n- `cds deploy` now adds `@sap/hana-client` to package.json instead of `hdb`.\n- `cds deploy` adds kind `sql` to requires section.\n\n# Version 3.33.0 - 2020-03-19\n\n## Added\n- `cds deploy` uses information from existing `default-env.json`.\n\n- `cds version` now also lists all dependencies of your local package.json and has an updated CLI commend help, documenting option `--all`.\n- `cds compile` option `--docs` preserve contents of `/** ... */` doc comments in CSN output as well as in EDMX outputs (as _Core.Description_ annotations).\n- `cds compile` option `--clean` tells the compiler to not add any derived information, but return a CSN which reflects only what was actually found in a `.cds` source.\n- `cds serve` option `--watch` starts the specific serve command in nodemon watch mode\n- Node.js: `cds.env` now supports camel case env variables as well as dot-notated keys in `.env`\n\n## Changed\n\n- Labels for the `createdAt` and `changedAt` in the `@sap/cds/common#managed` entity have been adjusted to reflect the SAP Fiori design guidelines.\n- `cds build` now delegates to the modular build system by default (known as `cds build/all`). The modular build system is compatible, but supports additional features, e.g. staging build, SAP HANA Cloud Edition support, populating initial data from .csv by generating .hdbtabledata files, etc. The legacy build is still available as a fallback in case of issues - use setting `cds.features.build.legacy: true` or ENV variable `CDS_FEATURES_BUILD_LEGACY=true`.\n\n## Fixed\n\n- `cds build` now correctly logs warnings returned by cds compiler. The message log level can be customized using cds configuration setting `cds.features.messageLevel` - default is `warn`.\n- `cds.env.roots` now properly picks up a changed value of `cds.env.folders`\n- `hdbtabledata` is no longer generated for entities that are marked with `@cds.persistence.skip`\n\n## Removed\n\n\n# Version 3.32.0 - 2020-03-06\n\n## Fixed\n- An issue where all Node.js runtime sessions where disconnected when one tenant offboarded.\n\n\n# Version 3.31.2 - 2020-03-05\n\n## Fixed\n- `cds deploy` does not crash if _texts.csv is provided for skipped entities\n- `cds serve foo.cds` does no longer load same model twice\n- `cds compile --to edmx` no longer creates files with csn instead of edmx content in case no language bundles are found\n- Both `cds env` and `cds compile` no longer write terminal escape sequences if only stdout is redirected, but not stderr.\n- No longer enforce Node.js version 8 in `db/package.json`.  Cloud Foundry environment does not support it anymore, as this version is out of maintenance.\n\n\n# Version 3.31.1 - 2020-02-26\n\n\n## Fixed\n\n- Removed `npm-shrinkwrap.json`\n\n\n# Version 3.31.0 - 2020-02-25\n\n## Added\n\nGeneration of `hdbtabledata` files now reports if CSV file names don't match entity names, and if header names don't match element names in an entity.  Watch out for such logs in case CSV files are not deployed to SAP HANA.\n\n## Fixed\n\n- `cds compile --to hdbtabledata` no longer crashes with `_texts.csv` files referring to a non-`localized` entity\n- `cds build/all` adds `app` folder to the list of model folders for HANA database builds. Draft tables are missing if the corresponding annotation model is missing.\n\n\n# Version 3.30.0 - 2020-02-10\n\n## Added\n\n  - `cds compile --log-level` allows to choose which messages to see\n  - `cds deploy --dry` prints DDL statements to stdout instead of executing them\n  - `cds deploy --with-mocks` also adds tables for required services\n  - `cds serve --mocked` allows mocking individual required services\n  - ( &rarr; learn more about these things using `cds help ...` )\n  - `cds.env` now also loads from `.env` files in properties format\n  - [`cds.resolve/load('*')`](https://cap.cloud.sap/docs/node.js/api#cds-load) resolves or loads all models in a project including those for required services. It ist controlled and configurable through `cds.env.folders` and `.roots￼``. Try this in `cds repl` launched from your project root to see that in action:\n    ```js\n    cds.env.folders         // = folders db, srv, app by default\n    cds.env.roots           // + schema and services in cwd\n    cds.resolve('*',false)  // + models in cds.env.requires\n    cds.resolve('*')        // > the resolved existing files\n    ```\n\n  - Added `cds.debug(<id>)` as a convenient helper for debug output controlled by `process.env.DEBUG`. For example, use it as follows:\n    ```js\n    const DEBUG = cds.debug('my-module')\n    DEBUG && DEBUG ('my debug info:', foo, ...)\n    ```\n    ```sh\n    > DEBUG=my-module cds run\n    ```\n\n  - Added `cds.error(<msg>)` as a convenient helper for throwing errors whose stack traces start from the actual point of invocation. For example, use it as follows:\n    ```js\n    const {error} = cds\n    if (...) throw error `Something's wrong with ${whatever}`\n    const foo = bar || error `Bar is missing!` // short circuit exits\n    ```\n\n## Changed\n\n  This version brings a major refactoring and streamlining of service runtime implementations,\n  which stays fully compatible regarding all documented APIs but in case you used internal\n  not documented (non-)APIs, you should know these:\n\nRemoved undocumented features\n\n  - Annotation `@source` from models loaded for runtime\n  - Property `cds.serve.app` &rarr; use `cds.app` instead\n  - Property `source` from CSN entity/view definition objects\n\n> It's very unlikely that you ever used these undocumented internal features at all.\n> In case you did, this should never have been done and you should fix that asap.\n\n\nDeprecated features (&rarr; might get removed in upcoming versions)\n\n  - Property `cds.session` &rarr; use `cds.db` instead\n  - Property `cds.options` &rarr; use `cds.db.options` instead\n  - Property `cds.unfold` &rarr; use `cds.compile` instead\n  - Property `cds.config` &rarr; use `cds.env` instead\n\n> These properties actually where duplicates to the mentioned alternatives.\n\n\n`cds run` and `cds watch` have been re-implemented as convenience shortcuts to `cds serve`, which acts as the central orchestrator for bootstrapping now.   (&rarr; see `cds run ?` or `cds watch ?` to learn more)\n\n`cds serve` now optionally bootstraps from project-local `./server.js` or  `./srv/server.js`, if exist, thus giving more control while still benefitting from `cds serve`'s intrinsic support for options like `--in-memory` or `--with-mocks`.\n\n`cds serve` now uses `cds.load('*')` to load a single effective model once, assigned to `cds.model`, and reused for db as well as all provided and required services . As that avoids loading models redundantly, it drastically improves both, bootstrapping performance as well as memory consumption.\n\n`cds deploy` does not (have to) register the default models to `package.json` anymore. For example, unlike before, `cds deploy -2 sqlite` will merely add an entry: `db:{kind:'sqlite'}`, without an additional `model` property anymore.\n\n`cds deploy --to hana` does not create `connection.properties` file any longer, but only modify existing one\n\n`modifiedAt` and `modifiedBy` from `@sap/cds/common`\n   - Are now mutable for OData, i.e. no longer carry the `@Core.Immutable: true` annotation.\n   - Are set by the Node.js runtime whenever the respective row was modified, i.e. also during `CREATE` operations.\n\nSupport for `cds init` is now moved to `@sap/cds-dk`.\n\n## Fixed\n\n - There was a bug in that caused a service names `FooBarV2` to erroneously be mapped to mount point `/foo-barv2` instead of `/foo-bar-v2` as intended and was the case before. &rarr; in case you started a project in this interims phase and had a service name with that pattern you may encounter this fix as an incompatible change, but it's actually reverting to the former compatible way.\n\n - `cds.env` erroneously overrode profiled entries depending on properties order\n\n - Fiori preview now uses latest version of SAP UI5 again\n\n - `cds deploy` verifies returned service key to ensure target service is not of type `managed`.\n\n\n\n\n# Version 3.21.3 - 2020-02-05\n## Fixed\n- Fiori preview no longer catches service URLs with an arbitrary prefix (e.g. `/foo/browse` instead of just `/browse`).\n\n\n# Version 3.21.1 - 2020-01-07\n## Fixed\n- SAP Fiori Elements preview no longer crashes since it's pinned to SAP UI5 1.72.3.  Actual cause still needs to be investigated.\n\n## Version 3.21.0 - 2019-12-11\n\n- `cds add`, `import`, and `watch` now print installation hints if `@sap/cds-dk` is not installed\n\n- Experimental option `hana.syntax=hdi` to create `hdbtable` files instead of `hdbcds`.  May still change!\n\n\n## Changed\n\n- In development mode, the `mock` authorization strategy is automatically activated with two fake users `alice` and `bob`, which allows for out-of-the-box testing of `@requires` annotations. This means that, unlike before, the `JWT` authorization strategy needs to be activated explicitly (through `{auth: { passport: { strategy: 'mock' }}}`.  In production, no change is required.\n\n- You might see a `MODULE_NOT_FOUND` error for `@sap/xsenv` in case you use the `JWT` strategy but have not bound any xsuaa service.  In this case either bind such a service instance, add the `@sap/xsenv` dependency, or use a different strategy like `mock`.  The trigger of this error is `@sap/xssec` 2.2.4 no longer requiring `@sap/xsenv`.\n\n- Renovated and streamlined `cds init`. It prints a hint now if it's called with old-style parameters, as well as that it wants to be used from `@sap/cds-dk`. Check out `cds help init` for more.\n\n- Removed the experimental `--args` parameter of `cds compile`.  This turned out to be cumbersome to use in shells. Replacement is the standard configuration mechanism, e.g. use an environment variable `CDS_FOO_BAR` to activate option `cds.foo.bar`.\n\n## Fixed\n- `SELECT.one/distinct(Fool,[...])` failed when passing an array for columns as argument two\n\n\n\n# Version 3.20.1 - 2019-11-26\n## Fixed\n- Fix 'duplicate versions' errors by loading `@sap/cds` again from the current project if possible.\n\n# Version 3.20.0 - 2019-11-19\n\n## Added\n- Mention xsuaa in help of `cds compile`\n\n## Fixed\n- Typings for `UPDATE` function no longer contain duplicates.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.20.3\n- Changes of `@sap/cds-ql` 1.21.0\n- Changes of `@sap/cds-services` 1.21.0\n- Changes of `@sap/cds-messaging` 1.4.0\n- Changes of `@sap/generator-cds` 2.10.2\n\n\n\n# Version 3.18.4 - 2019-11-15\n\n## Fixed\n- `.cfignore` files now get created by `cds build/all` to improve the overall deployment turnaround\n  of `cf push`.  Also, this avoids failures of CF node.js buildpack trying to rebuild sqlite binaries.\n- Generated `manifest.yaml` files for Cloud Foundry now contain a `path` attribute that allows\n  pushing from an outside folder.  Also, they specify reduced memory requirements.\n- Generated `manifest.yaml` for HDI deployer does not create a route, and specifies a valid `health-check-type`.\n- `cds deploy --to hana` now also includes models in the `srv` folder.\n- `cds deploy` no longer writes model folders to `package.json` that do not exist.\n\n\n# Version 3.19.0 - 2019-10-31\n\n## Added\n- Deployments for sqlite and SAP HANA now find CSV files in the form `_texts_LOCALE.csv`,\n  like `Books_texts_fr.csv`.  This file layout allows splitting translated texts into one file\n  per language.\n- Deployment for sqlite now also imports initial data from JSON files\n- `cds version` has learned about `@sap/cds-dk`\n\n## Fixed\n- `cds watch --help` works again, if used from `@sap/cds-dk`\n\n\n# Version 3.18.3 - 2019-10-28\n## Fixed\n- Fixed a crash in `cds run --watch` with changing directories.\n- `cds watch` is now also found if called from an NPM script.\n- `cds watch` now uses the same lookup paths for models as `cds run`\n\n\n# Version 3.18.1 - 2019-10-17\n## Fixed\n- Fixed a crash during sqlite deployment if there were csv files that did not match an entity name\n- `cds deploy --to hana` now does a build for SAP HANA even if no matching build task is available.\n- `cds deploy` now tries to add `.gitignore` entries only once\n- In `@source` annotations of csn.json files generated for cloud deployments,\n  now posix file paths (with `/`) are written, and no Windows paths.\n- `cds serve` and `run` now shuts down gracefully in case of `SIGHUP` signals emitted by\n  e.g. the VS Code terminal.\n- `cds watch` now is found even if `@sap/cds-dk` is not installed locally.\n\n## Also see\n- Changes of `@sap/cds-ql` 1.19.2\n- Changes of `@sap/cds-services` 1.19.1\n- Changes of `@sap/cds-messaging` 1.2.1\n\n\n# Version 3.18.0 - 2019-10-09\n\n## Added\n- Compiler options for SAP HANA backend can now be set in configuration in the `cdsc.toHana` block\n  (e.g. `cds.cdsc.toHana.joins`)\n- `service.tx()` as a shortcut for `service.transaction()`\n\n## Fixed\n- `cds deploy --to hana` now adds the tunnel address to the JDBC URL\n- Boolean and number values from `default-env.json` now are accepted in configuration (`cds env`)\n- For applications deployed to Cloud Foundry, custom handlers are now properly resolved using their names.\n- `cds serve`/`run` now properly log `$batch` requests of OData\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.19.1\n- Changes of `@sap/cds-messaging` 1.2.0\n- Changes of `@sap/cds-ql` 1.19.1\n- Changes of `@sap/cds-reflect` 2.8.0\n- Changes of `@sap/cds-rest` 1.2.0\n- Changes of `@sap/cds-services` 1.19.0\n- Changes of `@sap/generator-cds` 2.9.0\n\n\n# Version 3.17.8 - 2019-09-25\n\n## Fixed\n\n- `UPDATE(entity, key)` statement\n\n\n# Version 3.17.7 - 2019-09-24\n\n## Fixed\n\n- `cds deploy`\n\n\n# Version 3.17.6 - 2019-09-23\n\n## Changed\n\n- Improved `cds env`\n\n\n# Version 3.17.5 - 2019-09-20\n\n## Fixed\n\n- `cds deploy` did not work properly\n\n\n# Version 3.17.4 - 2019-09-19\n\n## Also see\n- Changes of `@sap/cds-rest` 1.1.2\n\n\n# Version 3.17.3 - 2019-09-19\n\n## Fixed\n\n- `cds deploy --to hana`\n\n\n# Version 3.17.2 - 2019-09-19\n\n## Also see\n- Changes of `@sap/cds-services` 1.18.2\n- Changes of `@sap/generator-cds` 2.8.2\n\n\n# Version 3.17.1 - 2019-09-18\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.18.2\n- Changes of `@sap/cds-ql` 1.18.2\n- Changes of `@sap/cds-services` 1.18.1\n\n\n# Version 3.17.0 - 2019-09-10\n\n## Added\n- `cds run` has learned a new `--watch` option, which provides automatic restarts of the server on file changes.  [nodemon](https://www.npmjs.com/package/nodemon) package is required for this to work.\n\n## Fixed\n- `cds deploy` now writes `true` and `false` values in csv files as boolean to sqlite\n- Console output of `cds run` now waits until the server is really up and running before it declares success.\n- `cds deploy` and `build/all` do not write `hdbtabledata` files if some are already present.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.18.1\n- Changes of `@sap/cds-ql` 1.18.1\n- Changes of `@sap/cds-reflect` 2.7.1\n- Changes of `@sap/cds-services` 1.18.0\n- Changes of `@sap/generator-cds` 2.8.1\n\n\n\n# Version 3.16.2 - 2019-08-27\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.17.1\n\n\n\n# Version 3.16.0 - 2019-08-22\n\n## Added\n- `cds run` has learned a new `--in-memory` option, which connects and deploys to an SQLite in-memory database. There is no need to call `cds deploy` before.\n- `cds deploy --to hana` now can also be executed in Java projects\n- `cds run`'s index.html got a favicon, to give a visual clue in browsers.\n- `cds.requires.<datasource>.model` configuration can now also point to a node.js module, e.g. `@my/module`.\n  Previously, only a relative file path was supported.\n- Improved logging of query objects\n- `cds compile` now understands `--to edmx-v2` and `--to edmx-v4` to produce OData metadata of versions 2 or 4, respectively.\n\n## Changed\n- SAP Fiori Elements preview in `cds run` now is only added if OData services are being served.\n  For other protocols like `rest`, no SAP Fiori Elements preview is provided. Same holds true for the `$metadata` link.\n- `cds compile` now behaves better in non-TTY scenarios (e.g. when piping to files).  It writes a proper JSON\n  string instead of a Javascript object.  Previously, one had to enforce JSON using the `--to json` processor.  Compare e.g. the output of `cds compile model.cds` to `cds compile model.cds > model.json`.\n\n## Fixed\n- Fiori preview in `cds run` now also works for services with namespaces\n- In services of CF marketplace, `cds deploy --to hana` now only accepts services with plan `hdi-shared`.\n  Previously, it could get confused with services of type `hana` but of other (non-HDI) plans.\n- Localized edmx files are now produced also for i18n.json files.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.17.0\n- Changes of `@sap/cds-ql` 1.17.0\n- Changes of `@sap/cds-services` 1.17.0\n- Changes of `@sap/generator-cds` 2.7.0\n\n\n\n# Version 3.15.0 - 2019-07-26\n\n## Added\n- `hdbtabledata` files are now generated automatically as part of `cds deploy --to hana` for given set of CSV files.  CSV file names must follow the pattern `<namespace>-entity.csv` (same as for SQLite deployment) and be located in `db/csv` or `db/data`.\n- For Node.js, multiple configuration profiles can now be activated at the same time, e.g. by setting both `NODE_ENV` and `CDS_ENV`, or by setting a multi-value list: `CDS_ENV=profile1,profile2`.\n- New labels for `sap.common.*.code` and `sap.common.Currencies.symbol` (part of `@sap/cds/common`).\n- Better message for `Duplicate definition` errors, where the same `cds` file is referenced from different locations.\n  To fix this, check all dependencies to `@sap/cds` in your package.json and those of reused packages and ensure they allow deduped use of `@sap/cds`.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.16.1\n- Changes of `@sap/cds-ql` 1.16.0\n- Changes of `@sap/cds-services` 1.16.0\n- Changes of `@sap/generator-cds` 2.6.1\n\n\n# Version 3.14.0 - 2019-07-11\n\n## Added\n- Support for `SELECT.distinct.from(Foo)` and `SELECT.one.from(Foo)` queries in Node.js\n- [Beta] `cds deploy --to hana` deploys to SAP HANA on Cloud Foundry\n- For Node.js, `cds env` now activates the `development` profile automatically,\n  unless `CDS_ENV` or `NODE_ENV` are set.  This is in line with `NODE_ENV` defaulting to `development`.\n\n## Also see\n- Changes of `@sap/cds-ql` 1.15.0\n- Changes of `@sap/cds-services` 1.15.0\n- Changes of `@sap/generator-cds` 2.5.0\n\n\n# Version 3.13.0 - 2019-06-26\n\n## Added\n- `cds serve` now provides a preview of the services in a list page of SAP Fiori Elements\n\n## Changed\n- `cds serve` now yields an error if there are no services defined in the model\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.15.0\n- Changes of `@sap/cds-ql` 1.14.0\n- Changes of `@sap/cds-services` 1.14.0\n- Changes of `@sap/generator-cds` 2.4.11\n\n\n\n# Version 3.12.0 - 2019-06-17\n\n## Added\n- On request, `cds build/all` now generates OData EDMX files for node.js services\n- Performance optimizations for `cds build/all`\n\n## Fixed\n- `cds deploy` no longer fails if `data` dir is not present\n- `cds build/all` no longer prints a message if `mta.yaml` does not exist\n\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.14.1\n- Changes of `@sap/cds-ql` 1.13.0\n- Changes of `@sap/cds-services` 1.13.0\n\n\n# Version 3.11.1 - 2019-06-03\n\n## Fixed\n- `cds deploy` honors saved datasource configuration again\n- localization works again for sqlite datasources defined in `package.json`\n\n\n# Version 3.11.0 - 2019-06-03\n\n## Added\n\n- `cds deploy` now also finds `.csv` files in imported reuse packages\n- Better error messages for various `cds` CLI calls\n\n## Changed\n- `cds build/all` for Node.js projects generates proper CSN in `gen/csn.json`.\n   A warning is emitted if `cds serve` is run with the previous format.  Rebuild the project if you see this warning.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.14.0\n- Changes of `@sap/cds-ql` 1.12.0\n- Changes of `@sap/cds-services` 1.12.0\n- Changes of `@sap/generator-cds` 2.4.10\n\n# Version 3.10.0 - 2019-05-21\n\n## Added\n- Tables and view for localized entities are created by default now, both for SAP HANA and SQLite.\n- Internal errors are now marked as such in all CLI commands, with a request to report them.\n\n## Changed\n- `cds compile --service all` no longer fails in case no services are found.\n  This better matches higher level commands like `cds build` that should not fail in this instance.\n  Note that `--service Foo` fails as before in case `Foo` is not found.\n- `cds run` and `cds serve` now serve the generic index page at `/`, while previously this was `/$index`.\n- `cds build/all` now auto-creates build tasks from `mta.yaml` definition if no build tasks have been\n  defined in `.cdsrc.json`. If no `mta.yaml` file exists, cds configuration data respectively defaults\n  are used for build task configuration.\n\n## Fixed\n- CLI now shows compilation warnings in all commands, e.g. in `build`, `deploy`, or `compile`.\n  Previously warnings were only shown in case of compilation errors.\n- `cds help` no longer inserts terminal escape sequences if stdout is redirected to a file.\n- Errors in custom handlers are no longer shadowed in `cds serve` or `cds run`.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.13.4\n- Changes of `@sap/cds-ql` 1.11.1\n- Changes of `@sap/cds-reflect` 2.5.0\n- Changes of `@sap/cds-services` 1.11.1\n- Changes of `@sap/generator-cds` 2.4.8\n\n\n\n# Version 3.9.0 - 2019-05-08\n\n## Added\n- `cds.serve` now reads passport for services from `auth.passport` configuration property\n\n## Fixed\n- `cds.compile` now really skips entities marked with `if-unused`\n- Build tasks are now listed with `cds env`\n- `cds serve` now supports the `--at`, `--to`, and `--with` arguments as specified.\n- `cds deploy --to sqlite` now better handles csv files with empty values\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.12.0\n- Changes of `@sap/cds-ql` 1.10.2\n- Changes of `@sap/cds-reflect` 2.5.0\n- Changes of `@sap/cds-services` 1.10.2\n- Changes of `@sap/generator-cds` 2.4.6\n\n\n\n# Version 3.8.1 - 2019-04-30\n\n## Fixed\n- Texts in deep annotations, e.g. `@UI.Facet`, are now properly localized in OData metadata\n\n\n# Version 3.8.0 - 2019-04-09\n\n## Fixed\n- Make tests run on Windows again\n- Various fixes in `cds build/all`\n- Adjustments to latest compiler for localizing models\n- `.hdbcds` and `.hdbtabledata` files are now copied over in `cds build/all`\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.11.0\n- Changes of `@sap/cds-ql` 1.8.1\n- Changes of `@sap/cds-services` 1.8.1\n- Changes of `@sap/generator-cds` 2.4.4\n\n\n\n# Version 3.7.1 - 2019-03-25\n\n## Fixed\n- `cds serve` now honors `newCsn` configuration when serving from precompiled csn.json files.\n- `cds init` creates samples correctly when project already contains files.\n- `cds build` for node.js projects will now show up compilation errors.  Formatting has been improved as well.\n- Better support for finding `cds` executable in VSCode.\n\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.10.0\n- Changes of `@sap/cds-ql` 1.7.1\n- Changes of `@sap/cds-services` 1.7.2\n- Changes of `@sap/generator-cds` 2.4.4\n\n\n\n# Version 3.6.0 - 2019-02-27\n\n## Added\n- In `cds init`:\n  - Add modules via `cds init --modules` to an existing project.\n  - Do not allow project creation via `cds init` outside of current working folder, e.g. init ../../some/where/else is not allowed.\n  - No output at all (not even error messages) when using `cds init --quiet`.\n  - Create a module folder using `cds init --modules...` even if it is empty based on the supplied options.\n  - Parameter `--modules` only supports one folder of each type.\n- Alpha support for `@cds.odata.valuelist`: Adding `@cds.odata.valuelist` to `@cds.autoexposed` entities will automatically equip all associations referring to such entities with a corresponding `@Common.ValueList.entity`\n\n## Changed\n- Simplified code lists: removed superfluous types `LanguageCode`, `CountryCode`, and `CurrencyCode` from `@sap/cds/common`\n- `cds build/all` now does `--clean` by default and is less verbose in its output\n\n## Fixed\n- `cds.load` no longer fails if reading in a CSN file in version `0.1.0`\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.9.0\n- Changes of `@sap/cds-reflect` 2.4.0\n- Changes of `@sap/cds-ql` 1.6.0\n- Changes of `@sap/cds-services` 1.6.0\n- Changes of `@sap/generator-cds` 2.4.0\n\n\n\n# Version 3.5.2 - 2019-02-20\n\n## Fixed\n- Node.js projects created with `cds init` now\n  - Bind the service module to an HDI service in `mta.yaml`.\n  - Invoke CDS build when building the database module.\n  - No longer create old-style `service` configuration in `package.json`.\n- For datasources with kind `hana` we now also find `hanatrial` services in trial landscapes by matching their tag `hana`.\n\n\n\n# Version 3.5.1 - 2019-02-14\n\n## Fixed\n- In `cds serve` service providers where added twice to the express app.  This is fixed.\n- In the logs of `cds serve` false warnings on SAP Fiori Elements requests are now gone.\n- `cds serve` no longer fails on localization for unbound actions.\n- The project template was fixed to properly wire up the connection to SAP HANA.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.8.1\n- Changes of `@sap/cds-ql` 1.5.1\n- Changes of `@sap/cds-services` 1.5.2\n- Changes of `@sap/generator-cds` 2.3.7\n\n\n\n# Version 3.5.0 - 2019-02-07\n\n## Added\n- `cds compile -2 xsuaa` now generates default values for `xsappname` and `tenant-mode`\n- All commands now can be called with `--help`, where previously only `cds help <command>` was allowed.\n\n## Changed\n- The minimum required Node.js version is now set more specifically to _8.9_ LTS.  Previously, just Node.js 8 was mentioned.\n- The `cds build/all` (experimental build command for Node.js) emits a warning for existing projects to add build task configuration.  Watch out for such a warning in the console and follow its instructions.\n\n## Fixed\n- Service handlers are now also found on CF if CDS models are served from a `csn.json` file instead as from `.cds` sources.\n- An issue where projects w/o `db` dir could not be built using `cds build`.\n- Unclear documentation of `cds deploy` on where it looks up the data source.\n- `cds env` to load configuration profiles in lower-prio files (`.cdsrc.json`) with higher precedence than default configuration in higher-prio files (`package.json`).\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.8.0\n- Changes of `@sap/cds-reflect` 2.3.0\n- Changes of `@sap/cds-ql` 1.5.0\n- Changes of `@sap/cds-services` 1.5.0\n- Changes of `@sap/generator-cds` 2.3.6\n\n\n# Version 3.4.1 - 2019-01-24\n\n## Fixed\n\n- Restore cds-compiler `.version`\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.7.1\n- Changes of `@sap/cds-reflect` 2.2.1\n- Changes of `@sap/cds-ql` 1.4.0\n- Changes of `@sap/cds-services` 1.4.0\n- Changes of `@sap/generator-cds` 2.2.0\n\n\n# Version 3.4.0 - 2019-01-22\n\n## Added\n\n- `cds.env` supports loading from `default-env.json`\n- Support base models for `cds compile -2 xsuaa`\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.7.0\n- Changes of `@sap/cds-reflect` 2.2.0\n- Changes of `@sap/cds-ql` 1.4.0\n- Changes of `@sap/cds-services` 1.4.0\n- Changes of `@sap/generator-cds` 2.2.0\n\n\n# Version 3.3.0 - 2019-01-11\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.6.0\n- Changes of `@sap/cds-reflect` 2.1.0\n- Changes of `@sap/cds-ql` 1.3.0\n- Changes of `@sap/cds-services` 1.3.0\n- Changes of `@sap/generator-cds` 2.2.0\n\n\n# Version 3.2.0 - 2018-12-21\n## Changed\n- cdsc 2sql output may also contain .types\n- Add labels to CodeLists in common.cds\n- Improved cds error messages\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.6.0\n- Changes of `@sap/cds-reflect` 2.1.0\n- Changes of `@sap/cds-ql` 1.2.0\n- Changes of `@sap/cds-services` 1.2.0\n- Changes of `@sap/generator-cds` 2.2.0\n\n\n# Version 3.1.1 - 2018-12-13\n## Changed\n- Better console output from cds compile\n\n## Fixed\n- cds.compile ignored configured odata.version\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.6.0\n- Changes of `@sap/cds-reflect` 2.1.0\n- Changes of `@sap/cds-ql` 1.1.0\n- Changes of `@sap/cds-services` 1.1.0\n- Changes of `@sap/generator-cds` 2.2.0\n\n\n# Version 3.0.0\n## Changed\n- Reworked configuration options to center around required 'data sources'.\n  - As an example see the snippted that e.g. `cds deploy --to sqlite:my.db` generates into `package.json`.\n  - The former `cds` options from `package.json` are deprectated but still supported.\n- Clean up of many Node.js APIs, mainly for `cds.serve` and `cds.connect`.  See the [Javacript APIs documentation](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/a131984aefe94ff884e6b6819ee76bd9.html) for details.\n- Node.js 8 is now the minimum required runtime version.\n- Simplified `cds init`.  By default it creates a plain project suitable for local CDS development.\n\n## Added\n- `cds env` allows for inspecting the effective configuration\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.5.0\n- Changes of `@sap/cds-reflect` 2.0.0\n- Changes of `@sap/cds-ql` 1.0.0\n- Changes of `@sap/cds-services` 1.0.0\n- Changes of `@sap/generator-cds` 2.0.0\n\n\n# Version 2.11.2\n## Fixes\n- During `cds init/new` only install `@sap/generator-cds` 1.x\n\n\n# Version 2.11.0\n## Added\n- Reuse aspect `cuid` to `@sap/cds/common`\n- Support for smart to-many Associations finding backlinks automatically (&rarr;not for production!)\n- Support to fill DBs with initial data from CSV files (fetched from folder `db/csv/`)\n- New CLI command `cds run` - today a mere wrapper for `cds serve all` but meant to serve microservice test scenarios\n- `cds deploy` can be configured not to modify `package.json` through the `--no-save` option.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.2.0\n- Changes of `@sap/cds-reflect` 1.8.0\n- Changes of `@sap/cds-ql` 0.12.0\n- Changes of `@sap/cds-services` 0.12.0\n\n\n# Version 2.10.3\n## Fixes\n- During `cds init/new` only install `@sap/generator-cds` 1.x\n\n\n# Version 2.10.0\n## Added\n- Support for Fiori Draft\n\n## Fixes\n- Enhanced server.js to also include links to entities\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.1.3\n- Changes of `@sap/cds-reflect` 1.7.0\n- Changes of `@sap/cds-ql` 0.11.0\n- Changes of `@sap/cds-services` 0.11.0\n\n\n# Version 2.9.1\n## Fixes\n- `cds build` no longer blocks if running inside a Maven build.\n\n\n# Version 2.9.0\n## Added\n- `common.cds` model got annotations for title, description, and value lists.\n- `cds` executable now can read from stdin, e.g. `echo 'entity Foo {ID:UUID;}' | cds -2 sql`\n- `cds -2 sql` now outputs plain (non-HANA) SQL.  Use `-2 hana` for HANA SQL.\n- `cds config` shows the current CDS configuration.  Use `cds help config` to learn more.\n\n## Fixes\n- Entities from `common.cds` like `Languages`, `Countries`, and `Currencies` are now only persisted to the database if they are actually used.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.1.2\n- Changes of `@sap/cds-reflect` 1.6.0\n- Changes of `@sap/cds-ql` 0.10.0\n- Changes of `@sap/cds-services` 0.10.1\n\n\n# Version 2.8.0\n## Added\n- Support was added to build node.js service modules\n- `cds init` has been reimplemented with a better commandline experience, along with updated templates.  Plugin `@sap/generator-cds`, which is required for `cds init`, is now automatically installed when `init` is called for the first time.  `cds new` is still available and is now just a synonym for `init`.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.1.1\n- Changes of `@sap/cds-services` 0.9.0\n- Changes of `@sap/cds-ql` 0.9.0\n\n\n# Version 2.7.0\n## Also see\n- Changes of `@sap/cds-compiler` 1.0.32\n- Changes of `@sap/cds-services` 0.8.1\n- Changes of `@sap/cds-ql` 0.8.1\n\n\n# Version 2.6.0\n## Also see\n- Changes of `@sap/cds-compiler` 1.0.31\n- Changes of `@sap/cds-services` 0.7.0\n- Changes of `@sap/cds-ql` 0.7.0\n\n\n# Version 2.5.1\n## Also see\n- Changes of `@sap/cds-services` 0.6.0\n- Changes of `@sap/cds-ql` 0.6.0\n\n\n# Version 2.5.0\n## Added\n- Instead of compiling each `.cds` service file separately, `cds build` now combines all those files from the same folder, creating only one `csn.json` file for them.\n\n## Fixes\n- Shortcuts of `cds init` work again\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.0.30\n- Changes of `@sap/cds-services` 0.5.0\n- Changes of `@sap/cds-ql` 0.5.0\n\n\n# Version 2.4.2\nSame as version 2.3.2, but including the generic service provider for Node.js (`@sap/cds-services` and `@sap/cds-ql`).\n\n\n# Version 2.3.2\n## Changed\n- The default for SQL name mapping is changed to `plain`.  This means that\n  - The name of a table/view in the database catalog is obtained from the name of the corresponding entity in the CDS model in the following way:\n    - replace all \".\" by \"_\"\n    - convert everything to upper case\n  - The name of a table/view column in the database catalog is obtained from the name of the corresponding entity element in the csn in the following way:\n    - convert everything to upper case\n\n  Note that this is a breaking change for appliations that rely on the previous value of `quoted`.  In order to get this value back, add the following to `package.json`: `\"cds\": { \"data\": { \"sql_mapping\" : \"quoted\" } }`\n\n## Fixes\n- Special output formatting in CLI is only done for `cds eval` and `cds repl`, but not for programmatic usage.\n- Links to external documentation are now point to correct help documents.\n\n## Also see\n- Changes of `@sap/cds-compiler` 1.0.30\n\n\n\n# Version 2.3.0\n## Added\n- SQL names can now be configured with `{ data: {sql_mapping: \"plain/quoted\"} }`.  Default is `quoted`, but will be changed to `plain` soon.  If you need to stay with `quoted` in the futute, e.g. due to data compatibility reasons, you can configure this mode already now.\n\n## Fixes\n- The `csn.json` file produced by `cds build` now contains the properly unfolded model for OData.  Previously this was the normalized model, which led to runtime errors in the Java service provider.\n- Invalid configuration data in `package.json` now leads to a build error again.\n- Console output of `cds build` now presents files paths sorted.\n\n## Also see\n- Changes of CDS compiler 1.0.27\n\n\n\n# Version 2.2.0\n## Added\n- CDS configuration in `package.json` can now be omitted if you follow the standard project layout, i.e. if you place your model files in `db/`, `srv/`, and `app/` folders.\n\n## Changed\n- Previously data models needed to include import statements to the service models (e.g. `using from '../srv'`), so that the Java runtime could use these service views on the DB to execute queries.  The views are now included automatically, so that you can remove the explicit `using` clauses.\n- Calling just `cds` on the command line now prints its help.  The previously started REPL is now available with `cds repl` (or just `cds r`).\n\n## Fixes\n- Some cds commands failed on Windows.  This is fixed.\n\n## Also see\n- Changes of CDS compiler 1.0.24\n\n\n\n# Version 2.1.0\n## Added\n- Service edmx files are now written to UI app folders if their manifest.json contains a reference to the service.  This allows Web IDE's annotation modeler to work on up to date service files.\n- The results of `cds.compile.to...` commands are now automatically formatted if called in `cds -e...` or cds repl.  You don't need to append `console.log` to the call chain.\n\n## Fixes\n- Language properties are now found in all folders, also ones that are outside of the current module\n- csn.json is written with line breaks and indentation\n\n## Also see\n- Changes of CDS compiler 1.0.21\n\n\n# Version 2.0.0\n## Added\n- All-new command-line interface.  See `cds help` for information on the available commands.\n- `cds compile` exposes CDS model transformations with various options.\n- `cds build` automatically writes localized edmx files.\n- `cds build` now writes the version to the build log.\n- `cds version` does the usual thing.\n- `cds init` scaffolds CDS projects.\n- CDS repl (read-eval-print-loop): just type `cds` and play with CDS API.\n\n## Fixes\nToo many to mention :)\n\n## Also see\n- Changes of CDS compiler 1.0.19\n",
      "downloadsCurrentMonth": 520736,
      "downloadsCurrentFortnight": 249754,
      "downloads365": 5379044,
      "downloadsFortnightGrowth": -7.83,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 411161 },
        { "yearMonth": "2021-08", "downloads": 413407 },
        { "yearMonth": "2021-09", "downloads": 446468 },
        { "yearMonth": "2021-10", "downloads": 448585 },
        { "yearMonth": "2021-11", "downloads": 454459 },
        { "yearMonth": "2021-12", "downloads": 406447 },
        { "yearMonth": "2022-01", "downloads": 445726 },
        { "yearMonth": "2022-02", "downloads": 434050 },
        { "yearMonth": "2022-03", "downloads": 506453 },
        { "yearMonth": "2022-04", "downloads": 525418 },
        { "yearMonth": "2022-05", "downloads": 533634 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-11T22:48:33.267Z" },
        { "version": "3.18.1", "date": "2020-06-11T22:48:33.780Z" },
        { "version": "modified", "date": "2022-05-24T12:26:19.491Z" },
        { "version": "3.31.1", "date": "2020-06-11T22:48:41.437Z" },
        { "version": "3.20.1", "date": "2020-06-11T22:48:48.347Z" },
        { "version": "2.8.0", "date": "2020-06-11T22:48:56.092Z" },
        { "version": "3.21.0", "date": "2020-06-11T22:49:03.165Z" },
        { "version": "3.18.4", "date": "2020-06-11T22:49:09.800Z" },
        { "version": "3.16.1", "date": "2020-06-11T22:49:17.419Z" },
        { "version": "1.14.1", "date": "2020-06-11T22:49:23.788Z" },
        { "version": "3.34.2", "date": "2020-06-11T22:49:32.375Z" },
        { "version": "3.20.0", "date": "2020-06-11T22:49:39.242Z" },
        { "version": "3.7.1", "date": "2020-06-11T22:49:45.765Z" },
        { "version": "3.21.3", "date": "2020-06-11T22:49:53.339Z" },
        { "version": "1.15.0", "date": "2020-06-11T22:50:00.096Z" },
        { "version": "2.10.3", "date": "2020-06-11T22:50:11.394Z" },
        { "version": "3.10.0", "date": "2020-06-11T22:50:18.242Z" },
        { "version": "2.10.2", "date": "2020-06-11T22:50:24.522Z" },
        { "version": "2.8.1", "date": "2020-06-11T22:50:31.022Z" },
        { "version": "3.21.1", "date": "2020-06-11T22:50:37.511Z" },
        { "version": "3.34.1", "date": "2020-06-11T22:50:44.257Z" },
        { "version": "1.15.1", "date": "2020-06-11T22:50:51.479Z" },
        { "version": "3.16.2", "date": "2020-06-11T22:50:57.643Z" },
        { "version": "3.17.4", "date": "2020-06-11T22:51:04.829Z" },
        { "version": "3.0.0", "date": "2020-06-11T22:51:12.092Z" },
        { "version": "3.33.1", "date": "2020-06-11T22:51:19.191Z" },
        { "version": "3.5.0", "date": "2020-06-11T22:51:25.888Z" },
        { "version": "3.21.2", "date": "2020-06-11T22:51:33.990Z" },
        { "version": "3.5.1", "date": "2020-06-11T22:51:41.111Z" },
        { "version": "3.31.2", "date": "2020-06-11T22:51:49.780Z" },
        { "version": "2.3.2", "date": "2020-06-11T22:51:56.236Z" },
        { "version": "3.5.2", "date": "2020-06-11T22:52:02.678Z" },
        { "version": "2.9.1", "date": "2020-06-11T22:52:09.074Z" },
        { "version": "3.13.0", "date": "2020-06-11T22:52:15.624Z" },
        { "version": "3.16.3", "date": "2020-06-11T22:52:22.089Z" },
        { "version": "2.3.1", "date": "2020-06-11T22:52:29.375Z" },
        { "version": "1.14.0", "date": "2020-06-11T22:52:35.871Z" },
        { "version": "2.10.1", "date": "2020-06-11T22:52:42.256Z" },
        { "version": "3.18.3", "date": "2020-06-11T22:53:01.225Z" },
        { "version": "3.34.3", "date": "2020-06-24T08:01:44.889Z" },
        { "version": "4.1.5", "date": "2020-08-05T14:09:33.398Z" },
        { "version": "4.1.7", "date": "2020-08-18T13:11:27.063Z" },
        { "version": "4.1.9", "date": "2020-09-03T12:07:53.100Z" },
        { "version": "4.2.3", "date": "2020-10-14T07:44:46.926Z" },
        { "version": "4.2.4", "date": "2020-10-16T16:51:19.882Z" },
        { "version": "4.2.6", "date": "2020-10-26T12:02:08.948Z" },
        { "version": "4.2.7", "date": "2020-10-26T14:29:07.298Z" },
        { "version": "4.2.8", "date": "2020-10-27T17:22:21.465Z" },
        { "version": "4.3.0", "date": "2020-11-04T14:06:19.353Z" },
        { "version": "4.3.1", "date": "2020-11-23T16:57:02.566Z" },
        { "version": "4.4.4", "date": "2020-12-04T14:35:18.761Z" },
        { "version": "4.4.5", "date": "2020-12-07T09:58:03.250Z" },
        { "version": "4.4.6", "date": "2020-12-08T12:43:48.347Z" },
        { "version": "4.3.2", "date": "2020-12-18T13:14:23.584Z" },
        { "version": "4.4.7", "date": "2020-12-18T13:16:46.793Z" },
        { "version": "4.4.9", "date": "2021-01-12T16:40:26.421Z" },
        { "version": "4.4.10", "date": "2021-01-20T14:39:03.312Z" },
        { "version": "4.5.1", "date": "2021-02-03T10:20:56.962Z" },
        { "version": "4.5.2", "date": "2021-02-17T16:25:14.471Z" },
        { "version": "4.5.3", "date": "2021-02-19T12:07:54.211Z" },
        { "version": "4.6.4", "date": "2021-03-02T13:51:06.724Z" },
        { "version": "4.6.5", "date": "2021-03-15T09:36:08.951Z" },
        { "version": "5.0.4", "date": "2021-04-07T14:10:33.925Z" },
        { "version": "5.0.6", "date": "2021-04-16T12:41:51.531Z" },
        { "version": "4.6.6", "date": "2021-05-10T07:24:35.940Z" },
        { "version": "5.1.1", "date": "2021-05-10T15:16:48.742Z" },
        { "version": "5.1.2", "date": "2021-05-11T17:02:15.685Z" },
        { "version": "5.1.3", "date": "2021-05-11T18:11:49.945Z" },
        { "version": "5.1.4", "date": "2021-05-12T16:29:59.689Z" },
        { "version": "5.1.5", "date": "2021-05-25T08:58:48.560Z" },
        { "version": "5.3.0", "date": "2021-07-12T07:14:16.056Z" },
        { "version": "5.3.1", "date": "2021-07-13T07:56:46.387Z" },
        { "version": "5.3.2", "date": "2021-07-19T07:08:41.835Z" },
        { "version": "5.4.0", "date": "2021-08-02T13:36:46.509Z" },
        { "version": "5.4.1", "date": "2021-08-03T13:46:47.246Z" },
        { "version": "5.4.2", "date": "2021-08-11T12:24:31.669Z" },
        { "version": "5.4.3", "date": "2021-08-16T11:21:24.906Z" },
        { "version": "5.4.4", "date": "2021-09-09T10:25:15.438Z" },
        { "version": "5.4.5", "date": "2021-09-15T09:43:17.840Z" },
        { "version": "5.4.6", "date": "2021-09-20T12:16:57.940Z" },
        { "version": "5.5.0", "date": "2021-09-27T12:37:11.550Z" },
        { "version": "5.5.1", "date": "2021-09-27T12:37:26.715Z" },
        { "version": "5.5.2", "date": "2021-09-29T14:58:13.057Z" },
        { "version": "5.5.3", "date": "2021-10-07T07:52:38.726Z" },
        { "version": "5.5.4", "date": "2021-10-13T09:28:58.778Z" },
        { "version": "5.5.5", "date": "2021-10-20T13:58:14.473Z" },
        { "version": "5.6.0", "date": "2021-11-02T12:08:45.385Z" },
        { "version": "5.6.1", "date": "2021-11-02T15:31:40.523Z" },
        { "version": "5.6.2", "date": "2021-11-08T13:56:36.679Z" },
        { "version": "5.6.3", "date": "2021-11-15T17:49:08.767Z" },
        { "version": "5.6.4", "date": "2021-11-23T15:33:51.607Z" },
        { "version": "5.7.1", "date": "2021-12-06T14:34:26.378Z" },
        { "version": "5.7.2", "date": "2021-12-09T12:17:51.040Z" },
        { "version": "5.7.3", "date": "2021-12-16T15:39:49.816Z" },
        { "version": "5.7.4", "date": "2021-12-22T13:37:04.842Z" },
        { "version": "5.7.5", "date": "2022-01-14T11:03:54.002Z" },
        { "version": "5.8.0", "date": "2022-01-31T08:54:12.872Z" },
        { "version": "5.8.1", "date": "2022-02-11T16:28:14.836Z" },
        { "version": "5.8.2", "date": "2022-02-22T16:23:26.509Z" },
        { "version": "5.8.3", "date": "2022-03-01T20:42:09.373Z" },
        { "version": "5.8.4", "date": "2022-03-17T10:35:21.153Z" },
        { "version": "5.9.0", "date": "2022-03-28T08:21:39.505Z" },
        { "version": "5.9.1", "date": "2022-03-31T13:33:24.914Z" },
        { "version": "5.9.2", "date": "2022-04-07T12:02:52.746Z" },
        { "version": "5.9.3", "date": "2022-04-27T08:32:56.402Z" },
        { "version": "5.9.4", "date": "2022-05-02T16:34:27.835Z" },
        { "version": "5.9.5", "date": "2022-05-09T14:48:00.478Z" },
        { "version": "5.9.6", "date": "2022-05-24T12:26:19.415Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cds"
    },
    {
      "name": "cf-tools",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-08-16T14:52:10.218Z",
      "updatedAt": "2022-06-08T12:00:41.220Z",
      "readme": "![GitHub package.json version](https://img.shields.io/github/package-json/v/SAP/cloud-foundry-tools-api)\n[![CircleCI](https://circleci.com/gh/SAP/cloud-foundry-tools-api.svg?style=svg)](https://circleci.com/gh/SAP/cloud-foundry-tools-api)\n[![Coverage Status](https://coveralls.io/repos/github/SAP/cloud-foundry-tools-api/badge.svg?branch=master)](https://coveralls.io/github/SAP/cloud-foundry-tools-api?branch=master)\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/SAP/cloud-foundry-tools-api.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/SAP/cloud-foundry-tools-api/context:javascript)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n[![REUSE status](https://api.reuse.software/badge/github.com/SAP/cloud-foundry-tools-api)](https://api.reuse.software/info/github.com/SAP/cloud-foundry-tools-api)\n[![dependentbot](https://api.dependabot.com/badges/status?host=github&repo=SAP/cloud-foundry-tools-api)](https://dependabot.com/)\n\n# Overview \nThis package provides a set of APIs to help you develop applications in Cloud Foundry. You can use these APIs to manage apps, service instances, orgs, spaces, and users in your environment. Mostly, this is a wrapper of the CF command line client, which runs a particular command and parses the output to the suitable JSON file. If an error or failure occurs,  the runtime exception throws with relevant problem information.\n\n## API Reference Guide\n[API guide](https://sap.github.io/cloud-foundry-tools-api)\n\n## Prerequisite\n\n_from version_ `v1.0.0` _and above_:\n\nMake sure you have installed the CF CLI [v7](https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v7.md#installers-and-compressed-binaries) tool in your environment.\n\n_below version_ `v1.0.0`:\n\nMake sure you have installed the CF CLI [v6](https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v6.md#installers-and-compressed-binaries) tool in your environment.\n\n## Examples of usage\n\nExample 1\n\n```\ntry {\n\tconst result = await cfLogin(\"https://api.cf.....com\", \"user\", \"password\");\n\tif (result === \"OK\") {\n\t\t// successful\n\t}\n} catch (e) {\n\t// display or/and log error\n}\n```\n\nExample 2\n\n```\ntry {\n\tconst spaces = await cfGetAvailableSpaces(\"myOrg\");\n\tfor (const space of spaces) {\n\t\tconsole.log(\"Space label is \" + space.label + \" guid is \" + space.guid);\n\t}\n} catch (e) {\n\t// display or/and log error\n}\n```\n\n## Contributing\nContributing information can be found in the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n",
      "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n\n## [2.2.0](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.4...v2.2.0) (2022-02-09)\n\n\n### Features\n\n* support origin for CF login ([#150](https://github.com/sap/cloud-foundry-tools-api/issues/150)) ([064fa99](https://github.com/sap/cloud-foundry-tools-api/commit/064fa9903e403e1e66fd614afb1a57e6f22ba36c))\n\n\n### Bug Fixes\n\n* incorrect output analyzing ([#146](https://github.com/sap/cloud-foundry-tools-api/issues/146)) ([de2bed0](https://github.com/sap/cloud-foundry-tools-api/commit/de2bed0777c114389c03f83dfe7a277e47116532))\n\n### [2.1.1](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.4...v2.1.1) (2021-12-06)\n\n\n### Bug Fixes\n\n* incorrect output analyzing ([#146](https://github.com/sap/cloud-foundry-tools-api/issues/146)) ([de2bed0](https://github.com/sap/cloud-foundry-tools-api/commit/de2bed0777c114389c03f83dfe7a277e47116532))\n\n## [2.0.4](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.1...v2.0.4) (2021-11-21)\n\n\n### Bug Fixes\n\n* wrong parsing of cli output ([#142](https://github.com/sap/cloud-foundry-tools-api/issues/142)) ([857fbc8](https://github.com/sap/cloud-foundry-tools-api/commit/857fbc86bc21a49aa993065648cdfd407a5dd2ce))\n\n\n\n## [2.0.1](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.0...v2.0.1) (2021-06-30)\n\n\n### Bug Fixes\n\n* change access to fs/promises lib ([#113](https://github.com/sap/cloud-foundry-tools-api/issues/113)) ([2dd4a36](https://github.com/sap/cloud-foundry-tools-api/commit/2dd4a361c7414738abef74f274898d9fcddeef0a))\n\n\n\n# [2.0.0](https://github.com/sap/cloud-foundry-tools-api/compare/v1.2.0...v2.0.0) (2021-06-22)\n\n\n### Features\n\n* cfApi is announced ([#108](https://github.com/sap/cloud-foundry-tools-api/issues/108)) ([7217f97](https://github.com/sap/cloud-foundry-tools-api/commit/7217f97710436d6ddffcfba0de6890e47c982295))\n\n\n\n# [1.2.0](https://github.com/sap/cloud-foundry-tools-api/compare/v1.1.1...v1.2.0) (2021-06-09)\n\n\n### Features\n\n* add guid to service instance info ([#100](https://github.com/sap/cloud-foundry-tools-api/issues/100)) ([82959b9](https://github.com/sap/cloud-foundry-tools-api/commit/82959b9d83b2bdba4fef1e80d796668ff32ec4a5))\n\n\n\n## [1.1.1](https://github.com/sap/cloud-foundry-tools-api/compare/v1.1.0...v1.1.1) (2021-05-24)\n\n\n### Bug Fixes\n\n* 'getServicesInstancesFilteredByType' re-implemented ([#93](https://github.com/sap/cloud-foundry-tools-api/issues/93)) ([883de7d](https://github.com/sap/cloud-foundry-tools-api/commit/883de7da0c233fabc366c86b62c72a2720139295))\n\n\n\n# [1.1.0](https://github.com/sap/cloud-foundry-tools-api/compare/v1.0.2...v1.1.0) (2021-04-04)\n\n\n### Features\n\n* function 'cfGetApps' announced ([#79](https://github.com/sap/cloud-foundry-tools-api/issues/79)) ([c9b333f](https://github.com/sap/cloud-foundry-tools-api/commit/c9b333f00324d8b0f17e7e516cf6179e1145311c))\n\n\n\n## [1.0.2](https://github.com/sap/cloud-foundry-tools-api/compare/v1.0.1...v1.0.2) (2021-03-07)\n\n\n### Bug Fixes\n\n* v2->v3 adjustments ([#73](https://github.com/sap/cloud-foundry-tools-api/issues/73)) ([24df910](https://github.com/sap/cloud-foundry-tools-api/commit/24df910e800dcf58a245713c731cdc8e741bc747))\n\n\n\n## [1.0.1](https://github.com/sap/cloud-foundry-tools-api/compare/v1.0.0...v1.0.1) (2021-03-04)\n\n\n### Bug Fixes\n\n* integration adjustment ([#72](https://github.com/sap/cloud-foundry-tools-api/issues/72)) ([b6596b3](https://github.com/sap/cloud-foundry-tools-api/commit/b6596b340d50221feca2dad54ae112817ea6cd44))\n* integration scenario fixing ([#71](https://github.com/sap/cloud-foundry-tools-api/issues/71)) ([a9868cd](https://github.com/sap/cloud-foundry-tools-api/commit/a9868cdefc10cc60de255f9dfe5e38eadcba8d2a))\n\n\n\n# [1.0.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.8.1...v1.0.0) (2021-03-01)\n\n\n### Bug Fixes\n\n* pad query with current space guid by default for cfGetServices call ([#63](https://github.com/sap/cloud-foundry-tools-api/issues/63)) ([cdcaca8](https://github.com/sap/cloud-foundry-tools-api/commit/cdcaca869e73dc0d44d63f40790901f6fa896c34))\n\n\n### Features\n\n* move on 'v3' format ([#58](https://github.com/sap/cloud-foundry-tools-api/issues/58)) ([846bd87](https://github.com/sap/cloud-foundry-tools-api/commit/846bd87de88190aca88a15e8e2642727292cbdf6))\n\n\n\n## [0.8.1](https://github.com/sap/cloud-foundry-tools-api/compare/v0.8.0...v0.8.1) (2021-02-22)\n\n\n### Bug Fixes\n\n* bump patch version ([05dbda3](https://github.com/sap/cloud-foundry-tools-api/commit/05dbda39f2badd8c5d42f936d97337b7fe883574))\n\n\n\n# [0.8.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.7.0...v0.8.0) (2021-01-03)\n\n\n### Features\n\n* added cfGetSpaceServices that uses /v2/spaces/:guid/services ([#48](https://github.com/sap/cloud-foundry-tools-api/issues/48)) ([3831e7d](https://github.com/sap/cloud-foundry-tools-api/commit/3831e7d530e151f3b9970fb59acff4f9ed9329bf))\n\n\n\n# [0.7.0](https://github.com/sap/cloud-foundry-tools-api/compare/0.7.0...v0.7.0) (2020-12-30)\n\n\n### Features\n\n* adding service instance creation properties in ServiceTypeInfo interface ([#46](https://github.com/sap/cloud-foundry-tools-api/issues/46)) ([35b014d](https://github.com/sap/cloud-foundry-tools-api/commit/35b014da6225e2fcf350e2c7d1640d0b20ed6e7b))\n\n\n### Reverts\n\n* Revert \"Revert \"Create Dependabot config file (#30)\" (#38)\" (#40) ([7457929](https://github.com/sap/cloud-foundry-tools-api/commit/74579294be23b04bca4b75c725d42fd6a16b8636)), closes [#30](https://github.com/sap/cloud-foundry-tools-api/issues/30) [#38](https://github.com/sap/cloud-foundry-tools-api/issues/38) [#40](https://github.com/sap/cloud-foundry-tools-api/issues/40)\n* Revert \"Create Dependabot config file (#30)\" (#38) ([0f4368b](https://github.com/sap/cloud-foundry-tools-api/commit/0f4368b93d254788c7670846031d27684e23e9ae)), closes [#30](https://github.com/sap/cloud-foundry-tools-api/issues/30) [#38](https://github.com/sap/cloud-foundry-tools-api/issues/38)\n\n\n\n## [0.6.8](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.7...v0.6.8) (2020-11-04)\n\n\n\n## [0.6.7](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.6...v0.6.7) (2020-10-19)\n\n\n\n## [0.6.6](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.5...v0.6.6) (2020-10-12)\n\n\n\n## [0.6.5](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.4...v0.6.5) (2020-10-08)\n\n\n\n## [0.6.4](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.3...v0.6.4) (2020-09-29)\n\n\n\n## [0.6.3](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.2...v0.6.3) (2020-09-22)\n\n\n\n## [0.6.2](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.1...v0.6.2) (2020-08-23)\n\n\n\n## [0.6.1](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.0...v0.6.1) (2020-08-23)\n\n\n\n# [0.6.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.5.0...v0.6.0) (2020-08-20)\n\n\n\n# [0.5.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.4.4...v0.5.0) (2020-08-09)\n\n\n\n## 0.4.4 (2020-08-04)\n\n\n\n",
      "downloadsCurrentMonth": 282888,
      "downloadsCurrentFortnight": 136429,
      "downloads365": 2690939,
      "downloadsFortnightGrowth": -6.85,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 170196 },
        { "yearMonth": "2021-08", "downloads": 185917 },
        { "yearMonth": "2021-09", "downloads": 221040 },
        { "yearMonth": "2021-10", "downloads": 231512 },
        { "yearMonth": "2021-11", "downloads": 229533 },
        { "yearMonth": "2021-12", "downloads": 203626 },
        { "yearMonth": "2022-01", "downloads": 222914 },
        { "yearMonth": "2022-02", "downloads": 242426 },
        { "yearMonth": "2022-03", "downloads": 290467 },
        { "yearMonth": "2022-04", "downloads": 261119 },
        { "yearMonth": "2022-05", "downloads": 280663 }
      ],
      "versions": [
        { "version": "created", "date": "2020-08-16T14:52:10.218Z" },
        { "version": "0.5.0", "date": "2020-08-16T14:52:10.532Z" },
        { "version": "modified", "date": "2022-06-08T12:00:41.220Z" },
        { "version": "0.6.1", "date": "2020-08-23T09:00:57.798Z" },
        { "version": "0.6.2", "date": "2020-08-23T16:29:42.051Z" },
        { "version": "0.6.3", "date": "2020-09-23T15:16:50.978Z" },
        { "version": "0.6.4", "date": "2020-09-29T14:01:12.132Z" },
        { "version": "0.6.5", "date": "2020-10-08T08:31:16.685Z" },
        { "version": "0.6.6", "date": "2020-10-12T08:22:04.316Z" },
        { "version": "0.6.7", "date": "2020-10-19T14:18:11.732Z" },
        { "version": "0.6.8", "date": "2020-11-04T15:10:36.548Z" },
        { "version": "0.7.0", "date": "2020-12-30T06:25:33.561Z" },
        { "version": "0.8.0", "date": "2021-01-03T14:27:25.884Z" },
        { "version": "0.8.1", "date": "2021-02-22T11:14:48.775Z" },
        { "version": "1.0.0", "date": "2021-03-02T12:48:26.156Z" },
        { "version": "1.0.1", "date": "2021-03-04T12:36:11.610Z" },
        { "version": "1.0.2", "date": "2021-03-07T09:44:13.503Z" },
        { "version": "1.1.0", "date": "2021-04-05T08:38:12.691Z" },
        { "version": "1.1.1", "date": "2021-05-25T11:22:40.009Z" },
        { "version": "1.2.0", "date": "2021-06-09T10:13:31.302Z" },
        { "version": "2.0.0", "date": "2021-06-23T06:49:55.676Z" },
        { "version": "2.0.1", "date": "2021-07-01T04:17:52.094Z" },
        { "version": "2.0.4", "date": "2021-11-22T09:52:42.303Z" },
        { "version": "2.1.1", "date": "2021-12-07T06:52:15.559Z" },
        { "version": "2.2.0", "date": "2022-02-10T12:18:16.618Z" },
        { "version": "3.0.0", "date": "2022-04-18T05:41:48.348Z" },
        { "version": "3.0.1", "date": "2022-04-25T07:23:20.911Z" },
        { "version": "3.0.3", "date": "2022-06-08T12:00:41.150Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cf-tools"
    },
    {
      "name": "cloud-sdk-analytics",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-10T11:35:11.934Z",
      "updatedAt": "2022-04-06T21:36:29.614Z",
      "readme": "# cloud-sdk-analytics\n\nThis package contains the code we use for collecting usage data.\nPlease note that usage analytics is disabled by default, i.e. you need to explicitly opt-in for data to be collected.\nFor more information on how to opt-in and which data is collected, please refer to [this document](https://github.com/SAP/cloud-sdk-cli/blob/master/usage-analytics.md).\n",
      "changelog": "# Change Log\n\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\n",
      "downloadsCurrentMonth": 1679,
      "downloadsCurrentFortnight": 705,
      "downloads365": 28457,
      "downloadsFortnightGrowth": -27.62,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 2689 },
        { "yearMonth": "2021-08", "downloads": 2515 },
        { "yearMonth": "2021-09", "downloads": 2357 },
        { "yearMonth": "2021-10", "downloads": 2512 },
        { "yearMonth": "2021-11", "downloads": 1982 },
        { "yearMonth": "2021-12", "downloads": 1433 },
        { "yearMonth": "2022-01", "downloads": 1489 },
        { "yearMonth": "2022-02", "downloads": 2409 },
        { "yearMonth": "2022-03", "downloads": 3274 },
        { "yearMonth": "2022-04", "downloads": 3323 },
        { "yearMonth": "2022-05", "downloads": 2173 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-10T11:35:11.934Z" },
        { "version": "1.17.0", "date": "2020-06-10T11:35:12.390Z" },
        { "version": "modified", "date": "2022-04-06T21:36:29.614Z" },
        { "version": "1.15.0", "date": "2020-06-10T11:35:22.055Z" },
        { "version": "1.16.0", "date": "2020-06-10T11:35:32.215Z" },
        { "version": "1.14.0", "date": "2020-06-10T11:35:38.581Z" },
        { "version": "1.13.1", "date": "2020-06-10T11:35:44.777Z" },
        { "version": "1.17.2", "date": "2020-06-10T11:35:52.523Z" },
        { "version": "1.15.1", "date": "2020-06-10T11:35:59.610Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cloud-sdk-analytics"
    },
    {
      "name": "cloud-sdk-core",
      "type": "module",
      "gitHubOwner": "gregorwolf",
      "gitHubRepo": "SAP-NPM-API-collection",
      "forks": 6,
      "stars": 16,
      "addedToBoUI5": "",
      "createdAt": "2020-06-10T17:21:16.309Z",
      "updatedAt": "2022-04-06T21:36:29.835Z",
      "readme": "# cloud-sdk-core\n\nThis package contains the core functionality for the Virtual Data Model (VDM) as well as the Cloud Platform abstractions.\n\n### Helpful Links\n\n- [Tutorials on developers.sap.com](https://developers.sap.com/tutorial-navigator.html?tag=products:technology-platform/sap-cloud-sdk/sap-cloud-sdk&tag=topic:javascript)\n- [SAP Cloud SDK on StackOverflow](https://stackoverflow.com/questions/tagged/sap-cloud-sdk?tab=Newest)\n- [SAP Cloud SDK on answers.sap.com](https://answers.sap.com/tags/73555000100800000895)\n- [Release notes](https://help.sap.com/doc/2324e9c3b28748a4ae2ad08166d77675/1.0/en-US/js-index.html)\n- [All versions of this documentation](https://help.sap.com/viewer/product/SAP_CLOUD_SDK/1.0/en-US)\n- [Product page of the SAP Cloud SDK](https://developers.sap.com/topics/cloud-sdk.html)\n- [SAP Cloud SDK Continuous Delivery Toolkit](https://github.com/SAP/cloud-s4-sdk-pipeline)\n- [Example Applications using the SAP Cloud SDK](https://github.com/SAP/cloud-s4-sdk-examples)\n",
      "changelog": "# Change Log\n\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\n",
      "downloadsCurrentMonth": 1834,
      "downloadsCurrentFortnight": 747,
      "downloads365": 42449,
      "downloadsFortnightGrowth": -31.28,
      "downloadsHistory": [
        { "yearMonth": "2021-07", "downloads": 4491 },
        { "yearMonth": "2021-08", "downloads": 4293 },
        { "yearMonth": "2021-09", "downloads": 4182 },
        { "yearMonth": "2021-10", "downloads": 4111 },
        { "yearMonth": "2021-11", "downloads": 3644 },
        { "yearMonth": "2021-12", "downloads": 2967 },
        { "yearMonth": "2022-01", "downloads": 2945 },
        { "yearMonth": "2022-02", "downloads": 2815 },
        { "yearMonth": "2022-03", "downloads": 3420 },
        { "yearMonth": "2022-04", "downloads": 3484 },
        { "yearMonth": "2022-05", "downloads": 2338 }
      ],
      "versions": [
        { "version": "created", "date": "2020-06-10T17:21:16.309Z" },
        { "version": "1.8.1", "date": "2020-06-10T17:21:16.728Z" },
        { "version": "modified", "date": "2022-04-06T21:36:29.835Z" },
        { "version": "1.13.1", "date": "2020-06-10T17:21:24.558Z" },
        { "version": "1.4.2", "date": "2020-06-10T17:21:31.730Z" },
        { "version": "1.0.0", "date": "2020-06-10T17:21:38.967Z" },
        { "version": "1.2.1", "date": "2020-06-10T17:21:46.005Z" },
        { "version": "1.15.1", "date": "2020-06-10T17:21:53.133Z" },
        { "version": "1.8.0", "date": "2020-06-10T17:22:00.750Z" },
        { "version": "1.11.3", "date": "2020-06-10T17:22:08.190Z" },
        { "version": "1.15.0", "date": "2020-06-10T17:22:15.850Z" },
        { "version": "1.7.0", "date": "2020-06-10T17:22:23.632Z" },
        { "version": "1.17.0", "date": "2020-06-10T17:22:31.235Z" },
        { "version": "1.1.0", "date": "2020-06-10T17:22:38.888Z" },
        { "version": "1.11.2", "date": "2020-06-10T17:22:46.255Z" },
        { "version": "1.9.0", "date": "2020-06-10T17:22:56.154Z" },
        { "version": "1.5.0", "date": "2020-06-10T17:23:03.947Z" },
        { "version": "1.12.0", "date": "2020-06-10T17:23:11.302Z" },
        { "version": "1.3.0", "date": "2020-06-10T17:23:18.892Z" },
        { "version": "1.16.0", "date": "2020-06-10T17:23:26.639Z" },
        { "version": "1.10.0", "date": "2020-06-10T17:23:36.812Z" },
        { "version": "1.14.0", "date": "2020-06-10T17:23:44.628Z" },
        { "version": "1.4.1", "date": "2020-06-10T17:23:52.295Z" },
        { "version": "1.17.2", "date": "2020-06-10T17:24:00.043Z" },
        { "version": "1.6.1", "date": "2020-06-10T17:24:07.606Z" }
      ],
      "npmlink": "https://www.npmjs.com/package/cloud-sdk-core"
    }
  ],
  "tags": []
}
